%!PS-Adobe-2.0
%%Creator: dvips(k) 5.98 Copyright 2009 Radical Eye Software
%%Title: asgn2.dvi
%%CreationDate: Thu Sep 26 22:00:57 2013
%%Pages: 7
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: CMBX12 CMR12 CMMI12 CMMI8 Helvetica CMSY10 CMR8
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips asgn2.dvi -Ppdf -G0 -o asgn2.ps
%DVIPSParameters: dpi=8000
%DVIPSSource:  TeX output 2013.09.26:2200
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: CMR8
%!PS-AdobeFont-1.0: CMR8 003.002
%%Title: CMR8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR8 known{/CMR8 findfont dup/UniqueID known{dup
/UniqueID get 5000791 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR8 def
/FontBBox {-36 -250 1070 750 }readonly def
/UniqueID 5000791 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR8.) readonly def
/FullName (CMR8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 50 /two put
dup 51 /three put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9928A7C95D3A6E9B
8E92F84CA0AA44461D2F4FA0F8B81C6F5B7BE98C9712BE166610465CF689DFAF
27C875C029C0116DE61C21DA0092D029E7DBEDFDDEE3D67E6936623AB53FA2AF
18BEDDD7AC19A19CADB6ED6CA7A26E6044BE414FFF59C0B98D5819A6B881F9AB
7AD0D03BDD5CD309C67811D5CF0B93F6FDC9AE64F74ED4E81F2E18D880BD842A
DAFD0BDF06300201C6946087FC0B999447BC370200BFB8CA420B668B32EBC242
6DB1546A7164CF55B332FE9D239B65F532B69EF9F4F93828A44C8F5C526126F8
B7A369114CA68D4F98638121F4E17F351723D9F1A902FCF087F94AFD23876517
2D15B482AF2D68C3F31FFA864E031596E597882578AC7FB0DAE2A713B065B374
3E2E72519ED6D50CBCA40A7275A7109A4F3ED8A4566AD8832890D3D1F4899850
9B757442B7EA355175CD5D6D8B4152ED2D7EEB4CE30F174FF672140354046A45
7098EC45B9DF3DF5CF7B417E201DA88308CEF4CED8E8903AF24FB8DD0187352D
25738519ECBC70304F8F620CC45D2586619205DA3955696FAFFE2082402B3502
CB682F410DE5FFE80A4DA3D3BCF02E35BD577D0DE55E7B8A33B7A2FD5136B5DD
A0BCB61F8E7F4363C21F890CF287304DDB8FCE7FE207C0D160B81E7EA662BED2
DFF8C444E19C91E72254257CD87240A70F1A964FA54ED9ECF27E27A57DACC3DE
EABB92C085030870C6CF5C40B6E47F5C0AEB30E84A73ECDABB2D754EF6EA28BB
16EBD6636BC288E62F4A38BFB55F5F4DD20FDD77D767F6CB52F9513E8EB75413
07F1877B2C01278675177499E4E8EB09F2657821613F5C7643FC064293EC6E9E
B519FFAEEA36B19C9D1302CF91FCBF87FCB57C5F995CB6712BB3D8681EB6F05B
B2A4195A3C73CB4ABCCFB958EAC533BD89560D2790CDE1444C0F2E4EF27A529C
F01052964E56F6D76A190E5FF45934BB711A3406284AF130D4DC0D8112BB3752
762CA0200CA262359D4F54C0CCFA9A50DE18C7DB14419E2990ADDC4A54B94978
D9174CA39434022FA77FB30179EF805E2189C35919F5EBE215EE2A00B4407826
CE56329C5586D8B414770BA5D45513C3AF1931D632FCE69B4CA504944E03362C
74A1177C6398A61A12DAA0F156543E2A8E9969C4308B7ACC21A5ECAC8F172541
1B1316A88C0C163E574FFD3CD22FF08488662FCF2F9344BC25D02146F36CA6F9
E2D0130C654B7485EEA9A110A33AA0C769121F81821E9A2BD062FAC158359D44
3F9D9947200EF1EDDD5860F10438B162A69683957300C75AF7546C70C97AB2EE
37EAAF0089E2623F787F252569B06C665FDB45EC9681C0774ACFBA76B98C4E89
7EB12AA5F8798FFC110B49C25E3A483ABE83B0BCC6DF0578403ADC369E013762
C9D08FC94D949BAE636ACA9F36F4E3F02296775A062077B011A705B6F1784D36
A926622CB3847533D7ACB24A4EBABB14593B5D8E1DAE2BFEF8A51835C8D4E76D
7543C126A4271C59A5881A5AF89331694F84489CA66725995DC3070F306EA447
CF30F63CD476A46D528EC1FFBFB8EACFA2BEEDCF54C92CE2BD26DEA5827186BD
3A4D1709415CEE7D51D671357B4A5D11E835F63521B9824EE5282E58F05A8ACC
FD249461181A38C2F47BAC4E79BE368D64F886AA493C61CBCB2ED401C8AFBA61
59CA6F6216D941A92AC52ACB3D7ECC28D6A58EF4CC70BA6DE23E80937AB38E89
6F05FDD15B954C0826636267EDAF9F2BB466BF79D2E10EED9B04297E6BC93069
79581ADD1A9D9FAE9306F46AC95B98C60A2E53D60CF1AA4069BE301E17E25070
F98DD67BD8642B1D07571A32766072E48BF27E1576FFEED300D7313A358A823B
49C8F135961B7E259095C9BB67F996CE0B90E95344F203922F47E11753F70D38
2ECB615403490310CEE6C03AFA97DA2F47ED47125D110FA69725BA0018F6A40B
29A307FDB3E52322A77A0102E6F57654CF1E96A134D13860D83AFA0A41112D3F
2247A09ACF7D06713BE443FA27C7E7220E875965D53030FE7D2D62EFD2F1DB87
5FB091FEAF599BA8C5167525899E578AB341BFE2BC4E53A047093168AE189237
EA55F055514EFA939DAE9E859CB5FBCF37D99484F44FE5AA5FA386B28BB642F5
5DBAF059A50FE96C7C6D834531D64F1F2E99AB2E96EE74D149178B1C0618495E
293973D9A03E1790654B67C0882376ABEC17D74785B3737D81644F28B3BC6FFF
F92FE29126995A07E0BC5EF3A4B93789A103C428943E045B8D1A5063AE71E806
568D48072E53DEA85253B01DF0BB7367A6BE4DD7BE514AD74E3F77C825ABA405
64DAFA25EAFF8F63344B5F6B523629776CEB090B546469F6A6008DE43072DD3C
DEF51F62731037D1FBD0C038A1E9B669849EB3BEBA281624F13D20B61917A109
A0A7871A73F7BAA18077360B38A4625C5DB9AB9E43BDEEB856FD0E2D3AA2E075
267B978B9EB47F2369302E87DBD5D5B422830BEC32411FE75D584C58650EFB1D
136FEB92B94BF8939FD63AFB7349C7511E5E46AA7324F8B1FFCA9C2A9E9720C0
A720918E8E860F137567D386AC29870FD990BD69465B3A3D2A0ECF2753578AD7
80DC87EBB319EB5AFE0B6F6FF8616EA30C51425FE3ECBC5F8D0B0BEFDEF32FA7
D168B4E85C804B7326A0942CFDE732B1171C643452B7099B31649CA2C38B62FB
46EBDF7180004C549B53F88021D029452C2B37D8C565BCDB0B11541039A13C0A
E45D4B68C7907B8BF08C6F41F564B62BB554235D50330E78DD02795516D969C9
66119D718798120442CB7EB9877FF84EC69DAE25F8559DCE3BD8042959F695F8
2F99845B1B5680DDCF181D806CC4903E077D1FF5E60918EB34C0B1E028422B71
CA63EFBF3F4F3CD813CE831EB54265A555BDD35AD7D723F9CFBDAB29C54F8AFF
2D35C6A3299E0A2DB470C7B141B1E3E10DABB7873AE302926BA8743278FAA8C0
DC6174501D6A289CF980A3F55F2DD5C3A514E7E7F13133C35D2697D64C25130C
DB78FC997968D6B3BC929E8A31B6D212C5128E4412632BC52B3A1049F7F2F61B
C74AE9A6AD19B9E2E240617E2882F7D29ED3A4279439107AF9AEBEE47CE85DE5
CE9595A96A118ACF1EB1F5929930321AF7732E351E18C6AD378508E37B4C327B
0E06AAE21278AFA9255AFE5C022034DA2968D260879B4B38E7EE2E11A593DC3F
CE71ABA050C004473324CAB6F3C50E85DEDA3E9A27388D8FD3A8F6E42A79670E
F7549CFAD4CCB337A6E0BAA4846ABCA059F1E1933CF11DC0FFBFF550CC4A1B47
CF7BCE0875FA747AA854534960F757884505A5AEE0330179A9547A4AE3E68479
7A457DE83326DC30B67F27CFD4AB697601CEE352F72F0966B3CEE3EA24683BEF
6D23AD51B8432C3F0DD0D0F80791E1091F38988B7A54E466A9AC7810DE8B7893
6B0AA6356597891D56190A7660BC7F657BC559E0525D41EC228078F2FBF89C6C
72D666DAD838CBF0861FBF0A1D4ECC069AA49DFBAE5C56B781A1D5D79DAAC256
13E3F9B928A2394FC71691E4355642764459714412D6F8EF803FC5F7353822DE
6CCBB8FBE5AA1F2C7F4D384039D85E7728527DF9FE0239E2CF8BCB7411C000B7
1FE660AE6A2A19229E5E8776CC83EFF3C27403935756463EB4721C51FE0B1197
86C2F17842A0FB639F28083DFD4F1E86D7D3BEFA922514ABF489C5CCE93D6F72
D2EAAE14F6CBA2BE4BBE7D7EA8EA19DB3A87350D4A52064137C3D15A5B05B03B
70B1DA7328D10713B83974C390C3270AF5A9A47C0BFBFABB9F31063B0CCFBB10
0F236C74446688198EFF039110F6FF42FA9F82D463AD3958B5FD205BDF85DE20
FE3F0C7AEEF350AEE6DBC1DE2E2DA4F4599956F59D6F121F7086DC120416E180
52DBBC4E56C09746938698860F30007091E1CC0351B43990E47208ED495310F5
7BA9C6AB3CA10A3F1B318FD47C1CE3B9FF1304321F9623E32D315AA9CE64B35B
F841E6C62B5B2488A311C94937879E5E0E170FA77AF0AC75C5E6E9F3E8F825AA
09C1702682E14FDFA72D27901C5BDE009B1E52E8C4511C6F6336251BD45261F7
401CA3DAE7C4B0CAEB91B9954BF4A97C48ECE7FAD401351D59DDAE9DA94E2335
74A2B880E4749D3D7026CB5299F16C204B6E00A20A6619C34922C7D3FB50F127
3157CFC08DCC5164C8023CD1B6C3556C73CB8E4ADA845339CA9BABA1457ECEE6
ECB9849DF1F0FEBC89E5F97C92978A500196520839CEBA6C0FD2E3D27BB4B4F0
93CB2BB565F4627C6DB62DD0E084E627D69B5DEF42EF094381B62C0D67EFD197
301B132420F51A41561E6106870147E0D597078435BE3819ACF0DE28AD779847
F3D2CF667DA06955D53E0204CEA2935E9E984E76963D3079EC092031E2A10E61
1227E5EE6770DD4D745A52655369EBA06A19BD7D95BBA271E488241199D1008E
36EA99F8DFD2A9F87B06B070158B466AA4C6EA3BA77DB0F853F0BF9A304EA291
34069714368E0B94DFCBA3BE5EDB6C8204DFA7EAF5C3406F60A7056407D1BF6C
CB85C1F432F97D821F5518BBA79AF8453A568FB2C2D025A70CEC75F46C545011
ACE3A99B2582793BA1DC655230AE2EFD24DE20A01D4A441AFFAB7771F223FA6B
9169849E727E494247F67D6E1EA9DCA06A082FE2094BD548AD7F08B565145634
E7ED832FEC1378306DDC796303392ADB0CBA130B63B38ED57B7828B47732853A
893E8836FE19CCF27002AE92C2B2CACFDF8A42F1B8066E033B965D2E9157FDF8
E1264B40813C1A4CE424274AA3528A4F09B3B53DD4D23789A68B3D17BC1398AE
0ADA2C2168427A49846DE0216908C2FFFEF4F13C1ECA12AD341E238EE46E6DC2
B71B54C52659632911F901660261E493AE2483D64E119D9924489779B62BC9FB
A052E822FD8D83178E09ADC825DF0DA07FCE7AD68EEB29FAA275A13691B4A5A5
B0BC0499CD6307610CD6209583C1152C559A2760823F8DC0B9B990BFFE7B7E9F
3969B968AFEAADB9FC0F1410EBBAA0DB979CF153F0B8C978405F8E6F2B6406D7
AAFBF4A655A15DD6D1E9A7EAE10EF89264659B09283F50B734236885FC09FBE5
98D780012FA77FCB19F15BDC522CC7312546C0730EF5225DEA8C22A3BC6554EF
4FE73B9AEB5C2F7DBD474221760E5F539A064AC450591BCF3499E3968F2CBD6B
F15BA2B37080A4129B66D4C2188524F025414F14DB3F96049A8B0E5EB2BBE7A1
AD64A988FE875FE4FE5186BB4F5DDA16983CB052D474B7D72F3E8965663EB50E
015C72407C3437142D3D7DBC055FA627139488DBC5A0F98D805C2143D99F491A
167E07AF60EC9F17C36289368D740B632CB919A0E74C412B76CE7A5906D5200F
9E79CEB9C65ADA3A0F23E8947E834AE7A329A9F0AA7A6BF545B1D7B4666C6522
CFF268634EA06DB3A82D91A4C0A9B227E79961212881A54A6762C335DE7E0831
130C45D94394D21C049B9D189ED955438C2151514F17BFC67E431DD9A8349202
2F616AEC1C7B19F63D5000EB4771370924BD4B9053FE78B5E4A244B9A149D66D
A8BF3B398396D2233E92E4A5FDC70FAADEADAFD255193D688842DBA865CF6154
C9348D590F3FEB135D4B7BD4D76A52CB140888247CAFAB25ED51F4D187041CA0
ABD956F83A5661CEC171B52AF92F9ADE27973B560C802E1E0FF51C4003D1289A
CDD09F8EDA8AFDFF666D35418CEADF3B0BE298F0D1E5C8E024D6A2017A7E71F3
3A9FEC9930F1118101E040339F9D41379170928DDF5B5875212B271DC843F612
E0C21C67263186E3D6929160464D4D5C8928E14D0845762C36FFBDE548188E20
3B6BAFE5EECA0385142F01216FB8A90C43A472C1D4447FE5C7C78CC088FC72E7
3FAFA062C338BDE8A430FDF1951B107D8D73FF9376FACDE5900BA362C66F8C1D
947F9545C5C13A53E4479B1C1A50472C05E8F8C266C6D4F4EB08E97B3B1BA972
26973B844545089C5732322BCC9A5A8FC972FA0D7DB8BD85D2F515ADE65DA479
0224F7EA2276CFED0B75B2C23AE7377F86F1F6F205D6FE19377D87E782143697
984E731F83CA888199CEB425643C259D4FB8B58DD69A96085198306494BB497E
FE7C9954EF35B679BBE3847A9C73507874F71FC97665E2A58BA41407A1745247
44A79B588D969D11CE4B863CDA655DAA53CEA5C3C263B345E782006CE9831D49
603D2D95DE9E370D617F5928BA416C362BB2B4DEF16A5D44BD24B34257765F3B
6223B3F9B54DAED69A90C7050AB97B06693D253C6894CBD7B497DA449F1D9B7C
D91B421891EC0724F59C82B9CB288DC42F2D2D7A7F22EE3D910E15953D7766AE
276DABED3820390BAF2700C4653E1C77FE63DB71A66D93ED293E25B8412A1EFF
809554BF04ED0DE83F7F190883ED793803CAD2C34A66524D3A580ACDF3C13B22
08F18905E7A4A16DA9ED2A112462FB9FFE481EC2069E484E8BBFC19D594153B7
3DED4C11762223B7586483B06BC164D824D1A6FCAE80A35DE0DB8B33396771DF
76DC5C05578EF1BE00A70BAF3D951A01C87328DB2B0DAD6E1B4C21F37D1BC0C5
A929BDE5EADF20DA60C4DE2E3C151005814F24824D33B95F700E09A0207EB602
3EF60DEB1622B91DB99A855A8F1DA96358F05CFCEDBDDDFC8446AE3391BEEC41
966E594E28D052DD5ADA49DFF65E79540EBE5329DFD86C23CC800F95221B9C18
CBBF941D2FA47EF1EF59A89DB5DD188E75EE94AD2A79E2221107E5992C00D531
2E00B544895A9204656867E3DE9D4CDB64B920B5CCA9A73E6514B36CABAE01BF
94C15603B86780190595560F792E5EF01650074EA4A9BBC6ED284B9AC2020641
DCBCEE0ED27FE58171DFE104EEE4202759E594159DF45113C00236127A46FB35
9EC705F21C0E456C1F0F924594C09AC64D4377C5FEEF764BA4A09ABA8D09DEB1
FC13B0CD202B2F04CF5D73DEAB65C36C2FA7C0DC236BEEF6D23BFFC9C493DC8E
1831F19EEF81EEDD976E43BAC6B5CED13F901DE59835FC75490EA528A72CEB77
24C38B258EC38B9E6B97F85CA8C10D8809BBE55A6FAA12456FCAC786942E123C
06D1E55F7ED04400088BEC968BC5081DC7A1B1B65166E7821679F76694F235FC
6854C8776AF855B83445D9FF919B1D80E98DE0741D06D6C5EEDB3E3EA6392530
F1BA817737D8162F7B3A36AC2A03190CDEC654383E31934C3E0A012B639532C6
26FEBE9B412F1C92D1943B7C18CEF510729D501349644C97F087F2F840074AE6
D8CD0FB2E620FFC908BFCD938B675A0A4A687F7FBE8F3DD06A62D7B6DE7DF3E2
49D367D60B10061EA86CD512F5A1BE8950D83C62695E130128E0037B62552D17
064319BBB9B1FAB9D79705E5D68AAE9B36EA14BF1A59A863BDB8DAD9AB5D7B8A
E30E2B499F952D65877C8E38EDD7DB29F9579D09E629AC188DB6A6403AB4BA3A
D358B3770D727A2B77D84B6C9EC17E29D88E3421F9B7D2D822EB78BB8BB50692
8C46DD6F9BBEF2E848A2B5669B200019802AD19661537A84D3514AEC5AA47445
2C791E01DCEDF18D9506367241255FFADEEA6183F51A9F42448A7DE413C08359
52DAD2A60FD606AFE14702BD3B0EC448720FE63438D020DEDFCDE3582FC31DF1
17B25FC152789D2F17FD60B8209D292D2152DCF8D28B5ADC04F6659BBB746CDF
145163361823CA343763AA951C640B5D4A99B7787105A1609EDD6A596EFC3F6F
2FC33D0D499DBE56C6668E137715D435D6B683E0113647B2765AB0F3D98AC717
5B33C3EDDE18506E73B4E392B022F30480BD30F59B2E3A59D93017296C3156B4
B5722E1955777716388AA987B2665669716F866FE6BDAD5E74A523CC03915F26
9B7B231F5D9B1F61DF7CB01ED3F27070E36547B263855DF5B2E3ABD2ACC440B9
0826E1DEB8CF0BE87C59313978F28295C0E3A01D2B5682DA86A38F390982A8FE
C3E81B8D3532C92C4A4A4BCB421D248F786EC50B3BBBF3BD829F18A73BA4F676
4C5EDA59C34FA85648E492C5794D0910F67F9B6ED89E5BD09B9DBFC65046D77A
2AB706D3312335A3486A067593EC0DF7D334F5D37B818D991D1666459120C75E
6D21A12D75234C22F4F92A4EC10C056298F89550F48605432133895D51B0AAA6
0A8E4020C84D14E4FBBB9E7C095468EFDECD7BC8444DED90ECDE07F2518CCA84
78935CBF8B620C324A87D6049942E772A1FD7BDD577A27869C88841C83D4BC18
6D2FEFADE998BC7D9189300F7C7DBC3F666FCA9D53EE447E310BD22EAD502BDF
33D33A50C61F575E1D3A1F70B8D72F34A9E9E8250627BDDCC62852DD37EB92DC
93D7CB4409D10AF291303362483134E434F682BCBA364206F55EC698416AB3B7
04C31B1D45882A3AFD4037A692272C4ACEFCF08389ACB43A6857C369CED4BBC0
2C487C9A30C787BB3E003017AE803E93C77E413CDEA8563EFC875A95706C980B
1DC2638914FCF6A9BC11CC2CEF0AF3544D2F74938FB2BDA52602D1693D93FF4B
F44DFFD5B2ED04F22D23804CB869CA04480363D6EF55C905D384CB11A28F8555
F2641801E97E84355979CB41EE876C9845
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/UniqueID 5096651 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70EB02A
60651FC2E263002D3986B7B20CC2AA08330B9FC2E26765CD52266969A86EE30E
71E0B41B6C1C6DA423D3A7E1553D2FAF26EF40DC183099322D362E4965695C52
9FC3E5BD7ABD743CDCB717DB10372A722A39CE53FABB454EADE2179C4CBFC016
A8E893C28EF549CA1692C8D8ADFC471DCCDE266FB4E97A1F3035801F3F034D44
AE6ADA0192657E8078A1D27420093FEBA111333314658021B90DA4E7A8D4B829
F1795501020D5FF0AD25584C1D491A1FDD60F7230D5D725D21F531072155D5CA
12045C71F375116E93825D964FE24E272B239E8E12DB85368F11963CBB4E2B4B
EA559F6A1FED7DDAE902017290E4549337A9F6CC3109F1F858213AF70573323B
78B9F56D9A2D6E6BD0FB038E6B0AEB661D95D1669D49D7E93A21C76C8E0B29CA
73D10BB805BC9D2D488FB292E1D014B47ED472B3DD4819A2CB3E370EEE819BCD
8C722A1D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI8
%!PS-AdobeFont-1.0: CMMI8 003.002
%%Title: CMMI8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI8 known{/CMMI8 findfont dup/UniqueID known{dup
/UniqueID get 5087383 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI8 def
/FontBBox {-24 -250 1110 750 }readonly def
/UniqueID 5087383 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI8.) readonly def
/FullName (CMMI8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 65 /A put
dup 73 /I put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 105 /i put
dup 107 /k put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 115 /s put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBA9B440A6DD72BF8
97084C906B05FAD969086ED21AF0AA1471613182B26117D7494DD9F9270EF3ED
8DA4D957225F75D060237B6DAAD5A0AE3E702B3D1C437835B93B8AF1F9E7D966
E739CF3AD5E256F90286A34069E5BB4122F94F18F3485658D0D25B938522A879
8215A417CA2CBD20F71C5C5FCDE21EEA7BB27876D93BA667868A419287FE59BC
F538980597DBBA743DBBDBEBC61E3286DA7977833DC8BFC5E52FF5DF5EFD9A92
D070EB769E31E760A50FDE012DC0057835E8B9B046FCC83F1A0C40326AFB4E3A
0CC3BFA35FCC64E32854F32EB7DF10A19F95830136BBB8139DE1663B7FD790CE
464EA431AC109FCA0E03F3E0D355FAE20AC8774D6B1CE233C27680C77DDA7356
560A27C75993E8C980CD1E3B0683F7E8A05119B3AD567DAB4851B66E418687B7
F9B21B3BEF607918D5973421B68E65DFD8B6C8DFDCF1CAFE2637D365148EBCE3
FA4CC00052A2A522205EA3AE3461CEE02042E1A3F11467CB6C8C849B200CCE3D
0BC188EC7B934CBBC0AE2BF5DEA228181DBF0F774119F313516E7D97FF532621
9278F856C166CA6547504F34991D588A0631A5CD06363F3FEE9FA0772C783447
ECD0A200929CB58EBFB6B72008E4082B5D14AA560C24915B9463A92F38237886
C35CBB2D4DD6D0CA8C1D4EC46093041C6181C2F6586EE3E7D4E647A107B6DB23
DAD9AB5A0C2905455FE58075EFF6B48597078BFCCDD84812B98986F34987CE49
7EFB19814F2A58B0233A59331F6F8EB66401F04EE7B1ECAD9BC90A2BCEBE213D
DDDB1F75C83609ED6A669A0CED58B2E269E76ECF73616D94F13CF827C9BF354A
E82202988DCFE856786B8AE569AFF3105B55C72C58D310FFC0E10B2ABAC8DB06
40D5F72E54770E9DED1AF4616008595B8481E3D9AF4191CC9A5BFD9DDD01C9F1
FE7165D21E488DB40879E863D470CB31CA06E5B5F1F8C3CCE04B697CEB0F3557
ECAA358D2EC2B370519CE06138FA702314BA01F1F33881825EAE1230098BB3C9
59666983275CA4E8D9DB34979F86535577E79393A72F84B0F768FE8C92692907
15E9FE9894E98A0EBEA490CBC8C7E5A9F3E43B24C2C5A4BCD71DAAD3CC0B8B82
AC13933543E295C163F61C9FD18371CB514493F90BF7FB460C029B8DD2E2BF05
FD66B451DF277864DE1EE42100BF29E01A50258C2758F3EDE211BB3457B8243C
20BE72983FD6FA2581C5A953D94381E32E80D6D6095F2E93A5455C101BA71E8C
E560D4694E4C167EFA25FB1E9D214AEA745CE34CAA5468FAEF8F6BDB6C6BE8F4
3D58836C26A2392E4C4DECE284A90DDB3858A16D6135FED655A600929DE71605
6CA32F6851A2A6F71A9DF3D5D657593BB729CBCA2F4B059365B7263DC08AB211
9C547096E6427F6AA53CB2EB87DF0AFE2ABCDBD15D7EF228D3396413B83C6B4A
79E41F9BA55A2688F62A10472675E5658F151F9FD6634EC94EC0682C17448024
CC1633077C07A93E4DA8749D974FB8F4332B5DECF97D749C10DB60D4C90ACBFA
E65AE928C88BAE19234690EEABDB30BEDCEF2660D7464D5071058C30C572A2BC
7DEE5384BD7614A4BEC4C84E18CF7EC81C810256E8CE6520466C033E2A36D3D3
5D6074B3857415011D8D9D49A474D994571CDBB89AF92BEA879BEBAF67663F5C
17ACAE809C2231EDD0A76641BA52FA7B19A2798D54A4A9B62C42F9905851229F
2CEE0191C8AA5AC12BB0CE9E5E3E862683AB57DBB4AAD6AC0FA8BA4F408D41E0
755F72B82B7C18EC6B13995BF7AFD66AF4BA0EA7523DA8B75EE751744EBA9CA4
4E8BC1FB37734503A5B24FB9F2C2D07A47CFC477F02413D55BD7DC180B0344E8
50248801FA6BE26C97F397797F5F9DF762967E7CD92CCB8B2E587C92177619A4
BF8046CBC72C6E69DC78B8CB6B7381A290080EF59F5B9F29C1167B261C932E9D
010D2D14BB425D157F22BC0305770AECC5BC80000F8CCFB9930255A68F299ED9
D3B5B83A2CC00E3305EB281E1A7054734661B175C6CA0AF168790985F173DF03
A8693B677BAFE23C3CF833FF6463B136FC370E4F0C29E322DBEF637F62C33CD9
B0A8338FD67EC628E3BF2FCBF7CF0347D5CBA1DBE6DE878DD670176B85F69EF2
3C5CCA1BD2B8A385F113EF1CE522F5A6AE053B9C1E39408C9459DE3E7FE2C4ED
77F026B0081BB80D40185458139C16333EA27F43EF1204BFBF80BC5301B2A3AD
B10F7EFBB4F5B7E04DA1167F68BB6D4049440B0F57385FF0A95E72760C6A12F8
1335BB31CB74081FBAA319180DC00113CF50CC5A41D2E751E055DA1429CD75BB
0060C21CED634FDA106C49A12B356129D010E29F2919301AA7F80222AF3905ED
672FF85C9897A70241E8DDB9A53034B6BB44E140D9E739848E7A782F24B98AC8
00DA09EBE4532787E5CF3ED815705F659D8E52DC2C2D4949374A3BF192BEEB99
1D9A90A4F3250BF8A1FD40D91F5B34AF2CC561FD02FED712500B24330D87DA9E
4AA46B6E34BCB40B1F73A1DDE07E002B9478E9651D2BF85E67585B6ED812BE03
A594874A235B1C1840C4BF4BA6D863583D8C12DB49EF7F8CC24DCBB6B21FBCA9
378F3E2DC406291AB324571F76E0805DF8826090F0E8B50599CA58D124653D16
16C782B01C91A6F3DA6346482E3163D28D95EA49866360147296838A3FD0CC53
920F91D895F839CB61FFD2FBA296CA4C6304EEE579782AE5FD33D0FA652BA7E2
CEC7C01DD0D3E0D56E6177EE5F609A396F7FC8EADABB465DBA7F384E215C4DCB
E64F807A50A461545107F9C3F7D7CC7D33E6EBD6D9228B1DCBFEF160703E6129
0DCED8D45DD54E2A36E698A616E7906A50901E453BDB2A363EB77144E9EA6F2B
6BD927495EB0EBA5755165707CCFBF8759CE5856881117C7F3EF6D494EDDA7EF
E499BCA56C86467AC573DA9C2724FCC74BEB331E736FB093DCB67DAD42296655
415D110F2729BD1D55E5C9CCE2E724116F45FB2E66AE0F790258851A5C808762
68B8A110BD326F8D3EC45004E7CC08DA42F6CB80A6B6E7C286F139534A275BCD
2F812993DD9C9A1AEB5E7E4BDB4805DFF3A7030263AB060C9B74F0C25C5B9005
965284884450CC2815DF28D5F9B0496DC7A3AA85E1E42741E1538797175C28D9
FD904699C771FB066397FFDEE8E8DD1ABBDF67E6BFEF95BB700A7C1BA91354C5
42EC3864F6E19B379E79A1CC3C786C0DA146C6B0B8E507ED58DBB1F12F613A98
0E1F8967991427A22ED323901C4B83336CD343212131E8B59C2F5D232702ACC5
7891BFD4EBA5D0FA35AEF9F3520CA82D121BF6885BBDAF15248A9E4649ADB94D
0735CC4D14E1D7275427D00C8E709579612F7F74DB6FC218C10C278CC63E2AE2
37EC996B10C0229D687F0DB5E38A8C4DAFB3DD8A9E7ED37186FEFC97790A1EA6
636A88FA9FB4D282234BAAD301A1F3AD33F252C5EEC49410562FC52809CEC466
A0F6D148E9AF19D6DA2337C8283FBFF6005C37AAEB0B7F7217A8DC6F949B9984
72DEF163E4D5ECE4288404448C96A7FF0AC76F732D50AD63A1D286C9180E80E7
C218B1F48E3034FCABA6BF262CEECC284AC29E9F3CA1CFC1639A681ED66C1FBA
666F073D45C84A286E05FF809D4764FE819B6A330E73695CCF2F448B4D4EB4B3
F63E94EC289807A2F9A1159CF328C002B467B19D6E9454CCE36FC19E0A214190
B251818DD456EF658B0398E275514B72D9C1DA5F806EABCF1DD56BC025D69FC8
A0C2FAAC1892B64D2AF79EA2F57F103CA623E440307600D50E783FAA998EBD40
51D23A0CEFF8D8649B48B982DC38D613F882DCCAE5F51233A641B3CFD783F830
D984F116DEA3ED8F0D3369AE629A006BAD4523F8E3C7C6B39A6C972508B67AE9
32613F28CCFFC4BBC86CF31A0C25C786554F7A1F3DE97F5CFD1A941F775067A4
784385E2D02EE1FF886701B1E87D966D3F500E15591A5012E645837FE2DBE3E6
A3D375C6CA0ADBF96B33EC3FCFFFD888D7344B31D40427B8A8BED0FEC6FBE038
1FB5F0714C4B5A0E607E215B5B7F76ACF0FEAA4C9790EB7E13C0E3933B7C63FE
5B934EA34F4B741C3667BF1735C685CECA63507E6FB9EB06AA010311F12AC1AB
4CE3FE8D1EA1EDB3C700BEBA516FC71D740B1CA1A60D4578003973CC3EE21DB1
58FB1CF7E2EAEB2A4A6C742EBC3575EE6378531C6EFA6E6986E68B8E25CEEA67
A59623FC1ED2ADDA9D72DBA627D179E47DC7F5551E07EA4D54ADB6CC8109D340
7279F288E552EFD79C17DA3431E53EED66D16F24BF86468C2FE7EFF421560500
12FB048D6CE2F370BE4E560F8B4AA12362ACFEBC839351C1D5100C625B14CFDC
747B66082D4AD5474A63EA0054E9C3E6295AF6B133348487B0471395857F4B73
4BF8337DCE2FE2E1A4EAD7E7BEDC822BDDCE42B79B308C11897C98E3ADE253CD
09CEEEC0CB1DB66AB072E36E1E04911F40B535B0FD85982C21B8A587D65C38D2
DBC5A07A0A26DFFF7460F10781069490AC1B611CF7312A14B4AA6005A4582C5D
336BCC30EB47749193BE8D457A43F54204B070DF5AC2057B6437E23705C7FE8F
7BB150560F7044BE3E48EFDDA539FEEFB0D2A7856CD4E405FCE0F5EB190D91AE
578E2EDEB9ECA218573BB1A8EF116043A27DD17A4047BCCC7C5F3C563A910778
45ABCA32C7347E6180ACC86F9D665FF025DD8AF514FC3724B5C3510F3C37E0AC
5101D1667C6ED4E8F37F06CC2BDF66CB5A9FB7C52CAD26344FD1557571336A1E
1E340EBA149B4EB99016D1A411FB874914AAB2A415CE3F5FDFBBF5AFD7959B9F
CB127BDC68D2A2F3F07FF3D4FF32046C0371CD2E68A6471E46B08413FC3C7A80
A107EEE57979DB387B2206D2810DB310B7232B2DAA385256C8A58964B512003F
A0C24ED21809E2576229627278118107B9C32345C1EE8C0CFB452CA362379369
31320DEB5371037AFAD093B61E8AC7A6DCF7D49C7F8EC32DC0ECEAFD7E892810
039570D2956289B15E078C2545911BF535F72F7DAC619BBDEEFA855BBAA81704
18F7D351B0936357085A32157AD8E27438A58B2397D69264E748B0B8D01B33F4
D04DC59326A7DED39E247A1C1A1AE49382BDBDE9478A1CB48F88BDF14A268B40
A40B9FBFC4C87FD3DF1EB2464C3C14E36CA41E09EE0A9B75FEB0769F9ECEB1BA
EBF73B818427FACDBC33BB95B9654F31C59A766E931C698A8608F15290FCDBD3
5C535D9036A19CB7B55BF54E96F9B2206DC71624E2E55FE632FDFDEC8757AEA3
1D83D190ABED5E7A7AAE2F41FCEBC7C18626BF58F9E9F02FBAE0C8AA85E9DB21
A3D8907522DCBAE4923C6A2A09FD2F08FE32215C544AB577B337D929E625E704
E041C2381AFCFEA37F3133B6CA20093EFD457C772E428325E56C9CBCC447EF9A
05A8C3F28017DD4FFACC51B38E4896C5044266EAB4EB7C13FE855E790DCF8A17
B61B1D30DD866BC57397EF6297C4891451FD6A5C6AD6D7446F58F56A68650908
224D9F4C31C6906FD29BB51DC947465B808438E6260325752808963C808A4AAD
60422ADD62CAF315F6AE92FACEC55D5B682089AC0BC051CE1E2C06A3874736CF
0DB5F7C8F178479E4F11665402781D80397C75456F5CDF0A4F382A19EC6AD64F
71A9275264800E178F212269154DD8352167C57EBC0A38BE794AAD1601C8E541
7E1AB8E969A76E1EB4092644958FEA2AD29635E70C4DFE2EB0D9B3E1644FAAD9
B27AD5466EFAC724718962B62E7B8C32F412B69DFFEB792587D571FB5C591D95
4CD441662CD1B07595E245FA537FA9EB5A20A97E5C9251EED22C9961B48B25ED
85BB7524F635F9CBA3714C6D60A6BF920C45A64F4C366C1F9D22F53084997C9A
EFE2D79FBE3347111F5093E271DB7E3770B35D253DAF93653F6A23FA145AD775
AF11E188EA0428137D9A14542E3EDA6F7B2E5AA86C9F3D3649A85ED2F020C696
01A339FE6D7E42BC548C8F92A4E3809C67A986C99418772403D16D0E8662595A
1F37563671D6DA0F36CAC99DAA8FEA215DF7D45E61314915A30A22FCA86A50D5
2FF2EF08E240F9FAC030D92BDFBE40F1972DF413E6B452024CD11792BFDAA2D7
C82716528AD4B3D637BB43E748336DCC86A952BE96F1EA423E31340FCACDC1EB
02EE932F58734AF3A5B2279361B63F1D824EE3BA9F4D2EC7B33A300A1CE8CA43
24616444176DB8099D85AC68329B1F85E4B5B16F3B396FE2AE7774F3065D0203
AA140DC128D6F935C44733EF585F89E8639A2096A225A2E5E49D447D8AF9FD44
CF6C1BAD5C5E5262AECC5543EC8199B00B72BE32A0F110F64A1D0D5CCEF38FD1
155D6198E9A343702F8ECF5052333272CAC2FE016681E12745CBE14E1065EFD5
407DA3686080989F6F6D650A9F1EB3A813B070C30C0D3B4A1E9C206E2E4DFD51
D8DCBE9AECF956640A2E79F1B4FD0EB8E0449AE1B8FFEBC43275743B4D7F6605
0673B61EB3189E74F51F3780A91E6A5C6464C8CF7D563D9958D46F39B1A12087
6BBD4898BA9ABA468AE1F24115891FD3CBC2195F75958E26DF8BF1B93F7B521A
C12112237AB23A8E5A7B7D0DC4C53692B35F3CD813EB463C0BD3A6486B0476C6
3B36DA71FE512E5745D097FD4AF5D056E434DEE2AF926B2EE79F7FC4FEFD4130
BB4B4BE01E5C720325A4884507CB51CBA4FFB615B78A4182444F0ECBE4161A58
E86FE1DA2E39C2BECBCF1F1D7B9B776A26078FC252128FA8108CB83F673CFD37
CCDA493234FB93E1550EF8D2DC049ED95B00A8A57834B024B277D3DF062E748C
B61F183F2D72AD075474F8165528CE75E4F40B38B0FAAE45751C1907F8D31619
E88EAB02EEED415F3EE3BC5BECC6AF565D34E0BA2958FF337A2B06012DD1858E
C53DE52C108BD5AAB76C882198C72CDCC958D68EA8FD26F76F04EC1A08B2AC3F
A6D0E8724D2656555DBC0C8C42A3E22ACA7E1BC8E9F897D9AB692E0FB9EC32EC
59E31CCA4516A3C3BFD5411BAC3DEDCE374D48681CE7D67DEAB93F5B5C5290AC
FEB29C5EA2C98095692873D36C7DA24847B66F31E4CA4C7AE5C79D7CE4F0532B
78620582E3731A2A6533A03E7155B33E7CD142FE79F72721862EDB24959B9783
F834CB616FFCB2A23497BA6D99AE34DC459A2F7B3E4DA2B54BED118ADCD92178
66C40F4E60F6E1327D5DBCA645A2A7C770807E6D7E47E1265C753F8793BD2D1E
BDCD749CC24D4AF9315A93F01180A0F9A7F420DA1B87664DA5FD967131273271
9DCC45C3D57EB9B8AF14771E8E751D88B98D2FFDC72F5011D402EC34FD010ACF
D3B0660304725191D64FEE106253FCB3470F1A16EB7B45C1489D3534BF94F740
C2781DAFA5E8A9E7B25A85BD7935DF3ADDE08C960E283D8FC3976FDB4085DBB4
B6B35FB239C28C785B18BE4FC98F3A5F410F562DB5FCA04E8074E4E790F4265E
F88117B3D0833AFAE6E8B8A71D7731BA6F14FD6F217EDA3F8CC687A494FC3914
B84FDC37C8C335AB1E7E0BEC7FB6B7A595C50CF8F0080C8D461BCB8B579A5155
F963B6587873FA31C3A6572740C63EFBE58A2EBB723B7517D2A243F6CB08A038
54F4DF0F6692022B2EE8C6F6B73735ED3166BAC58D9216A06EA6FC7B63B20031
D0F0F99D83D9030B413C2360DD2C553E34BD67851B743C3FDA676AD63C5BD759
9131358C6BCDF05FCC048F4EBB9005899ACDD8E9EC9BB8C5A08E83485047D263
0ED69B4D1869A38068FDA03524022A1D32FA2AE0BF7785FCA8F089152A57EB8D
5467C28AD44E890380CEA0B0E0CD0F6427F2C3BC1A5257BF03D902BE94A449C5
EB8F33DD607BB4E0A1A7A24431E1DC2F03596EB2039CC1A9D524E10B374E34A6
4DFE6694F9E158DD6678BCB0B56BFF435FC4F5EC442E14391B45178DDA235B7A
07AB6EA76230B60456344BDB08C929F9453553452C97E016C26C11B68186024C
D1AF6C638EF54E26AA88856FAF1FA9A0DC5A9EFB7130EE72EB3313510EDB1DF4
8D8E512036A986387D8E96689E912149A342974F559E7CA4621E84351914EACF
7810F41CC0BDCAD6165182C7040F052C34D073FFEE489549EFEF83111310B3E5
F67EA5449D3D81DF1FFD64AE0F1A760922FC629FDCC6AB0DA66CC29665BE386A
4DC43CFEF3C5904356B7B2EC0AF36BB4FF6A994C8158790674A8EFF54A36B7AD
8C8B833C1D1FDFEBD7D39122BA602A67ECD2EDE9D35C2628EF1FE34B2CDDE154
2247242DB2541C5FD49EB8348536B83A67E718DF66A627D7C7622F22B5D3A3FA
5149B224F82B72E4F2A1B22BD6FA7018B45A404E66E2C6B96476A39E5D330AB2
ED04E2A7FE38D3A88B439E804F390F4B7893506FDD64F5F286997C9D3D3DC4B7
AB6992E61DB315A8D0B9658A820B2C88443C22628E66F953DE52DD3EF111A498
384C46F09D6F56294C4ADFC4F456FA6B418AFAD08A52ADEBED05CF3E6B990E77
7FD194860C623D772DD0121E5A68E7A6EC2ED00FCE7287E7BC180A520896AEBF
0F76694AE6760BEEBA76DD796B9547BAFB48F86B82F264EFD75554E9EC9F271C
80314665FD05EDE2B32E02C823035B7C06E7FB5D955EAB0D3631ECE9DE67CAEF
0AAC00387FD665260861FB7F277920012F88755E2DFA16E9022D7665F08783AB
28FC2927A8B4ECCE5322E4953E34C140157F823BD1B1A728B18029248E1F155F
7562DEB21338222438ED5EBDC04FB9CB44F627DABC4531FED475F6B717320E9D
F10457EEC1BA9D5B92FA0DED40661E58FD8E45A24C521C30782EE3AD7B4151D5
4D936A1E27723EC945DB3B5DD25E627E75EAD97FC377AB96D14D2F5ECD05DC91
35E909C402FC60C7397EA0EFBF1A468FC960BCD34705DA38554E6AB523DC5097
99F8F3AC93F0F18C63CA3927CF9792AA8D0793A62F02548FF4744B14875BCA0C
F5D8B761D283EAD661DAD8626AA855EE4531ADE4481A81C4CCCD80BA8B4FEA2C
090D9226ABDCDA689F209358CB8472BAE6382C4B54200905BF7943A529FB2975
822FA7A35BF25A657D97CC754ADA98CA95BDE9DBA399DE4C03F762CE14917D2C
A761E7221C306962F21798F411EBB8EBFDCA4B0BDE8E794A6485351EDC4234B9
04AB267C61FD25642B832717AC8409B349DDBBDD24B94D1A5477A1F15BB3104C
440C38A1BDBAE422E886ACEBFD70A6CD51D4064FC64BCB85BD01AB5F772A6959
F9ADFA534B473900834312309138964856A423FE390CD194D4E101AB520FE324
BF0C8F513E3756F43F2436C98BB197DE216A6B1C676D0DBC92C63C6289E30C54
F62C0B604124B3E3D6EBB85A52A4009E9B26885C318A5C68EBB3957EA12196B5
8013A4E475C17C591960C6DC5115C7404B28BBFCB9DD4BE78FF89C22E5BCE66C
0729BA2E07E67CE4C444C8C4D6CFB2D8C19AF0E761A8F223A09663922DC4A068
F35B9EC977479307BBCF04AA0BB97B6C3512E66F49F6AD4E6292574DF59B71CF
4F6F52D3CEA8A55321901996DC114EE6538576139BFEDB0400B709180E8286BC
A9DAA3A8F63A24BB80570AA9ABF352A369E7F5005EA4611AA1F1357E4CDD3857
64E0A4E88E54642C99BD329B805F2375288D0142D087C30C0BE4920FB4C3D3D5
E0557BCA1925F5F71F72FF52A8A4C8BB9AF402A1CFDDF97FDD70D24C5950FDC0
E22EFC9DAB51BF3C13B2E96FF79881AC77A372D6F5A64B5A156008EFCE439057
D93CC3519142104738B1E4E33D7A76D6683326564A6B5DC329B0C621189554F8
093EE9DCA60049916B114AEAA1365A6DD633F9F2CDAB703D3D4475901B068DA6
89EE5DE816D0E6F55F6695E5A3CAB45AA9D07FC1FDB622A755BE57D6E9AE158D
17D6835ACDA7BA3822EBA4BE50B6CAD706128C5AB3A89904CC7C70154631A538
1056BD900E6AF6D24318886450E99EB9C5320BA0F53D12FBEE151904EFA337D9
E9902CA586107F52DB744AD695AC7246A9E9AEBD000DD7750719AE457DB9B71E
1B910A9A50D35BC9B1D3C30A4EF5E68CC32DBDA6AFB9EC91DEA286262239393E
3CC1A98CB79D4399FAFEA476953F0CC104A125E974D4F3C6A4547E1555A29C97
F20EFE048E988B26C16BAF73E542555ED481C29FC91A4FE1416FF897BB9BEA2A
5A9E7CDE0A4687DF8B70D40221C334F13B82A78E4ADD19E267736E1D5BFE7088
D40BC013969A97BD9A19D48AD734ED4D7BD297BD907260AAAF98CDDF68C402B4
95707DF5764162DCC9CCACCAA881D93FD0AD89C1F61E0442F9648F59E12E9EA3
76435DA6C833FB2657BF8E7234B13AA4B456853DAE3E8A8D2E45C183FAABD557
5784139B108F230E2169C808845CCC22EAC291386F2F646BABAF94D458EE89C9
A7227620469C605BED2219EAE7EE44EDFED14E2368F7693D73EF025E87513B12
C9E5045372C699A2C8A76D72CA54795ACB638B700E6F0AF0FE7707D79A09FB04
7E8428DA0A238AB96BD5BBA4A1B81718F3A994AAF0B2F298ED28F54C7FA164FD
52E3C594FDF84FC326751C35BB271803EFA1F3B46E5FFA09A1E1C640D72A0368
9A61F38F21BBEBF8E84E0F59D69015CE6F95AA17598F7449E1BDDEB1DCF3AD62
7E2026BB69E9E0F0FC0D1B3C04695E4B7BE38B26B0A5F70B5537693AB3CB5940
C251858AC5E400BC1D204436CD2CE86B6E7BDD282D1B22C590C50C39E7E4860D
E97E02AA8AE1A536D4D2BFE843355E526B6D92A8192E636A952CCEB93888ADD5
876A6554BA3ADAFE1406456D975AF9174391A52DE8B55F6496C62B01E50EB8B5
CF9E44C2CCB6981753792F724820AE7EA471CC023F80B5AFB2FC70F426A1F5CC
96032345D621691E08F1B2996B633FEA98A4A39A3517EFDC0B25B8ACB440E053
30A00F7C11BFF819924FEB94F889F3DDD01F6849B297468AC49DD7F5E6ADD752
E867D1BA9B0D3AC0348FF1DA8ABEAA1BEA1ACD29BD92517073F1B4368309EAA0
6AEC7BAB1F6AA02948A39AE6E294A67FF2ACFA2A3AFCF6BA42E0443396D2635C
715A1599CD916AE41128D1601DF34ABFF4B7A6605B9F325BA0A462DC176A3660
C9D1602231B77DD1A03AF90FF2CCB69D0E762BF079E9564B0999646F19473650
A198CAC45653DF11F4AC49D8661CFBA867766052C23526E69EEC3F4BDE365835
6159C4D6EF3D10C79DE916A2CE9A17C2A89399E33446B70CCA8ED4A772AFAEC4
E274BB9EF8CC05C0E2EA21D41BDBA9C1C00131468029C987215BCABB47D40CA4
833925E465CA7104B1A136C5677F04D2FE5656615E198C458A380D9F5A555770
B080D617969FD5EDA1F1E370BF0B56B31EEE74DE6178DBCB67BB77E1096C1C1E
E6E619C9E68982AE16386CF95E8CAE3C87D32332718FD87F59FEA4B94FF3AC73
029F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI12
%!PS-AdobeFont-1.0: CMMI12 003.002
%%Title: CMMI12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI12 known{/CMMI12 findfont dup/UniqueID known{dup
/UniqueID get 5087386 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI12 def
/FontBBox {-31 -250 1026 750 }readonly def
/UniqueID 5087386 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI12.) readonly def
/FullName (CMMI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /period put
dup 59 /comma put
dup 60 /less put
dup 65 /A put
dup 73 /I put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 118 /v put
dup 120 /x put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBFE3573BF464E2BE
882A715BE109B49A15C32F62CF5C10257E5EA12C24F72137EB63297C28625AC3
2274038691582D6D75FE8F895A0813982793297E49CC9B54053BA2ABD429156A
7FFCD7B19DAA44E2107720921B74185AE507AC33141819511A6AC20BC20FB541
0B5AAEC5743673E9E39C1976D5E6EB4E4D8E2B31BEA302E5AF1B2FBCEC6D9E69
987970648B9276232093695D55A806D87648B1749CB537E78BB08AA83A5001F7
609CD1D17FFA1043EB3807AF0B596AF38C91A9675E2A53196FEF45849C95F7DC
182A5EC0EC4435A8A4B6E1CDBF9A5AF457564EA72BF85228EB6FD244F2511F5A
CA9B71A65D53CC06EF5F7EC3A85106139A4D312378BC22183C09A229577B793A
1B7422611C03E84BF809F46C62CE52D3AE29CE01C32B202ACDAA5B72733EB0AE
C31D7EF7BA88D2D14F85313F7A8B9B7A5B124B03AB923744D336C969E5CE304D
3AD977A46664479EDEFB69F113024E761C05FA48A54072DF9E12C2F352ACB3E6
D04F6EEFFDE209E7FA3DA22E5B1D1409461F4286B7F4F8251B44E5CB7805762E
E129FF4A06A7458F3191926B1CAF70E32C6571AD2DC07C34FF62840896F4D200
761B1A7FA356526D1E3AB4C542AF13623BAEB9F61B1BEEF79A9205B1FEFDAE24
8799D516A9ACC30BC0139C63C9A0523E9D5439213B67D490C96F902958779B8F
68BD8E9FDDCE8A3A2E35877DB6C94B7612382ED8F218EB1157D2ADD090A2448D
10B99FBC9211C5629ED1C61C74FE93041E5AA03EA4AC3FFDA00C2B6E719CFAA4
262FE17F66804A6B54D3669836EE4367D2A2991580C5564463C973CA0DA38AC6
922716E13B4A807B50304B8826CEFEAA47C305FC07EB2AF25FA7945797237B16
56CDE17AB0834F5C97E0CC5741B061C6FF3A8DD1A79B9A173B66A6A750538E26
32FBC92E75BA15CFFE22A7302F47908547007402569158F62C29BA2956534FEA
7DACF1E507AC309DAE8C325F2A6023D2FBD81EF42146BFCE6A16A6310A650460
7B07BB7647C8760FADDF0DBBCD3DA6CC4645D1732DB3A22D8B76E1D2D48E4D4A
46F4BEB80CE65F3517283A1AE08391FD1C10ED452133706BC6725AABC80107FD
754A8BA47B0281D479F052CE26A723EFFACB79B213041A536542AB334769A2BF
88505D82C498ABDD5A73EB539530F47CAC52825D16A969C8BB56D4A7F2830B8F
CB63B92B576E7BD922A4B25E634751F8A3B7C4EBAFCB373EDC8B8281B1D1371A
7844E9AD990CFF09F0D7ED73A5CF873D2D5C9E8A9923CFA31E1A4B4CCCC40760
8B3AC8FC3C88BC08BD7407725281BB879A1A822D94997826418F1B89D303F2C0
BE7A0102E6F529630CBF1BC5BF3E4578C164A3DDE45E62A957EF3FB7F0FBBA6B
CA1E79A1ED195B6A11CFB345B663C5E72FA55D80476F604F6C4257B51686AE25
8F7D159FE605DDA0AC74BAA5034F29FFFD403070013C6E2D8EF6A0990D91173B
D5A3AEB98B64E412991505C3CB7C2CDE13C091FEB3DFBCAF30C4C19511102300
135BD5D444BB55692013F52056908DFAB2ABFACE81A58423ACEC59344CEF7D4A
C5A3EFFFFF70759BC3E593D878281225060B97D1BEE6B26EED90571FEAFA1812
1115C0EEC892F5DE6FDD68321A0B3F10A2D771B79BD85476AF6018472A499A86
07D64CFF4550866AFE590C471C80EB12CB3A989A60BC7BED39097C12D9286E39
14C7952C4C64820B4DE44A1827B7B0B535244E93FDB80036D6332F90F95B472D
7031E7E3819E881BD0313CFA112EB3AAE943C99C47635CCA7E34DC0306C04E5D
2E9F60FF037EB11602BE74E8E6B711392E866E3E55D988F7C856417A2B9C186D
639819B4786D039B77F8578EF63C088FF28BD08D8353031445C8498A8F445BC3
D08923D32AC04BF3CAFEFCCC1E77EA894F4E846F47EF62D6841B8D8576FEAE8F
90044626869D04D61D64D56E8C51AF8C18D6CC3FEF3B6C4F7D56FE3260354948
10104F69B117FB8269292579A7D52FED688C663B643D8D99F13956612271073E
1A337AED059B7A93819A28CDF01569CBEB51069D22ADAE25C47355560F402B2E
8C9900DA82B79C64497C8494F42FABE5AC41791C2010D98FB7E593C744F250DC
D837DB0EAA4F75D0016970F3AE8359878A08CF9A697A06C5EA945819151265B9
1A12122B98F79185DF852257BB4798E7DC03712EA6ED34F6E6AE1476788DBC33
9229FADB8D581BE1A63F596698DBD6DB98A092F67197A4FD4A50B648F2691875
EE2495D6BB310078F516785A0CEC7EB6E8305FDBAEB1D15690409FE32DD9CFAE
DBD3866FB63EBCAAB73E3E4BE5D7F3AA44793938AAF3F8341683F0790F1D46A3
60CE083F9BEDDA22E0639A92393960F86602216FA51E2754BC2F4CD0BDECE3D8
FFAB7E0E49613DD4956C9A10AEA798BDA1F756C755BEC12147ADECAB0FB73B7D
203A11D84DD2AB5AA98FD38C1C2573570FD49A4924A94A106D2A7D850E793608
FB135853E8C4204441CDBE697FD0CB330B1C3596F32D2BCBF263237EAB362D09
DA6F531B40384DC91F30674760CA7B64BA1968F6A7FC9EBEF431A1AFC5E76D7F
2D44DCB7F61C7F6B16196B3E8B47343F572DBA8B8B21B43E35BB6B2DD5C7982D
244FD4304D254D6CCB5E8CF70E77F50812F41A988EEB3B26BF0F6F69BBA18077
31134B5A5823D10FEF6201D045AEE7A24E0F25376E9FC66340C56C05F6CD810B
724D85CC4BB8D789834A447CBBA159565D08BA5793D8599035BB5063271518E8
F6C50E7DCE71B1D186270DDC860C6DC0CD506010EB5B1FDF6BE47A9A18CC15D7
D657E58BED9EECAD5CE5D49F63139A39BC52C6584BB2C3264D51BD584B40F8EA
AFCD8B83F548594386EB2B05CE803105E84931DC6E7A1398073D48E130E0D907
CD0F1ECC3254EDF5D4DDBF44415DC9BA66C673820CDB0FDF033D59BE2B5EFCEF
01FF9D33EDC88F8D522E07F1689D024DBCD09A16A63519E1764C8630FF36058D
CFC07027E0ECDA01E0E85B166C613B22F587B4D355EB018BA93E92A36007B4DA
287FF5A91F7D8A0EDF5554ACCF45AC8066E88865C5692E63EB99CAC81367B605
8E6C19EB98EBFE0D2D161B447B9A70CDD1122C7B78A413369016E6D8481E2AE9
9AA97B5DD0ACC9B0820F7742CEB2F46F89F3E2092621969A88DC0156B4F941A1
6BF1546D4B136657C47B082A8A35FE96016BAF3D9679B8C32EDDD6AE6DF3BFB5
7854074FA019707FC22BFA82299E72ADF9A980AE29A8E2434277E58B01F6B03C
192E1E25DADD49F6E3F69799AE62B56E00B60A031BF8721DB8B2CB6D4A4C15CA
AB1FDE010AB7DC0DDED977389B101B8E53A949222FAA126656E02817DD32B0D4
A49516CEC2B97EA7C78FD66229B044EB92F502384BCC6CCDFFF995EABE3BB7A9
50D5D1AED861E7D3BA8D333026C673C5762712E763E59261426044583D789C67
A606B96F97663F92BF104CE02FBFDFC521EC0D6670B7D4F85A229F51426DE912
3B729C4A535FB7C88D0A5E78074751B58885DD6BDD2DD9E9C83F105E8CF63DDF
CA7DB39D0319CA7CC2E73F42747F007574DE25AE1538B4D493D22D0D5F0F80C6
5F6FA3937C8391DE2F0116F81DB2DB0EF751EC838A7F85F163A6F48804E84B96
8D715EF25B7E2A5CAECC558D80F421052A1D698F3B8452AC27E30A4E6226E3CE
084C8A83ADA0818A110923CF7AC7AD4CB92AE4ABBE0A9EC1FF935FD02774C1F7
92A278E513012AD17722A23C55EF82E18F8847B5CCE47F4FE3EC508BA563F7B2
AE56C94285A18DED4D432FB0CEFC05A20BC17DDF9FF919C724810A8ED7358A27
97EC93C1A13C443A91947FE1F6F528EA7B628917FA7E554A1D7B31ED46C5ABCF
92BA57961C8876DB4041305EBB029B03D8351D5E2819FF87E97ED214D8F1CEF5
7F7668DDE223721C0B810F4A4AC81CA4EAC86EAE546E1B15D91E626FB9A31824
5BFF17C4E79FD56ADBF6DBF01BAF6453A81EBDCB38A5FC0FD0FF0646B3B0D199
13E2E59A1B5CAB6DE5329BE389BA0E2A2AB55CA40B711ED746C24F1E48892E76
6DACF7DA163CDC90CF076763008E7A899870CDED5A80758E6177BE6B93B07EB1
5800A3BF7B9AAC3FA825CE594EF5B7546B181375FA8F37608DF17856D2F8EBD5
6030A9E6F6BEAF224AD2AEF76D03B023E2FCB922CB8E3C6816AABB61FE6E4F83
F21B4935102C860ECA03DBEFCA461F0E5B93E5A8D18440BCF7D1D6252A24CB6E
A64FDAC8B67C4888519AA368D9C4A8C08C7155DF5BACD75C5196C571C3C456C4
7CE8D90215FA6EE8CDD72C48740F7F5930EC3632DB63A9C8D2DA125088C0F05A
9FC83D16B7F53163F4EB6FF372C6C3115F1E68EB35967D11126EDEDF0BF80817
E68A698183B3EB0A207DB43786E1B9D289359D75AD5E465328CAA90E712C2962
AE2A466173F2FF30EB535A6054BB0B875DC8552C16B49DF17CF84D98D35497BD
F55E273FCBB0C735899529A69990E09149FBD2DDE64B7FA8D50AE83925DF03C8
0B63EA158FBABB12A028803DA4B9DD6C48C0FEC469C4E730729F4BB420D5B003
1918B4AE9CF35CFD31E8E62A44C0484E3D00143BF1D330235E821E5CFEAB4D31
7CB4604DB1F310457FCF9075A3527279644D908DE847CCD00B6F50DBDEF91D3E
38238CAF550FDCABA2C3A46237218DCC5A09AFAF69997E1EBDA7EFE6FC99ECC8
5D4AFD5EE35FE2346BE79B499EC8EC436868154A947D13BC02C780EBA4B9E64F
3026F1BF5DC1F8D64FEA1281EA40B4BC355638A3A59BD9055BCBB232FA45EA0B
B405131B64F105814019BC55466EE78E9E9ABB62DB30EA452F7EFD7196C76A85
15B2CFCD89922CADC0F392B0C54A231F3999AEFB53C24EB0C63B0C8A1A1ABB6B
AAB2F93E5ECC7AB90EADA320E918106BAAFC1F8C425C617639984629018BA674
6FF4F338AC43E23BC3740542911C058D43A49A11CB3A0CC8E3088BB5BA6048D6
CC2AD250DE956BFBE83BB24C945C20D9C22E7105983F284EF478F9B68BFB0322
EEB7D62802CBAAEFF1C2332159DCC7243EA40CE15C734EA905E04C476B178B82
A08ABCB0B86A7330C75E62EE7844C9E22DDB013ADDF20AFE08122EE1B930A81D
806A0F8CC584CB7FF5F56F9B35E5FF78FD93E7E4A40C64537464EAA275FE88F4
461FC6A467C8A69B9A9FBC10D44AC1B753D313A8E7D97F5FAEB60F82855658D1
4DCEE043C8FCDFD8A29DD091F3BA55874A458B2B8989F35055C72FC411382361
9AADC717E602B48D7C9521D3971A6F7EB19D539445DDE9EFBC5B58FA9E5E426C
172C45CDA24985FC4632287FC3B15849DEB56F5A061993AB10A6BC59868534E6
69888175053108B77E4978D971B4EC57224C0F93EEA4C15AE92254140A94704E
ED5666FC06C5341F643F779CC88A9E81891565C63B6F7F6286E664F4E0A48690
356DC96F1B98026C563700772485B83BFA06435D4E0793EF822F423C93FBACA0
E5D889D2B76771C6F0EE997A5DB43C2F6921132890406E3C33F6F159B14C5D78
7C151BDFFDD02B697315F191B5490073EB418A4FF2A398C68D44F0CD1B87CF9C
B52F12728B72F94D752D23151196A256908135C87991E508B8906CE2539DCA8A
31F86809C8C6C18A09F6129BD7CDC6B37E76B648788056851F22BD3E3B5772FF
EC01D822B57FFDB3BAE624F05531292641FD6A7E3666152D18F6C653048DD7D7
98A942C840C4A0FA662F260B21C64214152BB86F03662A330109C5AC0A5EBA30
C6201F558858130703DF76AF4FBBEE069BDE45C0D9467077D85FFED4F9BA9C61
AED87D67CDCA453A6528AC5BA153E1039D9CCC556CEA5CBB542265FF54A1B208
E0E13740E7E7C26AA00AEE909F8F3ADC2726081A744D8EF6BB711BF5F611A900
76F91C26A338DA13A7160A9F42410CCEB3190000D963D036FDA05A29F598EF40
8FAE6F8E7E6F50C99C3304A573501C13A00023085F057DF331E3354CBE65D573
CAE73BF15B3B96B502E0AAF2B4A86237E98A997AAEFFF4227D5A26E8972C48E7
761F430733E6EF8AB2D903C17FAFBFA21C25F8A0AC157D397BF3CC1AE7598F0A
2BE4FB46B29443CE57F41FD5F91122E9D86F903E94D5B55E2BB95949C156D138
89883BEFD634311F9280C7F028DCA6408D3A682DF5B55B9F7ABF08F019190F60
D39E4F0E80F0594235B09A5320109638B938633A2C196E4ED2B43DCD8643C3CF
C6123B076B7F73352F906D96FDE0FBF50CCCA432712C574D5857838BAC30B485
D25024EB254A7EFE57D1DF0892C275CDB3DF77602F0FED0FAEBC644BCACA04B8
B424DB125E487794CAB36E01B5E1A26F5E1E97A739AA36D77A12F5B45338EB39
AF36CEBDED55DCBFCF497FD475FC6BAB5530AD6153C6BD982564EE8712185F1F
D5EA7ADF4104661168A01994C1FD773A50C8AD6A3E4D332E4D59521BB8BBC6C3
866EB4AC3EA4532477E6CBF6BBF0860031C3B916AA25E3492670EA67F55CF4FD
207C684A0DDB6F4AD21B2909CBA71BCE2E762012B0927BA72367A6AE0AF87F73
756C9BC85E4EDE35317E2CCCD138C02C7A8013AFDC1A48C3A4BB8EF257BDEEA7
60E012F54D12D31D18DC59D5E526F12567B8688B4B67E16B56713870300016BD
A3B9DA87FDC865246AF8E94316799110D86B1DDADB8A673402D4226C519C058A
1D1E5A5778584FC28AF12819B1924060BC4F54B1054EA6AB0149E04B8C4302D4
A56D8A347EB5D3D2A0E12CF7E35059BDB53D9FF6BD25F6D9619BC4669CFC1048
C6C9978B8751B840F27D82A69075832BE59F55C1737CBB1220FB8FF691FDBDF3
03BD7D225A9372AC221C38245E48320E1CCF898D9EEDD678E5B8C65B7F588321
1A3953EEB9B39EA9A8CB72DB08C3E9234DFFF5FDF9DF804C021D57E97DA7622B
97F4CB6E0EB640E0DC9EA15C5193F92A3A7565F4C7A4C9CC327F7CD2C44900AE
D9E76FFE62FC37FA376E77131B566AE67C3E09DA80F198BBB995EE8FA47EEDB8
4B467C6C7DB8AEA745CF8C56B8BE56534E9C56FCB2B7006426DFE93D728FA4CF
94F131C549814E54ECE7C914C5FE8E4961D3437CE7475D03534B62650F551D97
201C794AA877445DBEB11C85ADF6119B05360700F8CEDE4766E3A1D7A35CDDC7
9ABF7C619E3868A39D1852DBE1EEAF5D7898C78323873AC005542B68C43C5000
CC58F675EB595F87C879694751494676465891E8A897158B481F11A171CCBBD7
29603F00210CFD7FF31FE3D273933ECC34AFBCC4108D9B76D9ECE63EA06CF939
4799092A54A749DACB82C1424E9879672C8BC084C360014C9C1B6D5D65C68AED
66CE329C3AD712C0A36BE7EF03FDF339CAA2E0336D387A693B1DFAB5D5164E31
14755A158168962C9B399F8F1DF3FF5060D7464D5071058C30C572A2BC7DEE53
84BD7614A4BEC4C84E18CF7EC81C811724463BD46CECA5FB57B0F55EAE20CC74
6AD815D1897B037C197D2456797B992C20C70B663BF99FE28C513B4E221C8E12
49779F8C0AE8517048ADDF7CDF0D698E3EFE60071C4997B7F5EF12B6CB65390C
224F13FBB99FFC034C0710F05019899689B6D3350BBA65C7CE7C2AB03D81B9A5
5F3D65E4D462DAB189006669F7390A78A1B8908A4C913B15DB8827DFF15BB9A4
A6037DDB643103B937257A7DAB025F09D53FBBC2BCB6B0BCD8D56B2B2784E498
1F6CF8470DCC892AD0CFE11578718948BABF9C142709006B68486B326967A28D
41E878EF9CDFFA015BFD11310CB2305640182A131B96D73348B7ED8D31A29D7F
2D889D8EC4F6C7A55DD179594ABED611CE4DE790CDDCB68CC677A362B879F4A7
F4F84113A561F6D170454B0DC4DB2F973E21176E5B00D0774F0BDB3F0E22D753
FDC635611AC85411D57FCE2CC85BB5DAE17BC41F3C1E5CA1BE272ECDEC1C574E
E68E33D269E90877555B1E9AF694D44B85295968D0CCDAC4B5EEFD6E6F284597
DC1016F2D7502E91FD71BA624C499BC62FE7B4734070F8C123A633E51596A0ED
00F273E0DD044A7DF055D633040BF5853FE171E3442C0A00DD938476920CF678
69A9DDF5A29AACE82231873F15E4EA92B37F9045EB711B4939EBC0785F347643
5792033AB924266D8734301BA52C5192F8B32AE780CC9D48C832833999E78819
CC4FEBEAAAD11210EA3D220AC1798A5781DFBE3E47C31D0B5A0B87147FFD44C2
0F4FEF9B7C06072E0398F740D8BBD3FB1B9920AE84C085461C1F5C08F4251173
001AC878E423340D008E73A1F49B6058DBD668C43C513C35AE8144FD672DF548
C439A883086F14F419820F312F3127097B59ECB9ED4D16EFFBCCFF0CF648981B
B0F888C510C0CB3C45918E92417F6CC39A8288A88398390816BB3FAC62D2051C
CCC0A389D730EAD6B05AD28D4311178DFBFE442372B08A31D416B78B71520456
64620D9D0A3FA3E8BA66A32F7839E4410B48557459EB0918274A879B02E0392E
5AF97B16F09D2B8A3B514BC1BB5467D359020C43A00570AAEBD3DBF637154F71
9A636A9700C081553E214361B2B57EDA19BBCCF098E1870D0846736F0649DCA8
FCCCB124E1FADDFAF3D5925CEF54EFE72CD0D2BDB735D18B4103C1DBDCD8EACB
15EA2822AC4D8AFF79F1746B14ACDB6FC83D45B9D3E972710DEF408694402960
947DA3B6BF54DA82FFEBC510725C300BA2FB19A603ECB41DC86E8ACD2DA44C5D
157E7B53ABA05461DA40B675F081053377364DEE80EF49C4B5909FE549B798B4
96C226DC16A18A9DE663612661F780459D9932AF482B5E2351E3BADBEFFD4B49
D5E120C8C3C96A3D38A88E5D4A9559465191677CFAF1B1BE5B9FD0D277D5AFB4
8E827DD0B979E7FA7FE01325199C2F208A02EE453F545DC69D66B1ED9262133F
9C47E58A0E5014E9C2670788FA0F0A5CB372B84435B4041597A8A5773046E924
6DB111C8DC2DF76A47C644BCF5AE4D4B413EB0AC2EC4684B0A43C27EEB591A20
FC3A54B30B97687A68132FE1D54AF1CF3B8106818B86D27EAC3EEBE036BF4834
ADA8515C4A4972910354AB20C935E0EA158B8AA75E645F5A8D84FB1C177AED50
2F9F054D68CB91DE636908DD00EE6A6F5DD566CD2AE8D3A221D010C5678580AA
3DABE24C5945DF1EBA85A1E5DD50FFC2FCDAB711583F3717ACD5D2BB98B01165
81F6D29CE4B3D869A1B72186198C31CD52150189E1246D8C53508A79C1DE7137
BE9C77E57EFDAB7374603762EAAA72B0B40EAF78A7DD461A4C66C31A6EE4CFA2
D0594BB2CF6CEE94289DC88042C30A58B2473A333E603F36F68AEFEF88DC13EE
1E2FA54E38977031156C876E12918275E17D957ABD72698FF688E5524612DB78
B0EABFABD3FCFF329220C9F30363291678A7D920F128855CDD17E51BDB9565A6
EEF8A12E6263CE2C7A75806C41BD8CCC4FBB61A9CCAF247C1A705A84EE6DB91C
7C0A0100F19782BAA010B3C6F6AE2F5DB222525CCDA88656F64C44A83D02D05F
1E8F42C1DDCEDAC0ABE3F1992DFAA8E355009DA8F209AD92553EC056E112F894
E9C1B117FD0FFBCFBE7B2794F0A52ED8B12D8FC816ED480080B3A27C2B2E9819
05B270C56DBCE53504F2B08A8087D7C6BB8440804C9CA861BF7C5C78D1CD25A1
EB6C73D42C2D4F63F036D0198CDA792F26AD7FF97879F756A94D5A4F4804AC26
DF025DF8A857589662F7789D523E205F81E2ACFD9F8700D1BA1824A7E1EAD0D9
B1E7BF0A58F93D942F6C4A8C98BC026D82C28B465E639922C868206EE7C3ACF8
EA44EDE015249D3AE5606E3AEECAD3D003B10ADF28C1A39BB182C856B6F80E2E
9F67530408B206F52AC0711557EEB30B06FD7722847C88C9C0A27EF9E08DA7BC
96446FF4841D3F89AFE2A6556A6F2EBCDEBE0CB0CB37D8835B939C0C1B44E297
4D3EDE8D6A5E9DF8B35268F6448B207D05CB8759D1F00360B8591C7A9A83D563
A1423419B6C1A6D5250933CAFB2B5A0D9A72047F20810F27B56051D27418FA03
CC2D6D23A947445B80F3CCB756C4F45B373D616C7D5B1C4B665C06BCC9EECEDF
4D27D22B2FCC2552C4D6CCA92B9CCF8F80AD944EE40B376EB7A917764A52348C
4935CA1C623BEC78410B6673373215DBCD2E11DF419549A74393F9B057B14FB8
44DC5DC2FD223F6BADB7F24B444E24F49EBA277B2F582626EFDFF8F37A756FEA
81A2602AA449A4BFDE31E124D337A7765411A7B6221021CC3B6A2E39FD426EBD
EFC785C72A45652E24BB52C4A6B8E41564AD279B0044B050747E7DF729EBF733
99545EF905EAD6D6AAD24678D04D9631CECB96E1DD86AEBA48C3859BFC2E12D7
0976FD8AFE5008D9938D6E4A28D6CED0BC7B296ACD5043FA4A77BFF26B8BDD17
785ED91EE98CB38FDC04F319ECB0AC431AE4634F1C0FFE56851D6E6854586B71
0068DEEBCCACBD29600C21616B8D548021AFAAAD5A919C2F4164DB0B4965E381
2786FF2C77A95F35FFF3BFD1FA4A679BEEC6B87D6664EA29D13C43D3620D899B
B993379C93B761F68B0A3602A40AEB89BB3FE69A4330E4042431EF76A6F1F4BC
6C2C91DD525338DB08DB49A9B5B6BC43BB67155668871726176FDC5747C13452
66143220C5726DBE150DD0DE73585D43F1D4CC74D4ECBFEF7C0F9754D3A9D873
CC5B21AED7C7419C2285FFBC6BAE665FC1129F12674AA08B24EC7263AA04CBD9
64325ADE3EEF86F88D8D09FD1CADC14A129B8E5F37058A5A462B9C30467D2096
31CD48F3C06400831CED94FC58C063A7785A69E61CC0B29C4884A18D76A2CCCF
D857E535130DB587319DFACA9AB3FB0EEE955EDB20A6CBBF82CDA89EF23D9CA3
4FA9EDFA689A83A123956E338E5E60DFD6C890351ADCC247DF25E48B516FD93C
D58C562F31F30D12FAB4CF9EA2C7D894FAA7E7BD10C2ABD38AE40C3A5381F3D2
AE605CA6A209F17AA24DA6F13BD8AB8BFFC9C29C2AE7D9EC916C233CB7976431
1EEE763303588A980E4C967C099E839AC4F8D1FF368C99653400E25C56407520
08F4CD4CDD0C77517053A05352DFDB911B8E24BA67A0F4DA4593C093886B7855
2F3CDFAA6E5F235EF7F9DD1E954AEF5141C46E54CAA5BBCADB5EE5C664D29DFB
4CDDFD27BF3C293B596267C3517C7F4D16A65E6EC39F9E9DEDD2799663BC61BC
2CF540511BD4E2ED9C553049F8A31D4B6350B71BD980020AC2E4CE2CA090368B
31AB3110CBFB07EE7143DE143CCFEAF67F71D02C0C53F2D6A4F03ABBB9025E42
DB063CA1538E249F308431106E719ED06BB670A06E920A94EB318F96AA7E5E8A
2ACF460CE7825B2DA9624948B9AA6D529774E32415C8326C5B251C31F10ABE5B
958C0C145BB3A24C88431E34D3EE5866114BAC58C1F7D3D9FFD5F5DF9AD13D04
3FB34C7418520E3B9A9FE204E5280F5C232569426B51D0C0D57303F097F91724
33233B1ABF51CD288CF523C0A9F208F9B520FD9760615F24A31CFAA09FBC9964
4B04FE1A4FB08B78CBDE635114201E63E698BC76A3FC4EA8C355199307B2F451
17FA027E93FD871ECE63ADD08D8B36B014DA6DE060318DA42F93D126596ADFF3
5AE4D05EEFD503FF826B179F0DD1A516D326377F4FFF51DF9951F543E99E41C8
0F71E78417EF29A0395792E0D1F3D4F46D27BBAC19E923E4FE7BEE157FB0FAA7
06128C0B38C97563C3239E99AC81110C222FCFA09AE9059BD4063DE69A1A0B1D
E244AE224F711081F7D668F346D761D9CB2260881F55E0BD011B8E1E08D0FB28
39CC2C73395230621D5459152AE1578DA35B7A07F9A7DE75CE5A973E7D90DD91
FDF86B24806532AE5B20F128B8383295562B36AF0D757FBEF28A261E58DC8A02
ABCE03A069D0E6AA02F37B2F668AD519C4E44545C759776BCEA6D42F6004B667
3867A0EEAD645E6452E0FDD8E02B90E8AFAE17BAD841B59285BBFE9E38C22C8E
7B2713B013613AAB82895A36778191259AF0BF1A71485EA14F1621763F007A4F
F1CF0ED7DB5B3FC8A6EDABEC24DA502A0F0C85188F235AE8B517469FE043E370
5B4C065F7C0A66E48AF966D156F0EBF000CD0446748DF6F2348D532F62BEAC3E
3F8A9A7E03170A578928E66B94996EE6A5FE91D73651B157EC78D31021086253
13A4B0DEC04C901EC3B672111964047594EDB42CFF2EAD1D96FC7A8A85C987D2
EEA7B34004142B1974EB421D6DF9B739D10048A2109429EDCA4D0F1F8C3F1AB4
24913A98CDDB1BA2F8F9FBC086A26262EA55BD206D99CE0B777D17E67D71651B
C6FAEF1FDDEE14BAE0A475A8F9FFC7317541CA842E9B4AECA103275315284191
A1B4DEACB28FA010F97E59F1F379A1233DC0BFD482D5C6503378B40261A3C4C1
8D0588B5A5D3D3CFBC9ABF760A8BC74849A662589EF64327B4E2903C0F6A6D42
62CD1F050B23D38D3C944C8C81848C1C6B08D242D8751B5EF437D0ED9A2AAC77
0B40D99F3EA73EA4CBD39A8FC9815EE6AF88038C43DAB391DD27EAFFFF7011E9
7BF27DFB1086B0EA4B5FD6D45B1FFB1015313ECF7EBD6463C5143F5BA87302B2
92157A3A5943C17FCCABCBAC51E5936D549BA55AAD4955B3ED2C7B70094A2E65
F5A077DC4E29EA3738653A9F28E8A8D6AF22D5522F2EEBA3A32FCCF82B158689
8D8AA4AB0EC4F29576257E25FDA196A2925B7B66B78FF6016BE01F7480D65E74
14AAE118C45D77BEFFA30634B755CB28522E3272353AD48B98B58B0ECB033695
876F9A1D68B07580BF6A26125A330420BBDE3D45FC2C16B38C31283BBB9DB688
3735CBD41AB81314343A82880FD945AF32483E27005102FF67C4F761A5563D6C
5DE233ACD0F53EBD9732C1B292254BA309213781AE066950DB4E514F982D43F3
953E7F26D4D2D3EAB677531F2EECC3E52510A055C9069C25C2C75C06A73088EB
FB5C5B45EF127510984993E65C15BE8E88E9187C4F303A1DB279F0F086050DD5
9A1E4388CB79A5F64F251CD5E74570B9EC44E78B3E1DF8A6E8E8FD6E4AE9F770
01A586ACB19D85C2307175B910F8CFD62E8547EACE5DFC19FDB398CBE9039071
E813808572D47B1E02BA29C7DA18E2AD6BDE380FF2F206A8EA668C43877D3EFB
1741A06E0AD81BBC55B0880E6DFDFA13FCCEAF1EE30421CBEA43C15A08E45059
85BF9C79B5E83812A0BE47F4B1518D61C15AD0CE43AA9652E80642334B37AD4F
CEA685A12258B625C9D95551738CF2272F3157017D73485CD14492C1A21FF899
226CF84A75BB7C6736CB3B1017A0649AFEE679747D543DE98FEC8D00BB674F93
E4F5F8635714C23090F9F8274A86394C0359ACB60EC0998CC2E841EA0D56CA42
EC01AA474B92D7BF6D54A79EF7185729560BE2B27AB3BD8DAC80A8DD0F3033EF
1615711F78F44752CA45B184E95AF0D189B364A7EEEC9FC8942301D0DC82AF7F
A4D828A3CBD1C8301B6B629AF3002676CDC796722C1C29879ECC379A49381C59
9597D79C06790C3AA00921BA99E7E263B433AAFDB08B72BB5F30905670FBEC77
1C2BDF3424184EF926CBAA1E1D6A57D323252144D654EF305BA55C81800D476F
0652D7ED7A84321200E06DE4FA50AE3F094C43138E802B8E306B05D5A57C7DD1
C04FF666E79C23407359B2E23FEAC2526863C410E66CDF85005456F37F14C337
4483BC074B8370EF33FD319D04270FAD36D0011C53E7B33DE4001B99045AC78A
B615910EB7B7AE4B185D462AA83C32A352BB271114C49058CB69938B4B965C15
82E0C057235744D2C409163488504B387A41A91136B438537E072539DD953F1E
61C749EC71BD222A648C9BADA08062E2C4F4180E675B4E01526ED4B8F43454DB
5DA34113204E6203B8537D2ADCC606427122918B1230EC5642A05CC6CE4922D0
243437F6FFA444977426CBDF8D41D5276AC20434E0FEE09EF633B9060CED5624
2D7735E946D7D9FB0E463752680022FA71AA4624E138F8854336FD2843662AEC
3FE207263E1E79026DB88134F4436D8463E6A45EF46BBE26927E48EA924DF65D
B1F4DF1DF86EE0198D6508F92CEB45FA438049CC627A2D471A5DCBB64F5680AA
B9AF3125AB0A70825A86274374C94D200965A10C183B15760AD5C68D692E5BFF
9F7B0A624345F1A150C10EF470DFEEF112CD64C888F416F02B4C6B4976A5A156
FE2CA3DDD12193A445D67116DB4E2E6650DB6CA8424E592D36D1911B3B61E6A8
E46E763C558607A08D2BE6F6649DA982D78CD1436F3D2806E1D0512F78BC63D2
34F34A71233C5EA8BD2923553520EA38E23EA3084BDAFF7634B4056180EE9A42
EA49ECDC398EC8B86A8B230E03A0A7D1E711B24F90B36004C0F732CD61F623AF
0BB5B475057595CB18E37C6361521AC7EB0B4F02083A4B95AB8BE2DE8D6B5ABE
0EE685D3DD63869B1F0A71B31750C2BBC1CC5C53BD8D70BA5589B99A923DC76B
63D7D9A8783157D7E8400AA8E1EA6545A1256481B3A46F64D7D5EB49B35C0F69
9819C89ADC605870E4E7B39536C58023380A314FE22135692602AA9DDCA0A3FD
7B090245CE88B6E1459078FB220511CEAD217A69AAD98EF45C15143BA5A8F81F
D1BBA4CD31045CF99E92230C4684674EDC7A1EB22AC57F71E8CCBAC61B6EBB09
6127A0511D69C0E7496E0D8747D4F2F9128C43622E3DBF52C07155E71FEE0EE7
ECFCCAD133EB5E8283EA1DB0D54E3E255DFEA626EB5F87EC197F07C4D191E04E
F9BB91789F1D38E5DD8D4A1DF3982F1A41F1703DF5F41EE70BF3FFA4308BBC3B
23889EE887AD366B92D215FB4F2409BCC4239D3C251D8B74C27A29005B3EAA3E
44913F1F0D7BF697A970F323EE90AC8EC2984DF79CF727A62E7048AAB1EDF2E3
4A4223D05B7699FB998309495EF819509DEE182B1A7F9910F04F5409BF321524
F1087EDE0CED7537BCE09DE42EC3E40485D98939806C965228715A3575B05BC0
4803A6CA321D146D92FCF6F575FED12F9469A94879170E7481944EE4C269CC9B
FC07A0375A1E7861ECDB68913C38FB494491DB1CF0BAE978F5329E7A1C975D6F
41E332187338370BA389F46FE13D766C204D186AB84E7EFEE963A75050E0AF9D
9E014C7A3CBFC327FFAB9DEB6C99165D47C2B3E6F9AD0AE4FB735CCA50CEC1B5
6D68F3C4DACAD2309E76ED225C2ADF2B86F1A9D36432E48A2B4E985148E87054
CE92EDAD92FBBA087317F228A8AA924F776A28DA91993FA9EA12ABE9E707649F
1D88F5811FC0BDDCB2A48C7E102853D07686DC1AA7A4C9864FA0A154673E73E0
4D7EC07246CEAFB722A3FC7C4DC02215A692C5B694053582E90C9BE714F6C658
109132690CC26B9BD690770C3DA11A4E7247BE1B6DA4467E7B2D05D2C177B815
8E0CE5F8ABB1CADDBED8D021AEF63DF3435D99C756F283BB44B56C25B816DF54
C996E681C9A00F1C22ADED90C43BC407A14466CBC36A27D5B382507627E8558D
6C45800A2DE8E0A1CB2B89B2F94F9327E956ED5F0D49BCDE69BB17E49A2CFE3E
358FFF4FCEB8961BE573139A0C1F91BDF687F0F24699A2D00E782A8676003894
B0EF1E1FD9C804E3190D6DAEF1182FC07179F94A2B361B9DB52BF788C36CF61A
DE2843CD1F3086B00F4834CF8A525DCB5D5CD4D1E44112EA
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.0: CMR12 003.002
%%Title: CMR12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR12 known{/CMR12 findfont dup/UniqueID known{dup
/UniqueID get 5000794 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR12 def
/FontBBox {-34 -251 988 750 }readonly def
/UniqueID 5000794 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR12.) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 1 /Delta put
dup 11 /ff put
dup 12 /fi put
dup 34 /quotedblright put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 61 /equal put
dup 65 /A put
dup 66 /B put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 91 /bracketleft put
dup 92 /quotedblleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9C535A5E57376651
F6823308463DC4E0339C78699AC82C769542FD3B410E236AF8AF68CF124D9224
FD6EE92A38075CAAF82447C7AF41EF96F3ADF62F76FB425BEDE4C4124E7B1E0B
8BF254D91912D3A99557F5427907A56514C5A3EB961B94112077FE9417B70DA0
B2E1C1FA3E1D6F01D11F640CF848E45BE3E205258E64FE36AFBD4DF4E93F6B1A
966C8E7FBE2CC8FF43C1F67BF6C361678B5E90F4BA524FE8A4CAD6AB28183E6E
CA6C9636E884845105595A2E40CDBE8D4807A81AF4DB77B31873FEB221BCADD4
2C4669459704CB58A7BC230FC59F867EEADE660E49AEEDEEB042BA9A7DD8193E
56C3A36A1F639F7EA512EE4BC6992F52C2FC82A890EFDA730105B0AF7B819295
EE00B48F64C2B5BCB275B1DD62F289CDAD4AD9B7EF057684642FA6FA6322C277
E779CAC36D78F7779CB6DE12638B3C65B70C6B5F8A8C6421A379719B8DD44973
5F52856A4A29B2ED37F2B1FBE6EF4B79B7C0CD6395C756A00FACD763C235914F
847D1D99831023CE1FD89EFEC83AA7E313131C0C197248605EF5BA773D0A4000
72F607551A8EA6F0FF19441ACA179177D1FF7B423FEBDF58B0C19CAE3C10EEF6
3538D8FC4762B77C5AA023A8186C40D0365A4487DC3564265B3DF908572DEAA2
57E29EC669DD72974F806EFF5ECAFA9ADF1F9D2A63087FB7BBD100F0F81C6FFB
B1EA1C9DD46548AEDD147EE64B1B4894972DAE1DC3E8569D6A3CEF9F9E46DEB7
547E10BB2959D374A33E47C58F1B20419920AB485F166062FCCC08EB5CC9AC88
F388F0C0155027B727729488E44CCABB7064A1432E179189C4627453C5231535
47D1F2B8BA43069696830CBB6E5F9A135CF22D3D1FE490A3A63C088EA32FF444
24A2427BBA63033DFE2E06DF8CE67949B6AB02F26335A376B57376814D2A7DE7
64A4347577EBE9A6E33DD2FC214A09C6D889C8FFBF1D567032548851B8F97204
49E215CC7D222F593E1EF1439ED60AD922D41E0E9EFB5CA48F2FEFF75AC5FEE7
FB6676D8B8D4DB6885FBE8B61B586313E4DAFB09D94CEDC0507E93000104F3DD
F83865A2C6F6A7DA8562BF86F5DB233CC9B53391273A1462E40876A8AC2B098A
DBADD5A160DEAC061F86A5FCCAB495EF8A9D121AF07928EAFD56F618E4EAEA97
CF89A3AFD406FC9DE1E9769C1E1EB83BB883786BC075EB5DA2692CD59C4DD7C1
7FD2FF9B18AC740A390C1DB38670DEB18C67721A1DCD502FE7368F47DB4281D5
459B3F020595FA3B10544AAE9EF786A0645FB7C9BB29D091E1432CD878A05918
1665643005BFD9A4B0FFD347ADC84CE22D6F9AD4EDC05E8C7179DCB360AB57D1
6ABCD200A4B4AD56825DC345984D9A3DE11CDA5E9EC1E5006EE4181E4EFE0846
67D8C27BEE8F84A1E01947E945BBE988702DEB2240C4BED952E433E5305484E5
71965D3DE95C4115FF78CE9EC18E323C599727C8B93CDFBCD1CCA780DB8C81ED
C4B5E596E1603624308972FFAE9A57B0EDB51FDDB6E23EDE2946F61BEB241345
2A192D8CAD53E823D687F9C64A70A4B4B703291FA6317C051DC6A44BCCE0288E
3839D726A8F2E39BFF429865E95C726E808E02CD06F36C1CC9AC77999F8E28BF
CE9D74B699CA982479E9D0DD98EAB24D29C981EF0349721D6819549A39413801
F80182D567EE316E2F0AB208068E15693E4C399A381BF9BBA625E597E6E109B8
16F3A84C8EC92F2ADE288821092A421A8D3B907048FE947230810F0777EE2542
29A3485223FEA079B359034F70464DAD2F0E420271A4E0CCF57A0ABBC20AB327
0CA71B292126D395E0D083B19BEC6B48A9DE2BF470C3D01A8C3F52075BD4BE02
A0C518355814478202FD4762EC542F8E7B9B1F7824F0554660CEB83E35635E1E
DF0D03C94C903ECB36B4948ED98B6324E0094EB1DF70863142D4ED3A932D7346
39D69F8F044B6084482D7748C27328AFD24A3A70B99D1F7D32CB984488672254
28B6A9E9DCA2C9FF6A1B311D72413404B3CE5428BDB7FF3C36357D7975184F56
FA6B32AD54C37D0AF7576663AB1397B80D4E998F0B4C4F6D90B483029EF2EDA9
D4C4204C1546EFF3100629453EAE01918D09FE104E626ABA38646F17B6A94CE8
116BC7A8D9C319434CA5B830859B4164DFADF1D7C3ECA5C78D8DEA930EA4AC3F
59DBBF3148C91A2E807FB934E3439D4F67C6DBBA9972854E6E3688E1E0A34B74
482217CFE031CD7B5DFEF727C3EF8DAEEEDA08F4C90289E62FB2AF2357EB2E45
4BC547980FD479101FFEEE477AAC6268DD659E8DD9E244676FD3C6909713B71A
323B211E571BE711D103FA23B5B9AF077D84E2D20FEE805E81D20C03501F0F17
C3B081946CD0FD577F00E50B76CC37CFA97A61B89C25DD43911B28857284BEBB
5BEC61FFE3A14C64BC5425A7A82326617F6F1FA4FEAE56071C9F559F91568179
46369B394A5CE96FB7420FF8AB7C61CB83492FA5AE4A4B0799578594C9EA67E1
E54498AA5CD6ABA34AD3417F04F5D8D664A7EB39D41E2D17643CAEBBCCD9C38C
C5C9541641A09335EFBCE0D276A54253EFD68141807A66F1DFEB4BEA5889FFA3
4D20BD52012206A9F8D3E0F6AFC03FDBBDF3E51506EC6336E249CEFB571AB84C
BDF8E471E3795C04E38A5306BA6D450D72E50910D1AC385BB06CCD4B8E433A32
5A4B7FACC976BB31FCAA1E62DB2C4FE06DDDE7367930E336B49F47DAD91C8735
9A35D80CA2E117E86B52E41E9278046ED923454989E48610ACB3B1663F197117
52659A9D7BFA561C7ACE0771794FC778675F83C5EDCB132AF124C7E6540A140B
E0A268836C73A3C746DC964E482E63C56C0D396515283970FBFF182F9F684FE2
655FD8F5D057D22246DDC3FD11B77552DB4D90ADBAB77BBB1FB1592129DE0AEC
F822D7D36E52BCDABBD560B403A5C56C5E1BE789C3AC049318C7FAC5E5861E42
FD66C3C0F46361078D7E036281682BCE9BBF77983C93ECBBEBA9B359769CA442
87FCA1B98F4EEC4935CC93B08AAADDF355C99816453587310F08C50B9BA3D107
5388A1F3AED2AE32BEFADF0285DA90436D1D7EA85D7B9B6DF2AC4B778CFADFF6
6EEE54D1A1C5DEE3CCA7EFF57A7C2931933CEED90CA26DAAB45E4388EC4DC366
B9E88518D6CF094861D2A59282044CC06E63EFB390A6DF4BA5EAC7CE39E1EE03
3D84099F5BE96612789AF3EDED07266EF10A0FC23EA1EA97040B6BAA63138B1A
A9CB8F5DED781260962D7618EDB200C3ED976033E8967A8CC676E9C11F74BE34
343A7ECE7EE97E8F76F7E95517A6D6163527406EF5A669535CB2BF4031F29046
BB2D0FFFB47A576F5EAB1D00A582965C56F28C00B3BB7BE2CC8D8391F789070D
775EB775437F0CD53DA840BB3575104B63E4B0BF14E3F14B320EDEF65FD4CAF5
8596DA491BBCF3153DED3B718F833D106432DF8DB8B8E6B34D5308C9010A5DD0
7E0E53260BB84BAB3EA748E8D72F75901604F80F4416920D69B4B983DCDB72C5
E9928F01A4A85954FD74578AE336C782CDF81D1EB7EBCEBFBAE7ED8AB4862584
397928F502D65139CCD582CF0723C5262EE54B9D2B8C39614652A8A90E1C3B65
7D26B99DA298FE4B9A7E98848F619C9BB4FF9FD215B72F99506F06355B332689
37D80AFD9F9ACD8172CDC51FCD3A759ACA0F7D4EBB07840840EE42C2D5B8B257
2C6DB3A7657B75F2F0B9730A20112745703E2D0FE709436CA6A5F36F59E64D9E
37C0A23D6D289E1AC1DA273872F5FC5C3DA2B127F078A4D7AB3FD7E124455817
DDC796D54EF26A1FBFD539D3A21B86DD4477DA49213259ABB3FF241424F2BE5F
89151E02FF87E0BEE26E85C0E518D8BE7CC9214B8E9A9EA1DBB49C6C212CCF08
90C0F23E9858947EE344062EBD9C574979087439975EAD4E85CD7BFAD3C91CF1
EFF577843AF1427D06CB2F3BB519ED1591974218C43F0D2038665F9E2E3960B7
FE68CD3CB2DB6B36C7997C6B21EC11CF1DE049541001FFF26D14C255E3AE862C
5A5701292FD2FB3D04523D6E2F3547923BB117718DFB6E6520F0D0B5450C695B
8C9242CC8671B7284CB2E1E9EB097A3DB1B4D5E8EEB93B4DC7E38C0A10474665
54DDCBAF079B92EA494F6FA75A84C5AAFE280284D0823D7C22249A21044BB0E6
4062074ECD17B62E03EDF4945A294BFEFB51F5FD870D9D7230FC91B83C1D85A8
86CDDF326FC90E04362145D6E8630C50594484FB829DA18F5C078F2EE67D2F2B
08DFF39AE2E8C9741FA989AE494C7166F122D2C5F71B97C973B7CE8500E9F87E
D59C30F2E99CC4D34713DAB680598F41955FBDC26A14CF1E73D6BD6B9AAC8D3B
B998F2D0D647356CD236DEAD6561389ED3A6746221B0CF15D6648412B35A6B54
6A0EF5BBB34AA376D9BAF025BFC650C1B74333CE85413D0EBB2F4D082A26A5BC
3C0A25D2B12CB159F140E00E262F1CFECCB2C802FF94CD34DA0CE9B4B3830FB1
DA85B9B670D5169928990A2E9CC869891CA2FFAD9774E6B92549644DAA5FE00C
A5BE4F5FF91A0B6D2FD8F96121D766391EC4ED3E73DADD476B7DAE1A50AFCD98
DB7E27E44D30416088D9BC07D4661D9ECEC0806830ABF14CE55AA3CA2DF66E8E
748B8ED46466F1EEB072AC0674FE6FED231E0DDA59ED7C42BC05EF00E176050A
C4834D893DE42474EA20DB1E25059E84BD137EF65A02CC295B0FFDE4CDE95879
0FE88BDF2519ABAE7F8CC3E6386ED35E04A14F1E3861922645E3A3F43B48A5AA
1999A5EFE192515FCC625C829FF5A7B337AA422F5E920545F9BB269C869A821D
6C4C26DD2AE746EF0F0B4C1E7E9871ADB5270E1CA9BE28225F7A0370D4C52422
E25263EE101C4EC1C7811B05AD42F364844A56BB91EE72FC8ED53CC6954D2BD6
F945D739BE4C61E36143CE890FC0CBF2F610018D678ECF7CEAB18FF5A0E48F76
FDE2463D40A99380D679B3B76D39C664F4992D23E5988B0D1AF33DFB04894016
E852EFD1EFFE586153C0F31ADBDBDE3F73FB49C5EE64D0D02E1504248FAFAC3D
903FD44679BB09C30288139B41B1E90A10139CA3172677250B16535A1F3E5E4B
6F4264DE58896E66051FC677030A121C5A285C47B6129CB5A3998830CE070D21
2F093FC1B44089F603A21F45F60960F134A47226874C737EF6C085634B0A4A66
139420501351F737A73F39D960EC38420BE46E5B09D298E7C16B8E32F01507D4
0141FC52DA1DE718D634AD9C8B00E46EEEF84356759324D2B9A3473C5DA38DE9
E30182B87F91B6A7F7BACF29A93B44C879CCDEDB063F9D2E51E0F1FC9F018FE1
2433D85AF24B55DE3A61C4D0A2DA4FDE933F5F6FDF17E9FA9932BFC46E2D71F6
585EEF5B2E4E89E797A24B799D7F064DD1A817A53677FC9EB8CC3E7F93FE50E8
D50E3191052943FD6C98B573BDD1F6D70349E1F8011599E3F8FDF1D6E80A710E
51E434E85801617C6FD8ACCF1B77B4BFCCDD35CB4C0367F4EB4D8D9DE8284D5E
B4F43E2F8320C2C5A9AE90ECBA7E65D377E91DB69FEF27069235366AD3E126C3
A73CE97F4C90BA00D206FA012C327FD69EE59AF4470A315B1799CDC0539BF90E
512C8FC3BEFE4D1B01D969EA9E3FEF976CD6E0FA4C9ECEC955B265CFD58AB8E5
F7371E479279EE14B689269205C5B506940606CF3E24A1E7EFF3CA96ED30AD6D
E243DE57690C3D69A401AB3315FA49E4BF4ACD4DD1CA39272533E82EFDD508E5
1C2CD286CCC5DE1202C7C7F654521750632EB637F918667E2233A43DF75239EB
F28F3129EB5DEE2FC5BFC331FF709B0FE9B327CBBCE98BCA2C861C6547E50407
1218CEBE6EB5F9BABA4F2E11BCC6FB553A544A567B459E06375102C69F8018DF
BA6A227CFB13E2D74E6A521E01B74F2963E9A0A1C9FD87A88EE6356E3BFABF55
BABC751D2BF85E6712E8EF57914920775906662E4BA68FFA21AD422D34E15578
43CA0568B431101A1194F8AB1EF25E886BFCDFC10F4A5EBD9530816548BC298E
AE4A0B6B52B8B59C644C409B4191B6F4203F52314F2675F02AEB65A72C66E92A
2AC703E15D8D381522C0AC30C165B822A9B8D18CAECC094EDE020756018DCF51
D0701B507519C4270B70D8CE94B436F640C15872F9B5B77892AA3D110E4D6A65
8F0815C61A5127BA25815378683F46E69E54A391A8675977E7DF9C2D4E6FA991
9F029E50CC2F266B31EE9F9F24452D5838905F330CB7E416B8AF836C5AC26AB8
BE2ECC6EA4BDAA08C30995709E225C21D35DB6369167602CBFA8DB2697635925
969002CD1BEE745DA2E56C17EF3F0C05E3847147F86963C37A221C8827195A8A
3D38993E4939AC915BFD9A212F5FF3F826F742B952018986F9FBDDB69C3AC65A
845F7F33C55D4BE60A1817EBBCA7E1538E8087E1BD5C083A320D52953BE65F31
E8339C612A510B59CE48D2EF7061560C4AD258E7DC59694493E3AC878246F37D
6DE89253EBC8830C6B209E818213C4AC4CF1F391AD91D57BE76FB0E2924A1407
E4A949C905E44F54EAED6419F13D59942C8079336A172D4758BEB5D3E786FB93
3CBE4FD2EB53E4E1DAC34E821EB30FD44BC6CB4298242C38F848FC23AEDC9733
52BE6F32E31E25F18301370F8936810B0566B664B042C7AE0D78ACF0A87E5BF6
F9B66E358168B2CEA30DCD940074F3ADB793CDB136161FE2522905E87B8E463F
95D4DAB7E14A3DF7BCCE8141C5A08FCFA2BCE9F2D1B05A7642E75877EB840149
AAB007CD239AE47AD115929427717F219B0A8907F0EC79ADE1B901DAEE87A2F8
39361DAB43DFFF69650F601B24061A9353CFD619FF9626F63275FD09A5B13BB4
8B3379EC4D147C41197E8387FC04DA7BE409524CEF74EA91DC066808A7FD0EF3
957A44E2503EDA67B1C61827479486134E922E560A673BF314D601C66003CD07
55569085AFC8428389A140EB976CCFB8F29E27587E46C413ABE2EFB51AF5913F
53EEB74063162E0BA1E24CEDCA320377D3E11BD374F0B44E132A5C35835B6E2C
D32948EF9DC7931D104C1385709DA882DED6458319F21C2329938396BC074106
CB9CFB9E0A915F8DBC8435F386917AC87A2BA45D857EC30ECA66FB4044F5439E
CDD556B82A0E43418D179AD883C85AC276E1190CEC242E3E1D86E725ADC39E46
BB6C47FE9E17E29F8EA81E870302A00D91434F3B7A05F243176E6EF1082541A1
B9052191EE5C2B8E94A2E02DB65FC769653CA8D1C07A13CB853544AEC7FC35C5
218DE3128AA31952DCE19C55C23FD69BCEA2C661F57B11B8F9E86BFA718D1521
3346E78C701A5E51923D6D937E62FDE3669B214D240538F069A100A542720A86
31DE88116DE775F7ACC2A49EA6C02A24408271A846990669F2AF60AFAB4C16F9
7F4E88E917F0FFDCE68F22998AC0AF2A60A73258C3A4BBC42A2F918123128195
196D0E150D79AC3CF4628503D1F3FC528265ED8324E56849A47B3B07C29940B9
1BC270071E221D355EA51E9942D3BD7F99816304FFFC8F5B036C953B38759341
ED5D7B9C8E6B70C409DD8362FD291201CC385E4A98D73E8518A4C0E544152563
82032FBD2FCB6E403D34B85ED4053A8CB619BDD4DE001F4C3007B1F317579651
E6D6662189CC2D95AB85D7473F65C5D7B4AC63B0FE928F3400035D5A9D443D0D
F3532B99F3AC26CB25EA3CD64C341159061E02EFBC7C033C05CD919BBD827A6A
BAD3B056228B0610EBA812C50D0AEE0431279F61DA43B1A2A54A6254107AF331
5696B8EC664ADABB2B6DDD4DCAF3A6A95D76089B8C6D8CB191F542E12588B3F4
77531712CEBEC3D22B7733708CCBE7D8BB7283312EA0AF63D45D80F3C0FE8E49
CE8378C8581DE74B89104356DE0C04E64FE0030656C55146644AB4081DD79066
87B7E22B3EF75C879222847F855960CC952649426FBD46FBB01BA78335CFAFB9
E1AB382D2E56E5EFFB1B3DB784CD0EA9B2F6F8510242AF91423BD98CB7FC9DEA
5CF5EEB2E4ED539BA6CCF79C86ED1B7A35DF9AC9D2B3F7DA69BE09418B22FA22
45364CCA166433495142A90E615D06A805EFA90961D22CADADBC43A3F20CC651
E364ACB6A56AC69B58B9CF91B051D7F79BA1FEC641DCB5AE8E303A9B48CAB014
5612FACE4FFC6CC073645ADE3D9B7F9C284DFBE0AE16560BFF5C897A1477441B
037218C4BF3522C421F3FBF6C63C2901CE80DC58A88BDB111B93D07083B0BF8E
4F105108D3621CDEEDAB353DAD46B7B59C9B42F7A7D42C472FF3127671C78DE7
638B1A00CAEDA5480EACA609E4C5EA116F0C8DA36B7D906398A8469EEE44BC13
94E6CA729BC34475FBCF26ADBC8578AB8F4526E2C2838982303318B9B9193ED1
9466F1B88FFEF315A2786B6328C8DD4BB2B91E783A8FD4DB0D0BB7647FAB73C4
3C947D18D85F750E926C97044E93B39E61761EFEF5B0B2163552242D77CFEDB4
BC581D69F08C9AAF536B01FB749E9CF04B8CF32414B5AF442019C898FA82D2FC
AED2A7D45E5F98EA6F92E26AA8C2C37A1102D52327002CE122674E4F20CBD082
ED3ACEE0982DC832F6076C5853D5E10D2E64636F77F4A0CE68BDF118D4631BD3
3A5F27073F7C8F0884CF1D7FA4C9A74C622145B22D558F1472FFACB4FDE76A74
54B357C0B0B79946A4A793E47628D4E6403712E1B70156E8B0EB0B43B7E26D0C
DF660611124EB8DDC246B5AABCC4C402FBDBA8831428BDF66FFC0D4195A667C3
413DB15DB668C0DC00C0DF95EC1DDBF3384443DA510F64D191E967D8124D3A3B
1F9A05725B2383DBF25B9292EBA931D559C74013736120838140F324AAE6DC8F
E9A7E5A3C02CB9FDB4C6FAE5952114818CBC8B5EA0CE5D6C8897E85237498544
A2BFF64A5A0ADBED2B11F1E598F08917BF316C2ADF009C237E162B61CF908D89
651A98B03791100EE0305E8C9537B9F2D5F1E859195ED6D78363E0A2E0BA1451
EAD7D3CE69DD3DF3214B7957614275A1A194BFE64FCD0FBA9A32C0FA728A452D
7FB4091F1E3DFA5B6E11CCC7A83C22E3435E8823F22B8664EA972D6B7A866BFB
DB3F489A58935047A448482FBC3359EE7C2B2064F8D1644F603EC84D13E53310
B29609B59BA35073405AC30066B318183B0D4818A5DB3B439078F4F860AC037A
B0D025878AC44DB91F9D4FBF21CE11E1ED0E6A377D34267A947ECA8A222B8525
5C07FCB3B722F24A39BFB475BFE0C120CCD304FD8BF741B95FEEC8868A28056E
BAC9D48087A99A4E2C3908C960157BCB80648B2E84FFB048F01055CB40AFF9A6
8A2BCB49B2F420F364C29D580C39B638772DA4422C99C54B5FC3A7F7DF602EDE
C74F43D42F3A3D68DBBFEB99F0B07A6CB529783D2BCFAAA3BBE559768EC145FA
C77883F437DA37744A36D99A5915C7D73DD98B7D7BAB0D7A57EB73B01EBF0168
4C670B7BABCE367011315E9C3C8503E6C1CDA5C52733C616642CF6FB57DB0A1D
73C0BC59E7895DDF8ABC82129D95971EA994D218F7DBE1C1A99F2965B7F49701
5C7DE20C9C205349BF475542648A4DFB6570EDD512BD00C6DBA5DE99E84FDFE4
2801337C068E7FD3432C51F6973FCA44479478A96899DAE4EC4FF79EB8FD04DD
8C8E5E36FB783A63D4FB202C261EE32348D7DC089A471D0D1EC93210CDF30D18
EB2D02E4BCB8D41A091EFD15D3A316B3A8C78DD1D43E8C7B81DEA72A8B4FB21D
1168FA4398DE50B0B5BAFEBB99A9743F431E0851B57DB6E493073B7110E67E6E
9F61138D2D9135D4E398EED7CEEB9D51B67B95B16D12647A459CDEAC4E3F8835
3A816A6393F2693B9C52E1FDE8ECC93A1D30E9F3109F8FB657E6E43486CE9F02
2849294B7C8116073E2E69065638E1D47F152AF583CA2D04272746359BEA6FA3
44E759E848AF40ADA9A922A25ACE539EDE29BF79FF17DA0D791449B5A586A647
16D3152DD37B468E6471B4E162CB82332E86075267CA2E8E3C1F8049503FEECE
F09FBF38F173E98D41BC0B94C0E8174A0B4039B98AC9BF98B847E9E68EC0FF76
1D4818F92997C41B6028FC2870E42FDDCA7C438F1470CD5108CEA2A6D118F588
810C4EC7122C69026CE75D4CBD5F7F4944AA2A01D0AAA1C18600D9C520EC88C1
8D0B452004E7081B2120414A54201CE05E71A0A8FAF326EB32D8C9C06B9361F5
73BBDD4E3689E24E967738D4725A613107B3BDC0B3A663581A2DD95A3E813B5F
FF09B4D3EC16E051921F8EEADA9ADF27FAAAA17C3854902DC68A2786C598BA18
A027BE9C85EE80C3C30B4BD17F4A7421724C506AE17544306D68FB150E587300
8220034A718092CA2A39DA0CB40A1B293AC66FBDBC0693B4EC86011CB010F397
5526CA39D5EE3B0845E7A6DD5CFF20B21952E2DEAD89DF916BD671C54F0C7ECB
CD068ABA3B0FEE7574E0A6335DEC6D8A953868464B45DFD929C111DC400E171E
D446F398778B9458990C791342A7D685EA8749EC4000A45F176C47820A2A809E
D4E6E92270061E8B586442C8D9D973679B61C74981B9A9588DD11E3876D2EE94
4488920F4CACFE57876F514E69B7A31B6764039C6BA3218D63FA6F1D8D11AF83
39662D16F1ABB85B5BB9B10912402D19E3A2D625A61080268654F6630CB87A63
B57DD348BC88861B497495F4F7B31DB2A519F1445B89783C1DCC5EED42717524
3BC2223E3F506301905037BD094967597F643B6B84E2603A07BC1671EE390652
7CEBC5BFC9CDBE0C0A71697C0A2AD8F01FF206C4F27590076FD1BD6EF6755B78
50C945AB6CA20787877283FF58D8794AF4940D9660910413EC2A31CCA6BF2B17
69D4ED0451C01DCC92B84987A43486AA5E78733B8E1F88611036054B7014D09B
72EB3B21E1347CD001A7D69C20419AC1A86730B578F63003F70784E1F08C1488
58C476C334B3149CE526E28A7986977825D998A7A538F468369DC428D5035A84
3F3E2A2134A22E46D58EA427B10789E2CECBDD4DE3F4BBDAF56462E2CFA0FD39
0AE37420EFF3D8FC4782D9F7D8B83701BED36F4B32D147AB76FB1D098BCFC5E9
22D287722101D099EAD332CF3DE3E16A7E7C7EF9EF9DC8B14AE510429EA98B61
BA381E3E3DE90238AE917F5038A9EEA6817328D698C7B7FDE9C7F229B18D9F89
EA3791FC0A75446DB7B3D76EDED2864242585312C307A75714DF6090EA8D2673
9162FC21DB5564EA65C854EDB41126E9E003A5860EE6086797A139BFA0705095
755901A3982E237B5782FC325434DAC015BBB073CD3B1864A484185B366A1FE1
2E59D9C66B0C858E826E9E30DBE1699680600134C7D32DE601910CDF003301E3
9A60E2DC7094B62F2980FE7347069A0D3E95B5F06B370CC8CB459C5A63E7CEE5
835E86B8C820E7977A5D3EA3CC6E07D4EFC6B5767ADCF65395D5126A01EBB9C8
6E5EF5E87C9FEA9B655432A4D88C2A5439CDF1CB3CCFDE196B5B5CA17040A46E
CA8D7B9AB4E37A11D025649957C5290DB8EAB3B1D51B5DB14F905313A67FFD96
DE210909857F46083E91022BA0F85EC1DC170B8F84444768C0541087D6E07DBE
F5D5BC7C6F1957CDE63A86531BFD8087EA463BFF5CA195A8762FDD27F232A0E7
E68B2B1F5167ED7CB0CBF16E051CD8C3E4DAE7090A32C83D422170F86829A386
36C4DB0469F50D4B0FB5F353191A33B0D2D8D84E1A094A1B181EA703F8749ACE
9AFF75342E7172BD6A7A473F18ACD0D521A3CAB0E8D157F6BED3760AD95C4E3D
0636426561423A10D0EA7F4497CFCB1DF41E802A9895DD481C1A29AB23667CC9
9A8EA6A6E13CEC6C707A0A4192A81D17780B867A12FD4CBAE8E328C880E47FD8
9FB79FA389BB91CA96DE458A239C284867ADAFE58E5098B42589FEAE7F98E4CA
3191CFA0C93DCF2F1046DDE5D73F3A63D95A418C81818973E0B470723702D777
999A82673382E02360D0C70F3C6B422F9F1238D6D0E7C482B281F5B0CA5BA30D
BFBE3EE496A59CA29248B70B43C6F5E3EFE33D5CB9881650F48EE28363381CEB
8E328E547B0F2A2C9E76BC80DB510C209641FD8FCF2B234C527FD9330BDCC04D
E816870CC583BE47F80608CA6986E2EE3CDD6711488777E89BA0034DE23946FC
CB017E181A2ABA814738CB1FC0719F18E09C5B7C1D6FC18944F4E43E8F8804D5
3A245EE557AD7E2270A5BABEFE40DFC5AD8DEE8220A508723BE17A2E648A5816
A73992C302015FB68F9FDEA1706910BFDC3597900DE7EBD8913F1807F0A47E44
ACDDE3DC099E44E1B6B63C480FA98AC37E782EB738AD67AB7F8019D9C7CE4B41
1596D91F7D1E83A8B19FCF74AAEB86278028C0322329FB71CD0DEB2D34D41F11
D8B262CC8D26FDFFB65F9B02A9A26BD61F6833120D115BB58D52D06BE0ECD850
871DBF91E335AC18587AB49EA78E980EF42A9991B1EF8624D0151F08CE6F8236
F523365B49BFA6D8176F8CA13DFBDD1F733EC51463B1EFA84DF934384C0B7966
195CF4BB79F9F3EF7D65E262D47E4DF73806B099BD7FD1FCC70BEEA65C2B6ACD
A362AC16D5709433137135920EB2036DC7D7B7B5311877BC61795F312961B8C1
22817F7B28E3FE3523C9912AB812C85672F99FCAB2AC371E9E8F22F40B26CA65
8653D164739832D4EE0728D90C851A3499A7B88D4C655AEA29C8D452F2FB4C0C
1C2C1572CA185426175365AF3C684A4FB5AC912FC701E722D7FA8147836122AC
B71AC8B32826E08DE05ACB92271E3591D8F6D97B59655E32DE0F2ACCB181A0D9
0ECF26BEC840334A0D4AFFBB7570F4832D5B99265018C5BD7DDA3B56FE62F95A
DCF367F4B7861B9A204F62FE4A468BBE78EAB9CDFCDFD1FA3BFD5DA2551E8F3E
42DA832EE023C4898BE05E30B9F99CD14782A52760C934146715342F90B3FF2C
23627A182247B590FF89382BF0F4FC6F5BF2B6FA2D0DD1D565F0DAF6A60A95A0
5FB545B3731BE0B8824D2C9DB20179B80B1EC8AFC1AE24B3F77AF01A32D723D4
C4111B0EAD23740C6527D0B3127E9E007DEFFB7D0E42F8C3C7A7D26021EC57F0
6E6BA5B3252A5ADAFC38477DC8E535F9EB9ABA7101F487EA2D2EEF2D16B3BF2D
A98B761C2187A6E5649DC957527E5228E165A8A869C3A490CBB8F17B92329725
D3FF8859A115AC7F787E17C02B37AD27DC82615E76820E2764EAD10C6F0DDF51
3AA9E766CAAB16DE3006D828921A54C8E175E532261C1B1E88D09A6418C833C4
CDED17170E121EE4EA214788CB73E4B343AD1E32DA69A72FE8CFE265A06A455C
7B23E8722282154BFBC0AD13BB3014AC8FE855CE31F389206C9B24496C1C93B5
DD6D3E3D889C0F2E9B1E1E71573D1520ED4406FEDA38E3DB1BBB39BC57E190A9
C829C373E6D24B28D7F79054625FA02C4F2B71BB18E26C2C10CB3BBD99D3B98A
CBC0A1ACD7E3B2FF2B867DAD4381B03122F7A13AC223D29A9A8D347A058691FD
B1217FBC0323898189F5B298D9C60790A069BE69513E2E2F831EF30B632047A0
9B2C1795883915CCC43EE7DAD79B9F579FD211DF6756F5B2B8C8C3FA90446A7F
18AFD71FB7F81E8848CB5D53D7D7F85DD1C28CEFDA501D3EE3C93E11B9E44D10
2B84A525C33851F0ADDFA6DF014A535B565F8431B0FFAE392FD765C0E96B103C
6FFD99B2A75083112749DDBA98248B312AE1D11A0D89E68720DAD29AC927E7F4
78EBE35DDDCF545CD78EC86355A5B83E13854FABA4C4666BB9753B33ABB9DBB5
B1A469CEE11E33FE8AA24940810C4954C324FB0E9D91E622E5601BE5CBDD2993
0856F0B5B9411C2BBF2214B112F14B85275372BAA7D9028A1DDC3A96F845394B
1D7200925F0F245D85DC6E9CFFDD091F83E924BFB93FD52722C320EA86B1B4B1
174C2775C7AD4959A02B4A64482DC2FC992D7B0272F0A72300CFC478070646C9
2600439A32B0B812A05E79F7159D1D5AD916BDB81002DB35C71A87D25C02106E
AC90E92FED0EFA7A9EC2B64E6D7EEF544688880DE9AC02D6D6C986604468CE4E
43905A96A7CB0E6D89680315E595FFA56450D2BD24DDA63B3B850DBC5658A7E3
9496E39DBED4DB5ED8AD95AE02A3552A7A1EC790B87EAFA0584F1E1729FF6009
C925E08118D1C4905641518C5981C27A3E33DFCA2A37EC06E69D7A592A54556E
9A2C4BACAB235F5A34AD83ED62EF7A3B6BF6112C35C22A3E3F3D55C0DEE976DD
920484A150E341503387C124445181FD6021F7C0BC71257354B13B891B0B544E
E62AC608DD10DE36B45C814C194B7B6678C36424BC47C501A80CC1C46C224E33
3D11E474C9E94C0181CDA950EB86518FFE7F57AD70C951CE88F3CDA4A360B41D
46EC63528BD81B77402C68A89F34376B5BB2A454EE8DC9E9F56FAC10F9741432
4AD2A3306446BB65FC5A663E68EEDEA44604A459EC7D990B366A68E4D42CDD24
8405C21B5A9C2F1326056F38B579D42865DD57CEC80B376F203469F14D4BE963
B072EA279CAA70C806C26F1B3E8C1C5108274E65E1B10A442006D59D90CD5436
F488D33AE2FA6AFDE64463539259480193A2760A487916FF66171FFA4A51C821
C3F656F9EEC9DA4EB3066D5053848959B392FEB9C9AA6D65AD734AAE20E2D5A9
9EB48618B84E6BF52B3826FFB11AF44B05ADAFC6124F8F12401542E45D07A777
BA1E9735016E7CC04130672583FD76FBB486FCB828D51A9687281432770AA0F5
49DD27609DF53171384C345AF680672026B3122E379ABFDF0CD26DD6191657CE
EDA10770AEF9C34EDB49A8E78AAF0410C7AB756EF28CD2D0B69C5BB9B4E72B04
9752712064A25F38C3991A0F1E7F1DA29439495EA975DE38C59764D80FA79D52
445B21A3770A3DAB403AB60753111950E3F00D302301B816AD939BBC8AE0D22D
DC31C689AC64BEA91698AFAFB30426B0F0103EEAFEC14019146B548A9EC0FD48
63BA357554AF82234484CBA9E3A8BBFD205408BBF9C9B4D4BB5C4000D37F810A
17DB53CF9B6A7B36AE171F94765740406683B2304A76E242AC130721858FD5CD
BE7450B391DA0B72D7DE4ACE86534A1548B4DFEDD01529710F0B29438DF4F8F3
0B2416118E5468CD2E993A6DF00574470A180E78C494ABB20B0E0590008AFA26
6C304EE9491108E66B9116BE5C0C9D28F4252AAC07FEA7BBEC3B801B069DD54F
31441469E82B64B4CA884D38E922582F31D9B197F8CEAD216B5636BE25F8FBF6
94D22B70B6D40226A174B5ACBEEF7070230004CB882247C58576B9B624B73FC3
49C04585C14FFE43E6E339A6B9D67DA51C6F95E91B6DEE828F375AB70BA9CBC5
E17C9AD6E82AFC5777B0CEC03A681ED0C535DE17FD8C99F462610409AD05C7B8
C1F3663562DBF90363A33D492DA2726FECED11744A4C1E40C5C42C63CAC18B3B
EC73C17941B6623F6E1D0652FD37110DBDB2DDF225EA22CCBDBDB5A63297B0D1
CF3714B5DDEA30344FC1945D354AE026095FA2F109FAE933BF348187833496A7
92B6E54DF6D3D4728D49E2C428D31202D86D46D3062BD24353B24AF6C624A761
ADEF011A8A3813FA90E2613D08B8395AEA8039FD6533D76C52A4EE014A9054A4
70867DDD4A66F2D211FCC113E278847EAFFCE9B70FF7323F53F10FD2D35CF276
A0A613E3A9BF10D0E3FFA40CF0CE315C25E878839B07CF46C6E34A5D86F53F8B
8F38F6A8136A0346A5B53ED0853C81E63CA77A68AF2D74F3336FCCA541E3BFA6
FACD99F1880A2A4DA8620BF084D2494B7F8F211559DE77C6770C1C6CEF5B6AE1
05888E724F96292763CD524AD9F151651C8F12511E46635CA5578B93A8B6B63B
24D70FE5E1E3234E04050814B617211E8A0BC8F72FC80A5B4FFE99D7417391AB
8D4F0A5D6B22E9A0AFA19EE2398A08FDF783AC7BBB94376944843813BA73C2D1
832398D20CB05C0AAC0D6FD8F780BE8403B983ABCA72866A17E6857A3C432888
C2E2F6BF55AB8C47B70CEA081BB4A6DB38366D97326B97CB62118FFC05ACCF80
8FF9FA09555CBEB53D888C4F5EB38D9C9D8B0FBDF3E43F3E4A0AAF7BED8C3D14
0C89BEDFA6472091C9D993B1AD3092FB9AA3C7A53C841984C43EB6E773B8ED44
8EA02B44409D5D3D825C922714D4D157CA6CF67E7DDBB20B08001810FE61EE3B
6AD9A4DD713328C45C24AFD523FD0F9C980D37558FA27586365F36BE513F9DCE
7B9B50052F860DF816C7E3A31D25034EB299D886F7B7D5E1DFCD4ECCCFA44057
673A3602E1079469579BE447252D32A544F74984EFA151DE5930D25CB043E428
7952D3A569BE39702CAEDB371918FDDF514F5679A88C3AFE8C12DD044EE087FF
D7C0F0941BEB44AE97816B3FAA0AB74450D9A3B431AB1DF18DB7231592A8AE98
6358B114C74A535FB33CF5E54FB9AFA9D64715BF4E48BBC97E7259D231F71032
1245D83202714A75ABFC926836ECABA08233D5487D20B7317416ECC7171C5DCC
10F9036136EA67FFF92B4BADE05B1EC435C56A23B6DCA4C5FDD884649F1D1A84
47846C401CAC066A8B9F593BE329F7B96D43052515039140BCBC3572D10E0877
0C8C577DF7EBD9277E69A60D7DA3C5029FC77D845C7346AE374B54094F1E2B4E
6D2EFFA0D728C371968921A98168A71CFC97651754F1AB571A1DCA2BF6839F3A
A91B4F644C9685F205963D78E65A27387FD4C11EB26A4862DB0DDFAF9B347F0C
0C889A252156B7F8B29503B6B6E85DDCAC3E87EC5D89617E91B4A536FC2BF568
9E2993DBDB1E8DF5C66BD8D3DAD711FABD6EC41F3585BA1FFB27B36B93068361
31B147A0FEF9BDA2450C4C579B0E7A87552CB3687D42F3817421DE2C2296902D
AF8AD00E1378F4F1F9CE460EED4B7DCF52B09D283A0A4BED2326EF5D79088EC9
15999E1C380EF91CFA93D5D6087892FE5F3B9B607B97BADCD24CDB8AEB988555
E4A1FB45BD530C227DB227D295E0BEF765B7C823E6CA66500751EA4C7B1F5A8C
DE982A80F9BB92F751EBC8F134828F30FF5833C212A5A6F3F742C6A7A1DD44BB
42B0B8C28871F4E94C3D42BADA0E99AC973D5358829300E2460013B92F7B0973
F528F3EDF9B3EA7F6167D3FD8CD4565D4D985DFFC360A874123F485E83431FE1
E60BFE9E8BEBCAC0B525F77595514384959A5C63CB6EE50CC301CED614FDE618
2D1A6B6D2215BEE3D7A4BA07F6EB554E188405B56477A2CEF9FFFAD7A5C86001
8A9797189078C695D4F806E23FEBD834AC480888CAFBE25C28780C3379E6F9D1
2457B8F7FE9780F305B099DBF87871C0ACF28F141FE946CDFF79EE48E891D367
D23C5E1E225FF8BA5F69DC20E0BE2184C2B8B605308585B1328A86B194542F3F
E328D97E8241D3A95AAFDC471FC51934764D1CBE15EA8362608AD9154438049C
00EC735C3FC6B09C688220E3EF0EDBDFBA71AF06D02AEB0EDCDE00402A28B4A7
F43026ACC7EAF42E51C2D7A2481D0F71EBD9C422D40C22EFCDBC17EABDF0D252
DA6C6ED4DD73D353683025D497209492DA55249AC0C1B5F132706132818ABA70
8AAA2C2D73ED9C32B6699D83BE0D698C5C26CF2F62A0CE4D4A971EA7E7673CC8
4B1A2FBD97D78159FF268A2B0778AD8C6BEA0A9A5D1784873D2A83352575044F
4D59C4ED39551EB8C11B758D00C180D59BB8CA6B897F2A43354379F957883338
F4E58DB92636C7F844FF01DC6487A992DA5B45EBC05008165DD035E2A43FE09E
457976C0E9C347B17020E1F9DEB5D4144A5D152BA993D34F50BD4D4250BA1A89
A63C3CCF5205AE52E0E9BBC0EE3A8CA1E68E9B56A849313A84655173C09F91DE
9351950C0969AC1740A063D5303D16A9B0DD903890C529F5140D0B9834139C6E
0C50CD9260210AF82AB1F7B8CEECC12FA0D5B7A0988F9207E18190B6DAB64652
C6571DA7191D0F16C87B86B4B06448A6D8B68A6267B70A4152815C4BBCAE8285
3C79995BB425936647A0D47D6DA1C16DA94195BCF08255142AED1E97E11E8EA0
565CD6CE724C8058EE8F6F7B96C167BF945409ECA78DA02324342B7979121ED0
5C1FD234D54615EB86145AEAA787742A5CCAB7D0EF213CA316081CBE71EFF383
DC58FC1CFA9719215DA6193B999227C13676B6A7D99F0B7E6A22C796846000C0
444E7FCDEC5C2452088BE207A60E883D7B2AFE243CD741AB41E716D0E047F02D
CA08D9382019B84413152E2DDD990C61C64C389AD858A28203BE72B3397FE39F
4B0EB63DA57D061F93E7CF3A17054DBE9B99F3520C792173B8783EEBCAD7FE46
63671BBB25CFFBDF47F74F00D52261FBD9D9F84D607B86CDB5371351B20D31F3
93AA92BBADB956906CAA7F88AAE157B1FE4C9C94F6CBFB701E638C43B0534C4D
BA12CB3F5750F9024B5C6A811A70D83EEF7F8F79FCFDAC04E8C14C59E85053BC
E906BF13CB42F510E031DBC97AB412395DF87A267CAE6A4715B280DF1520D250
B2171C403D9E9210869F5DA1BDAC7EA6CA1AF4B9A634C360E73E4491A655ED1A
14A188645D8A4696ADD70075837D08DA26B50D04D9753DCE8E4A0350FB197851
15AEA57B785862BC079BDF6EDFEAA79D7C0B57E6DD499FEDA6DAC43C6FF69B4F
C95A71E35193118EC6C58218C00B095CC666B83C0DD527B9EDCDAD8827090C85
B4932E87ABEF72CEC766810497C741EF34FF5222AF845EF6BE10D5A830081D33
DF90EEEB69BA5EE452089D14ECE41BC4E0BB01FB4593496219716A2AEC50FF45
68E2E17613658D6487F9546CCDEF9EC6AFA91613AA9D466E9BC51DD4C3D9FFEF
E8005F3D49F94F099F8FCE877A49F5067BC827CF43CF5249C11B637B8BA9BAA8
6C001A3AF1AE6203BB8609FB53A0C7AEA990461EE7D816AFE0F3C424AFD610CD
06612A6E3667EE458695947A86F32538A640EFC31FF70B7B6D9847ADC386719B
CEB2907682445F7479BFDAC5985A870ECA83306078725932E6BD85BD816B74A9
3DE0D1B361B9D95A0D1B158725784FA38FA87679A5411EA847770DF4980D6B3D
89025780BDE1375277679650E526EACC9C32D0999877CAEFE1C24DBCB71C6942
4BC2CDD0EE18EA9D226D8EB21CB8B18E85267B57FB6DE3BBCB361052457BB4EC
8847BC06AE53B2E2282460E11F97C635D250290D0DC139C3A18E86F0A0B15F69
B6725A8DE294994CADF8DE815EFFF86DC18B4FA1C3A9E91A6A909F98335A27C8
C532E3AA407E3B49CA10EA65A1EDCF4FE1E5CDC31252A4B536033D0C0F690F60
923158C4C3EA3FBA39681C056AE8B03B781F49FE428ABF1C359EBB099F943106
625A3ED6EE42AB9B2CF1CD40C7CAAF3609B4FA7223A7F44DD911DD244157EB4A
BC543084BC7B81C688128F8BACD4D5ECB2BF5EE89C063B26210FF4EE827A4A6D
225F4502E29F0DA6DA806A6262CF9C4A934364EE01DD07AABDE07F89A135D3C9
B26BB8877F25A21461A9A4430EAEDB4997DBE695EB9AEA8C3A8A617DEDFC0E40
7756C8F909BE5AEEF058D3992A64E76178DF1BBA1D067AAF2CD691B0C4B223FE
B1BDCA10A7A08479FBFB10328DA64A55397F5B2005FAF6BF8D7A7C9B3F6B174E
960F4EC204B2D9EBC7BC436FC4B7409613E3B937E28B78DA40738992ED233AF8
F3F94EF516E19B6D80C979DBFA86307906FEEFD7F728200E6FEB06117985C771
09CAE1152921969FAD8B1E4F4AA94D14562A4EEE94487A7D1F28CE391B6DDBAE
ECBA1BD70EFD7EB77FD54C3282185A6BA99ED8980BD340ECA3B14D35DEA0050E
CA0233550559D0E56ECA8D52E13422C5FA21058162D0177ACF9BA5841A8695D5
51464D7756F4665ED30E53AB24EF6A8AF4E7586AF5E8886100C710F46957F0EE
6401B8F1190EE8D7730D9D137DA5D97334F1C67955EDE53044811E4B14323325
2EEE9A04D63473FED738D81EA514FE6E6FDC7C799865816A618E0F7A3E0BB595
1A0E4F0FE327D5431B8164B425220568F6DDEF256DA5294E0EA62A3793C1C38E
AB411B6B41C260BE2062AFFCA22B2A5EE8EE9F77BDFE5AF2710DEBA1944E43B7
FFBB21A522B4249F4996D95BDC58DAA971F2F53219F4BC54A145822D3CD5CDB8
B1B656903541396CEB6E3D77E581337B26C47A021AF4A4A3C43391C96555DA1A
22700A876F6ED902FEA07A0BD537F3548C8DEA7A312C11E1FA8B220C3A82E84C
3551ECB6D7E3172FEA7EC66D82813FBA34D91F8BCB2EB6E324CD57AA802583EF
F8DD31385727F36CAF3A2D84360B79CDF0FC822622E704979F3A59B7E2BC5547
EC4742C7EED56CD1EFEA8A8E09FB8AB185317098B1918D184D5567FBB5836646
D2517A2A3202D689E30D7A9C77BF3BAD1F1F4FA1D33CE92080767CAD69A5C35E
F273A92D95812EF850192B476892554B5E73D2033A6444E569465FDC3F588B9D
A631F22779FF0F6B7CB4D20BEBC8BDCC52C1EE938FE5E840E02D8FA2004FA758
59F57CFD0EE395BF22FC30362FE2AEB5AEAE7ECB4FF3995E94A9A8362E486732
BFE6ABDAB735F2D73FE5A59E22F57BE8058698ED4CA1856F591A0C69EAC8663B
D2C4A52FADEAFC28B5C3DF0353C84FAA3DC77388175E0A225E59F24E77D50FF3
ACCFC2E48A9DE452341DFD9F6D874BA9C6870A9A0EF98C40A6C17B9E33E24666
68BE7F9E0434A9D9D3951A7FDE61A5613C138868D9F87139059C63A2FFC405A5
F5AB219D7F8AC908FFABA448983B5E52FABA31A90660871FADD2AE893C5862CF
6F4A8FE9AD32EA720F13DE7F234687280C5FD076168DD96FD25E7F28B1C4B221
056BAF62A862139A23168F1462EABF79309C206568581EC6FCC858D8128D8CBF
A3BEFDF602713F4BB375B9A512F4A5FD3BC3AD6487B679963AEB51CFF885A5FD
90B81E516E6FE403D80B0782912B02D97C30E3A4B77944E1822D4329F2A36F69
D3DC86873E05A06938DE90F377C967F4924B9E9A5202DF2B109B219C278356B6
A3FEBE9C25D15AD14838AFCE517D05C3EC162CFB7355D93687B2F89093C2A78B
0845BDCF5FD7ADDC12BC66060441A9299B5F8D71967BD4FFE603301678ACC487
D948C0DBD10F2F897A7842A4BC828097A1A57EC2775D1EE5307897580AB0B4A5
D8BBBFE7387D911D6AE53248431957158C4D9C1FCADFCAB6F1B0A9572C3146E3
22F691DD87069EDDD67C4475AD94AD5D99DAC58A5004EB18D9877F7ACB6E7807
5EEC8B0C7617EA431FC9C73335F5AB8D1D87EB8350E73828D7C3877CE5902924
16EAB2A241D9917A640F03B833E63079BF927ADD30F6CBCBF037DDBDBE1C88A7
E73BF9915F7AB39EEE3F0041196190F22436CACB2CFE7943FF81AB8639085D14
E7E6FF44F033318BE573E80B3D0751CDCD1B5B4EDF8335D4441FA02B2F776CBC
52C1590D6D27F2D1F20F47D8985C5C44781DC3674BCE0695B5E4B97E33E516FD
5F768EB14663053FED0D23EE951C9D69394C530DB3EA06EF96D5114BE5D80818
55E241BDAF629C711823DAB3FEE049DAA58876241C3D634ED88907D09E039950
E4DCA4DDD6DFF87B72AE2F7712AB0CB57BC2C583F827487F8F919EFB5B26D03D
5960C3FA6A3E13875ADF128ADBEDA5FD9132087E76B24AE5459BC14CA1129521
E41EA5FA846C05822B8CC60580DBBF4F247D3FE009C5EC2E7079CC8A9ED0F834
33F5ABB00303F9BF93A057F1DD4697B000CDE53B7C29D5F0004C99DEFD407C94
28602DBA0F61AEAF829DF935BB2E8E96C88BFD3D4822BEDFE873208918231D17
6B68EA04FB28E861C256CAEDF6738ADDCE83BDCA003A95EE23FE1AA3690ACFA8
2A2C817E9F33EDE4A823E9BE8DAEBD9A370AA3749554F6A31A0B19390721588D
9AA4532609C8BD0DCC8E5E276BBCAE7D47DCECC75198CEE56B294A3CE5D86C9E
F18EC00C786FB7271BD3DD26105CFF6157424B358A1A53B2056272C9A2081AAF
722BBAC779D0CCF6111DE5243D4D6C9D5345CF309FF6ACD4503F37D66B1BF2A5
53E87A792AFF4736E393CA773558CF4F4DC673E273064C380B97AE58CA129348
C7585644EED952FB4EA1791C48C9D9F0D01F0045498D9DFFD86A531DE2DCF2BC
29A14280F78E35B762595AD52A2363F589E0CAC478CD0A441B53A1031F0A449D
38FED9BDF1F685BD60FFFB2A799F12F8A4F51353E8385DFB6F50909B346E3EE6
889DDE50902282023C7A5BEAD1A6CEFECB8CAD237C904145C9FE9CC93ABC6B14
6C5C8680490ADE0DE44A2ECCE8B37DC27C2FA54C78ECAD24A37B4B7386A7C190
3BFD00202BF1A3633D3600405224E113DEB96471F6E5D5FED8F3112031039F60
C3CE6B9C06259B2A8F844EAC7975AE4C861617AC5FBFBC353D7FB89986C72879
F575A90DE3C2B04B1D2EFE220347F9D7D0240FE5AA4BEC5B6D01C859098D52FD
C86FC92C6C72C18DB7B860D870629E0D1432DBC48499C1715AD2D6F98F404B68
997D08B6769524DED6B0257E40CA9069E780CB5F3B8B2FC5F82C21168C851D77
1618B11504BB862B565A690AD25A7413C20CA99DD3E750177A9E66DC1E4D47F7
E5C17E967D867D0FD0CA0C9E26A69538374D5BC908EF97A154FB6F9A303C5E35
E2FDDF5B2F36DFDF484DC0C3760C49BC3BCD633D858BB03BA0D44C9998F615BA
A6C25115FA500E8584591454BC93F7CF53456D81C58A8727DC31136152795D7B
652E29B65B70A198BFCF76F56EDCD153E35A83FE8A80E077248EE862912603AF
CB6C533D296BFF78E9B0858906A668732790CB5F14EA9F1D5E338E381D1FA1D7
94FAC5E452354E7AF1A2C1695497070F707A22683C57B9AA7B442FA166A18947
3FB1849067E470468695A5197951F1EAA494B46DF72A4239D252DA6F8675A9CC
EEE0220128E562671F7FEEF9FD75570944AA44DEE5D46A2EEAFFD0E552D8B5D8
568DED50CA3E4DBE5A2EA7948F202422A1DD82AF6B1C62FF7635242690A6891C
C0E94721F467A2A219F75DF572FABD76D03D51DA4CFB3B124A62654604C625D0
27B27537A91F12EC72672838C327362E3BE0D0EB3A25F17FE52C49EEB3613617
A35DB0FDCA2E1B3355275BAFEF3C8F7D875F84DAF703F89CA29191A4E0055F8A
4ADB4A4E79A3F971147F03E4C4C5B5A222761C63B91963F84F60ADD2D453DCD8
1C093AEBB0908501ADE43164C523A4E3C1A54FC717061FCE6B33D904317F3BAE
04C8261FACC10D3E4F2578F6E2CEF56D5206EB922AB43EA571B7E06B43D10C7D
1F68D3A51CFEFAAB847730AB9DA9094909BC0AAFA3523BBEFD48A5A4DC2E6282
4A01F03D94EC8055D8A61595D782445C3652CBF52A1D194492862C954A359C08
7E6AEEB4AE7B2F57AA3FB99908B46B106C4DCF1F81834F6C479D3D9DBCD76389
148811F8B3915D6947287B15F96A5B775EFBEE39472EF4FD49D54AC5C0934047
2E5370A43330D523C0BCFFF331966D9855964F9D0EB63385E305664DF7444F34
AF62B9866C553FB187CDCA6E10387A627340C197ED4F3C03C4C217701ACE8AED
0985E539216B683B3C532136E772CB5E5D93A2683837169C98A958CE6D68B031
3814173A9B2DA06D0AF7AD0B2423E9430E88A127D5ED4C46B61BDFE3E761D82D
0407DBCC4DFC733EC3550187148A3782829B1EAFCC58AFA36ED9F7A8E5D92823
50638765962DF58FC9CFCB5C965079156E20F7710AE5C27F14BF31D89B9B9B91
CD11B59D20A52B5C0123DFE54F4C791325F314EB435DBE0AC1663B0754AD7B44
69D9EC9E309A52384777B16D8FC7D931EDE1EA6545A1238785554FF4C0E96551
71298FA7997876B66927411D921B9495B09B0038B6322FA99DCA5B8B0C056F0E
C1AA5E8FC0E4FDB55287BE33B338C08AFBA87C005B4E9ACD2FA75E2C3AF306C1
A25A52E2EA36C71E4D339F9BC2C6E2C7A486CF57F3F5639833AB600C49E9EE03
BFF17D667584B41E8C61ABC049BDEBCDCF82303FAE2DCBAEFE726FD33031896D
C9452BDC8448152277F52006C206E604E7F4FA00A6591B66A7D64D71B719C2CF
67039DE5A3529030F9786508BC3B37886206046D920ADA57AD48805A8686CE76
5662738722BC0E0E77F2057F633FD0044E51F207B809AE19C65D5D5AA5EC13C5
A288703793ED2A78BBE24E10F36997F073EF8B388E3F08BC8697AD683C861D81
5EA2B3B79489FBF060316C98E0AE19339B37ECF84B5E0AE7DD010B683E016FE5
A899946E7FC3FF869E9A50A546AEEDD9A0E3556097465EA56B7CF8A2B7034138
10DA416A1BE2785C542DD1A6BFB7B193F6BC73F23BE84FC82A08DC144AA712DD
E2FA0039ECDB5C5F0A4F940C27853C24678A8165A5018CC4E3E741BC59D9501C
65FE2AF8BF19EEDA540FFEB2DD64AED1FB23BD87D0ABCBE3DA6A287B947A84BD
3932EBA1EED8CEB48B6196C374B27863B4BB2DA7C92F5339382242A774EC089A
3B18339A28117E1AD29ABD0B97739D4B01D8547E13811FAB088022AA3004CF32
4BCACAB70519106DDFDD02136E495DC646D933A1BB2CF437CECB515BE0A3500C
87496EC6FCB493E94346C7F005D22627DC91AE45086A90DC97CE99E42936ADBC
0ADA451DF46CD312CBECCBE94E252CCC733BDB3773F17B7877CF5A055C09ACEE
9CD5484BE8090C609C8B666FB7F2BB9A292787AA39586897CCB68BA163EBF17A
2351AD4CCCB8008A5C6F784AA06D30443EE444326557171F2F72AAE31243EE3F
90841104F48E068F18BC3629FFD72BD571CCA8F79971D78725573C655044E440
FE5B915B5A629885D5D01F8065D458787026606AE3DEDE2A777D9BAFA088C322
6F238566305A544D5BDEF4A1BA282253535973C32BE388DF33685E9522F1C6F7
A9E95BEFA5D5105F001D7FC126B34AE7C2A5F6279D6CCEC4A39F5DC2252F6B7E
8CD12E9D6A8804E09E9D56207EEE62541369424851A2BBCEC80D90D3EB321E1F
34022E22941BCD18E8EE9B7D0717C15ED349BF597F37CF81F0CB12DCD455D5CE
66FAF31DDEE28497F5357EA94F0A495A8EC33E80706E30E063309A43816E1D48
31347A1A1758665B3E915B9C616268DDBF2F6BE21741A5FBAF19F42E8FB48CED
93347B6C00B7819A5BC91DDC51002C02786BF2D6F88E6D931828110297520F2D
6C30E7616DF7E2B22A8E517E51557F11C62CA57D72C538F2BD116E18F5EA9735
BF6A1F488D9DB145D34C42748410696EB07EE33227A545459A36D8F643413C42
02DBB1B5E6BBFF321ECA44D165C7A53FE5433FE14248A53EF0D18AF43BF7198C
FA94FBA2B2808D66FCC70F98F63DF74ECA02F6AE2A95FACC351082A54BABC4CE
42C5536F577A95D2B56A7DD065DD4C2D8ED5A0517A6DB357842624C2CBA27465
7B6559DE940DED50680477FDC7AFECFAFF576EC0EE2CDBA0FE9D3329AF9E58C4
A06F7C0779D8DBD793C1BE41F804CD10EE560AD7A4C2BFD47E268EB725D95559
C8EA89A914B33880AB40B30E7542B96F0E51901F0FD4CC657CA4A4EB1AA64C9F
0FFD1AE5B1E23169AF88B516A75C4D0E7974790DC426548F5C310CBB06337CE2
1FCF10E25B3FF718CEF0E2EA46B35C75FC2CBCD90E9276569A6757F709842B99
33AF45FECD03906DA51FF1976AC2EB0D3F099D9BAF4738AE888EE19854EEB9DD
ADEEF48ECB14C5D20C2E6752420B5E195FF4BBCA70CF53B0C3048E1A37F92897
D2FB27870CB26EAB1ACC3B4763E8FE8E0FDC2086666F652E0578B1C6B53C7833
57F86260CF94C9D34FDB1C7ED318D341AE6F46261F26A5835DEABF8BDCC8816B
EC2FFCCABE4435CB5687CEC654A149AF84BCB48AA13CA8E4D134FE575968BB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMBX12
%!PS-AdobeFont-1.0: CMBX12 003.002
%%Title: CMBX12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX12 known{/CMBX12 findfont dup/UniqueID known{dup
/UniqueID get 5000769 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX12 def
/FontBBox {-53 -251 1139 750 }readonly def
/UniqueID 5000769 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX12.) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 35 /numbersign put
dup 45 /hyphen put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 53 /five put
dup 58 /colon put
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 80 /P put
dup 82 /R put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D43A151FEE81296FBE
0CF37DF6A338C826464BA5198991445EC4BE80971DB687336AE8F74B516E333D
2D8AB74D362C559AAE6ACFAE49AEEF4F52E28C869222C1301D041E7A0BC1B608
1BF728EF9E98F3A12EB2714E7F16B14E055FE1FA0EEFB058860ACADEDA9D0E4C
42E3C6F1E4869471BFAA3760175F3FBD842755A9D7847EBF605F18293B42F557
FBE2715002669091BB033E1AAD657532F34F7C66E4F04D63ABB07E6CB9D9AEAE
78EDE8B79DD9BC87A1FF445EAA05B5572BB880E69F4DE1F82D7F0E9980AB0C18
22C448B0B1722D3CC33C56FF287CECB80658B3AF5E7675BE82CEFF3DAD5942EE
A03C955FF979E41E54BCFB5316A9AB8945C403A73180D0961416EC9C92F49811
4B91BC4C788392994587517718521E416D469F69952149FF7F9224377EBA1065
4A727BF806A112A7B45B0A1BA1D5A23683960575368D9EAC8C04753BF7465AF7
95F25C258C63E4FDFFD0B412FD381946AA38C0B961652BCEC30322C47BF4755D
9F91880688AF066E32FFB22E1A52DE741307AD3ED830D6BAA1D1F562919666DC
5E8FD9862AC8600B0AE0BC7FC779252AAC57248744ACC8A8AAFA836BCF09B0DF
9253DFBB1CB77EA8A59D42D1B18FF25E9AED72FA62FEC3F126F030F5D7DED9C3
CF60FE890BA4A48E39E687BFFAEAB96AE542A6387F6624486037C8924002A511
BEE5FBFD780AC1D4BEC3FBC47A930BAD0280D444259528B6C565DE11DE36BB65
9BADC55C1EDA1A80458E98896D782DFB5C137897419602809F9BF8CA39F00C68
EFB9E076FB324C2963F23CBFED28B9EF70EAA4E4B903225D1F199A7162AB239A
D92D71C18B1B682D04C6A48926275BCB16D413B2A0E953E1257E0B12D8B717CE
2EC84CFBC046A4338A69F454A469B12118E562B4F56C5FFB3CA5D357513E6FFE
947A564B229C7FD873057D5C7CDF03E958294A1003B37D8DF565A70A00A3734B
0138AE5277D383D10C2BD853EF806D3CCDC47739F0E374A3DF3B63638B949ED6
4EC25869DC1C0B1F4DBDFFCC97382841D8F10F3635C792139A1EC462FDBA379C
BE0990CA2E70FE73137AFBBF30CA54954D7E7377CC50BDD780DDD4C7FDC77AD2
F3EB1169F14A0041F18160F43C24FAF556DB5D621709FBC544CE55424F7446D4
6AC07A51C8CD5161AB0AD5084A96FB35D77F1CA155147DEF8D7A590EA6939514
D4A226588295CE0007BA8A550895511C8D80BBE5CDFB8A50D249C3BDCA974415
F5557914A9B805782F399E4078DDB6264F1A49A9A5BA45E284A5196E9828EBA8
481D357B8D9E6ECA631A6204439FDFACE7D7E6A2392726107CB7D2517CD19A24
FBE592C119626DB221BBB635B6EB84845C16A9585282E34958B961F4A543AF9D
419B6A9105BF185FC767712D923437BE08A9C0EB92AB6792DBDC671029B6FCA6
7F717FCE379C0F3B51C6CF042A762ED04898FBB4B0105C3C4ADDDC18C51BAA3B
70A93666669547081D9246732CFF74C83EE90DA17F5B4F8BAF47FE4D81590988
2858C9B96071341FA0A0D23BDD4947FC9BC2297913CFBD4FD6CA4303AB3179AE
0203F1BD502065F90CE9BEA3B52DAFE4A29446082EA0E6B1D7AF1F31D0AD02CC
9A7FACE2CA86E5FE0F6A425B28A5940ECA306891CECDB3CFC7A5BBC76B5D9E8A
C754379ADE80B4D72CE493010317BF21A0CF4A0A55C1246218839DCA3F4D626D
1F4161D38F54AD5142C1CEE95C61D8BB10FAD4B772F4955777AFDE8AE5A837C2
A2BBB11D0BF5DA2E63D0B75ED421DBA9C789B281B01846B65DC572BA69591969
21265DB722AE86BD8CAA3D887C975A617ACEDDFB7AAB341F47532AC0F354A530
7662C089DA3939588774FFA16FC4A52555DED6D6F51DE718BF5F345C23C90198
17B77CB8B5D53A5CE7A79F3E286B6A59F3F6178AC8BF15C0A15C1A8A95D03B60
30EBE53DE328CE085CD9A1D49C69AA299C5B58B24334A546F6E274C1B534DC8F
3289553F560C2F81E413ADB92FA0E7DD1C2F39D5FD268EBA97AB7335ECF28257
96B4EADB7D0778706CB41C7E9C882760E7670936774A1088FFB2011115FDADB3
B69EBD5108760762521C25C968C3E282DC3400001AC8FB1EA27FF643E3025950
1D617BB8BB321281708E496277E11DD3AE0023DA9F25AD06B39C7CF527FED27B
57397E88D3DF70EE4FCCEFC8A0927D6B05517E571B3E70ECC99F3CBA32CCD4DE
B8BF22626B6C94FE65598A88AB90D238461EBD9A098DADEA4091AF1CDD7560EC
8E1B9BC2321686E1759E6B8A270C8CB4A254F7368039602EAEAB86ED21CDED91
8F2DB9889F46981C494C7EAF5E819B91C129F0740B8002B510014985E5791F59
B16879CC6521D8E9F1C4C1890AC85A78022BE614BEFF318AB2616F0C3F02405E
BB425D1555472A2642BA7686E431DC3FB8A1688B76660D9957C3FDE8D58109AC
21B1234C9DDF3F0FAF93BCF7B2F88A001F23162E1A13E5E9118D51B485B70A91
D0CBC39CF44413FD8686D9030782DAB58064F5B987E0402AF5B264B17BD31BD4
FDF63951BECD73ACA6138854EF35B062D01F33073850D9C09A818828C581241F
A625AB3638081DD0F00F946BE5450D38489CECEA4E66B4D85CC8AE0157E2AEE4
A22A9313829F24D573101D84CC1784D1CED7DFAD5DD966601370C6CCBB723082
A86BBAF0A5D867D0D2E3CA16E14E5109A29EF02649C47E12E88B3B397D65CACA
DEB9940B92100744D686066F8250FF30E5F13D81428EE238A2E4E07ACE0F5C38
7D79D4A336D0D26AF9C2B84088ED8ECDF94A1E3FADB45AFDAB46CAD6FF950B0F
07AA2CDF82374DA76C56D29C80138841EB13F0D02ADD32F88B23E282ECC845F9
BB9AAECE9CDC644AC2D49577A92307A83A99434F6493156DF25DBF0FCF2EC21E
8C50A312C3D19E0609C0038554CF4FEF3ACEB7A833FD54B06EF0D617C2971C89
E4C06075B09B84A4F78A82152B9A9C540B1D881313C2C74F20ED064A9606EC2C
B56D7BB4797F1EEF4A9B13579CCF311FA4A4DFA62D80FDB7F535CC6526D1AAE5
45C008EAF024B48C377522F74D939A475970533E645B1BFA81997549AFF26F67
2AAE6C2EFA357DB3B525276EF330905688777057F4E4CBF584520A534A8587E5
5A8360891E75A15205E8ADAC4A4E5A6E27D0C4A7D492216E4BC023AB027F37AF
A8DC7579BA50204D5F45A51460C5BD8A5A7F87668CA6451137F2F59E117BBE28
5C40820882A5546FA76F0CF49F8A6EC445F0647CC3227C400F56E7E9B84A6975
E85E243CC1666DBAFF4E07EEAF3AF71BDACB30DAEA792F2B8504CAB071544F01
5D66243D529C479D276FE22F7E275D9E7FA9C6EECA18716B2F213916E32C1D94
6E32397B41AC6779543218E506569E3544803BBF9B404A983EBA62A494187B30
8D3DFA4E1237A2E5E08224A60492C09ADAD8775B7CDB830520829BA164209ACB
BCDEB2D574CEBFB7AE4BE72DF4EB1945FEF2458761AD8DCC0D378AEB7DA002C6
9C14A665DAAA532B0ABA98D7BFB5A6151FF6703385AF7AE8FD315A492FCCDBCB
B825707F9566B3B4943A3C61C3DEFDC31A843A2D67AB06891F3E110DD8C73D3B
B5E4151B51D9F13905D7D94DB9ABBFCAF35F43B6EEE256B1A80ED6D1739D8D5E
8C767F6F0E8704C5345D028A2A6DAFD9BB7AA048B8B895FE9423A7ACE858BADD
595CB074A128DAFE08FDFFD6BDAC0114159A702FDCBF8013804B0CAEAD7AF38E
FAF086A3248AD4FCA1401A85AE2F72E3E6956DC0996FE8ADB18F89B14A208A15
13F81AF73D0DB72F78C4DA634ADE3C73756CAE6AF2E149C26316DFD93370BE1A
FB4A79F77A67C07CB0A53C78367F21661D4AFE9E27328E077B522B50FD9AE2E3
DA087BE481515B5DD7BF894A96A84A6C78874100505B7DDE1D22EFCE8D58B3AB
313AB5495F72E2CA4E6AE22C0CB854302B9990372F1661D9F0A517F90686F248
C5643008B3D29F7296E5C8FD4049886662EFDD4106E17C879F5D41CE84F87E89
F6A3117C968B95A35940CC29C43E1E0DEF51C1E46B676301F40D59615C3F73DD
DE37B72FF7105DB84227DA5241583272AB1C3CD97AE11C1EE98FFDB5E5F44844
8FC41BEA5C54B26341AFF6830D9D0A5A2901B0653D8BD0746838194D240FF753
E99750D3383373F453723D86BE97B571B8B84D8696089B5CFDD53E6C562A2197
A8C4FB0CC690C27761A816B441029D3D306245052E0C41B53025D8CB7267CFE3
C17FDFE348E765326F91AEB700CC49162DF748171214252CBC821493DD01AA20
417D66DF47EBEFFF3E9BB2B0A2BE7D9B8C68BD570FC2EB0FA54CECC318F04C43
19598BDE93F2F13DC7847354C99059AB20593EE51E94F9D4E9241869D605AAF4
9D9B5FD88C3798A039A67993C5EC68B6326B132E647F67EACCA7F7AE7F718D85
12666E90D7C73EF210E344964A38228B236679A2B18F5E081234CAA2458F8D83
3F0CA308D19663CB12EB904076EF88E556407C33C9380A6A3D68A9EFE65387C1
A1BCD2D26DFD2AC0881EC30E81C0A4E76C244A2BD822EE88C4A60B480D107E68
90E419A1F512E865BA922A7830909BC2611A80931CB2E9344529586726614D94
3AC5200FB9FF68AD9686506C5EFA8788C0AD0251AFE7F95E84683380CDB421C5
B1A783B6D5F3A6BD1BC1C14B363DB01C87C0796DCDD5BECF41A1A9F43183CF6B
82C2AE49F0BFDC5DEF7729F2E638EE6EA9E4D059EB9BB1B992AD8C82D501A550
1BF73CBBFE740179B54E193E84A55DCD61B343C1852780FFB44248FC9426AC94
AA2B3FE20FBA30F6C4D1E0FF3EDCDD8C0F57CCB50CDB0EFE2E04A8927E239C1D
9B026C7929BB48461D4D695FFC766C8A0E545B1BCC2AA068D1865333108E7985
2D93F9B00EA0A90939D0D3840D59B6CC0CE2C147B2E1A9A4F14270FE3ACF51D5
99F7349106165AD627CBBB0ABA01ECC6D3A14C1DC1ED23A9DB9865BB4396C51A
31ECD001EAC94B33C34E29C5611148EF3E55DD61813470B8F3CE32564C749414
3C93C77EA5A3538A0B5AE3FC4DA32813B06772E0E48E25BB39F3F6FDCC077E86
F86FA50E18FD19EB2F37311CE87F18F3BC85CE7FD71CA92D5C3264E34E04A2E5
70C79D99F54D6C6D9D527AE45EBB48411221134587D2253E7C8ED7658EDCA34E
5E768DD14E0200470F73C44D006CE8CB35DE1CA3EC10ADC668B0662A7774C891
84EC95A31DD872F0728D9F65CA80940080E04630BE4DEC77A2C49E3913C39978
BF145F8832AF2C4385EBCDB15F9D32C22CBA0CF950877717D6F1591D7C0B8047
8C9BFCB16AF7124ED83137695F3D69228DB633053208C29E0ABA1B06A7FB3EE7
5625CB44927E2DA6E038A6E62DEBDA2D96A03177982D8FA33BAAF4426E05F4B7
9C1748B3FF7691F9888E7FF864A10B9DF761A41E6B5CFAD2BDD7E1C4924AC97B
F4B352705316DD1A58637CC12D71C18A5CA691AB2AA8F171590EC24582B1123E
94D4DC587D8F99E18A711776BF4013C96446BFECFEE4C809EA94B169088024DE
0CBD20199A915AA406F0BD5F3D63D1467C49B4691AEBBB35ED6624F2D7BB74BC
E80FD92B9FD04DD9C2BE9B6FD29EC7EC07FAB447511C61DD299C783BC09AE2A4
7B3CBCA6A20C6631D06D0B2E2482A50612BB7C29B7E7D0A205EB0E8436702581
596BC996ABD58CD8D5BAAE4B1478195CAFF98FE0141287296C4EFB8D2E7A8442
F0A3AA9F9264329982532295A176BA1867EF732BBAC49AF485D9D0F7130F617E
7F7DEEF935874D55A22240F8EDE4F247D5F73481373A392D40A8076BD91079E1
1CE5998BA13D48D56B49A92B4A18430E316405D2E2E391B496A1934671FF1785
AF42BA3B2D14B8E04014437FD194455C50289DFBA61B5C377BCBDADA48E82DEE
4E70EF5E9DC03064907BCB8BE4D59DE069FB0C0CB140DA54708E630767313F9F
744594AD8A499CFEF733E640A11FD74E46A749F9C7D18D49251BF85C6EB4668D
67598C31A8F90922FEAEAD4B83B6E7184567DC798E4BA1C4C9B3461A478D63CA
054F13B502DACB674EB49D6BB935E5EC82BF99FDA7D47C581AD7F940DF4FC6FA
6C6D25D647033AC69505F0CAC58DE99087F365531A6283CB89CB644688963C3B
8B2203A94294E58739EF23C7803630A1F9121D62BE1977DE2F41687C8CAF87FE
CBD7AD3B98E0D95C8C6E1A7CCB0E09465AA874DC90A0F5DB2C5E7C130297FD39
EFE63B0350B5139D09E6864D22C3F1150B29196E40EEF9723E71158B7ECFB8E4
C426FEDCD439420B7F1C251FADA347C9A2C49738B5A17922E1EA93CA7B125B76
57449EAA9C1D591CAD327D0E98EF2D44D614EE9ED49DD31ACAC0B956620B6BA5
5BF6D08CA7541059D5ED2EF00AE2EE95488F5645BF6837D9241C0D3959B7580F
C9ECB2BCF3E65C07D52EC9CFB21C11CD4C883E44C173214C900C44D2E1E43DD1
CE8DFE3DA93C38B548BC4EC46FF91F30CFB97525E1FD4E77686433B20BABF8D2
848C1CDF1BCF185CFD7A81D2D4BB826E837E2AF35CFC4F419F698DB0C43E9F9C
B0FB628AC9A3CBE9B1FF4A067016E70333E78B32AB2D89C483834B31F5808FDB
77492E099F1504DABCA5722C7860CDCEDB2DDEB512FFCC7D287F4945FD711F28
87BC3D36173566B81FC2C1290C717A09697DAC6072408E20926D39270121CE58
3EF97CE12EDD7F87F2C8CFE36C3C0400869C0D813B71C425343EE0CDF717BDD8
409D5297D0F8F7FDEB0257C0A391F5635E0DB1116058942FF3E7C94D5F2873A7
A3B0ADAFC3835AF2BE474E6741319BC6695FB37F59AEE388F81F6E66F910000B
72E6BA7531B4378CEFEEDC79CCF4947BA1703823B5AB4F4AD73D9615C66C489D
99D68E49C9BF765B7FC547BAB9640D51D5A7A2396507AB5A4DFF3D14F52422CD
8FCFEAA06A56C6C7FFCD29C9A7A59DDD2A909A9363FE5F1E9629616D25ED38CB
E754C059E4379318CC491C3B1A90128693AC53F80F8210FAEA7EE638902A7D3C
82B95B3F5AE340EC1B648DBB9FB679D6E80B7F426D8671FE7136D97F51E2D2F3
C9CE9183E4061CA40091A2A70DBB9ECBB19CE3F65ADD0FB346B54BAB182E2CD0
EAF4C0F402C25573FB344EA771B297BEB615FCD0595172E84ED2A62FF8962634
23C19076C2A9ECEED5135994EB397303A9619C76DC55E032DA83FBA441BD484A
59F70A5110A8927F6239A14D4E223E189A5462E4A92EAEFFA4B961A2A32B320F
C2B4E8C1821FA67A655B5042C15E4DE1FB3652B55078DB123573C4E986B19DB0
1C5131F3DFAB271C30A5476B4A19D8FC922E31879C34BAED94C07A4841B8209C
403369FB8E842610D1EB4662B6171A4465FD0E819964F62EC5B0ADC92F08CF90
1DE0B410FFBAD16F6D355E8AD72CCF67961EDB6CDA82398021007C2D0462E893
75EB0710AE4A6CDD15077C9DEFC5774EF4A657734D703CE42174259B58E5277E
0DF26BF59AF8D1A3E7DC12E3C12AA4B67CF35B19962F6950C2020B698D971B35
82FF84E72F72FBB0C54A112BADBAE6C4CAA358BDE6A705AB59332C3850CA3D25
C7564499BC1319121CE0D93218210C68080AFF33420E3CB3A48BF9EB66BC07C8
A79D8CD8E78C200FF7CFA3DAED0B9E87E6141C88B436D8FCBA50AC195FCBB9BC
9512B95FE3A37FFAAB39850FCEBD4D50A243EA416E73F53B4B00F3B6EAE0CA06
0693AFFEF215D00BFCAD02E45496D7C8F5E99EB9096FC4300D038C1AFD31EC4C
5ACA6B72C1BE7204E37A4CBBCB1EC26AB87F2FF82DE20601025169A5FBD2D060
62B5B2DBC288C79C33B596832AA18D730AD572C6EDFABCBD36DEA87C0F323C3D
6E537AD3B43C6F3A905597570A8C6B0B4A5E08C08EAFF9731E745F2BA8ED0C0E
1ADF7821CFCD4E38F3F4C243CAD31D9F8FC68B9043740852B4CCBDD37BF728E5
648215961FA82A0C847ADCC5187331D0863A4573BE520C02CAE14AED4F06B3F1
FB4A318AB54CD86DEC824707B29F858FD726A167F2333855C0575EAF4EBEA0B6
754B1775F967140641FC06F82B191244186FF347A351FBD8FA62E8C978B21F6A
E124929876488AFA97FAD1A68A0C3496BCA768F4AF8016D7A65BBA3AAFD7F5FE
E75FE714FFF3D54D09C9747ACA01CEFD260985C6E87477C9C7843343C7E9E3F4
0537D461EF019E046DB8B5BA258462B2FAEA1826B3410BA3333480CFE0DECE61
CE2731FDDF7FCF2AEF7CC2B1EE7095F480B3B27D78FA90FBE923D372C680C87B
7F0E702B8FECBE0CBCB087ADD6D28549FE707FCB616448B0D94CBDC404915943
66539B177D5940370C2035D0FEBB3A3C666ADCEB45F5B15DEA729BF86BBCC309
0294FF267657EEA805DD28DF5DAA82DF04781F060CD0748FD4CFD97866CB3393
1D8222D843CB8657553468D6AA9082BD85B2FDE03D97C5AD9AB4DA0BAC26906C
8C9946BE6038B6D457FE68958664FD1D7A6FF998EC57485C71B0AB3BDB9C40A1
D4D595DD5B686BF71187D8630A83473A567FFE05A8186CC4A50174FF3E7FEF12
277EB78FF5E68962BB9CF4B3F5E3D8B5A2E0B0080EAF5FA477ED1C8025792A24
887FF0C361A14A9D85E4C017D55A60B6D3FFE3E17E97ED9586B3DC474EF03F00
5A9E3C8F215C9C4EDCC261976D9B7CDBD9766788858BB921FDCAE5A883348F64
0F416B9CA7B83B2023C2929C27FD4C415AB910A7A54790DC10A630FBFF087935
93B7FABE1B87E179D9600ABEF8F07DB36DEA849BAD3AB65141ED3E8F7E52EAC0
BB30BC2C240DEE5A6C384AB01EDC3D62E4A5DE15454B62E0A813DA9BB9AE6BA3
AA408E6C0B5D8304CE37D3D70867E2705D4C541C43A1DC40E0D126CDE6549019
99090E315BD71B59591FD321DF033E7E9FD8A52CDD6E336944FCA4CF851A0674
165DA4CCC7E9CFD42C1D385AA3276D9593B37216F142A7511E4651AC3B15F757
7D346E6068EB40B89D5DE9B65E20D8481426F502B2A42AAB4BA3E2D2761E22E3
40EF4D06591543D06488201B2E2169225AD045C6258E8F0B6A67CF8B6DCC857A
13EF0ED1AD065D9A82CB5E6D013724C31AE7ABA82086C1548C9A4495D2062DA1
D81C76176E8D26F1ABD416307B1554159BEC9F4522DAA0CD1A373B8F9B5D261F
8DD9DA464672D5F219562CA8A77578AF89AA9FEF962196296B504DF5F724ACD9
D836D97FC02949E23455DFC8F7853987E57BAE01FAD755CB22E08127D24A8A3B
F543AFBEF0E5240585DF4C795B45679C31B84A6A8253E27C31147D512D7DA349
A085E560320C8A19639D2911B3C4C9FBF6E5C21FA195B4A3C8C9118C7AA19229
10622EC62C50AFC429803D0D949151ABCC39273F48835936BCE3469374EA935D
6C4C6B0506B46437A42454D02C39E7ECF4AA27BCBA8CB36F697D74D4C59C26AC
C5A814FABE02C6ECA2EA3FD7B06932848F52897F725ADE3C466B57766DFF526B
12CEA399DD8E66CCE8A14CB8C598FA3E151401ACE5B1190C1F0C4DA4A69DFD45
46F8EC9A71313C7AD6C7984427ED3B37AAB84410C8C6FCA4511CA52F09AB0640
20B115675072A480ADF7440BF7BF298E271D429E6E43F30ACF0CE8D50C7FE446
CAA415B4C4AEAF51DCCCC342BB70FAA66D09EC8C34F25C506EFBCCE3C8E3438E
6BBA1D4D1D206E107111BE926D7BB5C23F3421F6ADC86B7CE4E8E373D7D44587
1726D0C5F9B8A8B8CC60D5CF2E00CA26DEAC2A881BFEA39EE8FD3C3DE70F3612
75761BFDECD1CC7923FB3D37CE4B6F47CC69BDA9E6FC547196EC718C4D307201
DD80D2851C5901A32945536B6C667FECDA89C1AD12BD9F162F1F9590409151CA
47AF312F7C4AD08754FCB6275EFFD921F0CA89ABBEE50EA1802B7A277E4552DC
96C7EC48852991DA2C15405B83D1C443B0A76199EF9E1FB1696BE903E9D7E2E0
D60099A7281D63D3C9EE1208E3222C2AFF67087D53548829A84CB1A3E6E58FA5
67B9995B2B7742E4AAD709CF4E687A98ADB3BC97DDF42E3582C3EAF5459DF9C1
C01C342903D7662B12E382975D4127DD99D7D5A7A89A8C678A66F0FAF8BA96FA
8F9A6292B55E56F5793161F1BB7F882D9A398B1C4118C17804E5925D9BCFD96E
A56A8ABEE4F36DDD311EEA2908ECF6F78E43A8E66703ADB58A02001148390027
55BDD7BC4D95D179680584434D488F7951BD196541B48D7F75E289CBD64043CD
2564C619844BE252EF5825E1BD48590A9D14F9CCE59796F2DC78748DF27DF578
4B9853AD5180A49521A3DC4C4E61210D7D8398B74740248F862D177981B4EBBE
4B376021D08BCE36A555DA1D8D00E66F893E9E193711E37620DF48785B51568C
67CE72273E323368B782AEE0A2013F4B199AA312BEE2809EB6E42D73C583643C
4E2327F5793900EEB35C6B94BD126B9CEEF1C53560407E883F076B06F3FE9D88
C6A4C5F8285A902F5C792A481032DB3CED7002B688A924DA36A9A21116057E7D
0E36EF3A2C698C58E74595CF979D93AEFBC81E85D7218F173A45BFF070970598
776798A7674DCB55F1D7313C0C5E29D4739F74C86D82D36CA5A7C5DAF7379B61
8667C59EA499B7B213A38E67AF079939183A0E3C1C2D8BCCF83EF92ADDDEE2BD
674745EB94D4E89CD4584BA7372B3DFA8F5F00955ADBCE57DCA79217488D12D7
E85FFEDCDBBC63D222E4346F616FF8FE2F383474332A7991490553E231F55555
8A3416C5DDFFADA4EBB99EC62482801B06B18F79BCF9B2B256F88F33C57BF883
777AD10A587A870681FA468911DF5AC8048528DDE33CE03078BC348C005D4362
F59B0C095547C4B4034DF81A6C01BD7E4478F40C55EC77D25527D559F6C20CEC
085EDF44DB10CB9FEB006BA08191C036187843D0615A5886F6736C148A9E0189
9C7EEFF137A75E6AC562106A981E065FF00D330FDF0F2B4E99ACBA1392D52A44
603D535F9335ACA6D2A14C69C6246F643D8A8C9015985D01E1550C526402563E
44713863340D115A112DEAC3451522AECF9821BBF9D457E706F0EE5D6E6683DA
29D1D42A2CF91D9E919841F2CD59755AEF8440FED667D794085166DF1318CE7A
E506172D8145D7FCA488C4C25AE5CBDF2DB91F5B0026BCD30C214087B9251ECA
CE5CAB295AA9AC0FF1B139C445F69A888C31C6C0464B7FE95591E9964B7F7718
FF3E0BE9EC4606C7DE505303042F8111D1BC304AD9897E2253BCFCB27D17E3AE
133A244D6DB600B64D7D345374DA8A91CAEED40024519AA8A4732E667DFFAF41
A0216A726FB617D585563AC1090949467A674ECBF06FC917F5C8DCC862CD8634
94D78F153F1381FA5655BE24BC79658B545E9E0A210A58C38A25F38C2DD25024
B8423BFB94DA6E9AAA5B0C296E3A8E008317B975E878DD5C387F1A4C1B1BC427
ECEE422F74B5452244D713D874BE092599D693C770264E3B78368C7B41D9E5AA
41F557ADF83CA7C00D2EC4C3BE9F428836CE4211877F666EA9A3090657CB2164
1D1F2E605226059487858280607B1B8FE7E402B3D846A0D73E6EEF0FE019E220
EEAD859408799FD03831A58E4ED9ECAEB679C81AC410C5E4A3DFA3F89FE2539D
703275D0F2F3D3183685CEF6A6126230B7B92BDFAEA2065B5DEB9759BE233DEC
0E9040A6E07513FA387D5A501F49413056BC539486635B059C8C5C911C681FFE
E1612B35739C77DDAF842785E792A92FF5B28AF3CBA5983EA61FBDE7F2D626AE
7C9C81C8A907BC674DE18AA518D3385BF0B14037CB60FC6E25AD84436DD6F3ED
C50D50FC953197684FDB20FEF7FAAED6713950C7DDAFAD40D8AB3DC7E1B33259
0E7B126DC20C585A3F6BD2A428F185053E37DF987CBA5B633074E88726511606
F1D5D866EA4F4EB3A894AE8A39D5EADD5DEDDB0257879A7BF8EC0E33B0862570
728467A45CADE705D74E888955E205C905A1EB40F5CD0F152A5527EBB889FF35
4A806F6888D0D0844C976CFB5B420136C71B0E747763894186630DA766AE8AE8
0887759E02F3083EC064EE22EF220CDE3902F6AE519511755B9A0C19DBC74429
BA1732DBB2474B1F550276539FB11910999AF53E40864F9D62C04FCAF6440615
4824E4D1CAF7046ABBB5B6D53021FFDD53575AE98A1A346F18886E920983C5C0
D98A710743CADA64D0A58D9495F91C6C4FC3EB8654F16284B2F90B65BC68D2A5
41C6B0471A86FEDBA6E5442EEE0F88D93BD2D19825FD9EB57A866F9881FE42B5
A258AE0EAD3052A887BFFA38E95BD58FA5BF22ED4A3D9B4FC1BA072AEC05297E
FB3651A41173AE360DAFA40CFABCEA0DF61F916BEC7B8182777D043B0098E9DE
771991A5E3DBD2BF93266BA1E129BE31D17167F4136DE68EB8543DC2870B2945
A10D00134E1E0ED9FB1112B243941B4FB67A58825020FE2B414E5F8C1ECAA321
D730FE2794EEF49EB42ACFB7B6740C7CE0976BF1BA69342AC1B4478437540FB3
62881D486BCFA0E44B5380DD4EA0BF5F57FA946DF16B5ACD6FC42868A347F674
BE69EA3E193B360C350DDBA7079DB04CADE24433A2B78E7971DC55A25876BDB9
E91DC3C507A8BAAA862D6FF7ADCDFD56A2F06533D13AAA056D50589BE4A1D8B0
98BD498920C1D83548740A944B2468AA3A038E3E617B5CA46032257DE4B107AE
804F89049A0D52AF53F9AC973BACFBD291622E029BF827E1F12E96395D7282B1
AA6C9F3DE583D7C21F984E972E628C183EDE34279D5ACB6ACBF9D267D4A6FE8D
784754C5BF38772973AB23D14871F6A10426974DEEC935CF806883107F895B73
FB7CC322BCF859D089824B33F5070B215BA69066783E40022B284A8703214D7D
7B45E2E60774E421986AC594EC30C8F98187708879EA41D6308E687211E26AE4
BD0FF2FA8960D5231B9C071207D672F2B110D9CAD144084CCCC513D446DFC45C
C1BEA3DE43B426C55B14D0B9AB6733AEE4AC5EDB109F1F73D6B8D9A397B4CF70
3A78A2B75D5DE5295411614B4577B5E69436C818FCC411C626E1670262C102E4
5A3E0F3CDA0FAD07D57D384BE53A8CBA1EFACD57B748A9FECDE0CD17B08EFA35
146DC806F564CB36C007B27657E7AD55635DC9EE6E38BC1C36B30DFAC8C80112
274F33DA3D072D42132F8BD9A16490D167843BF147246771BE8366ADB91274E5
10CC29A46B05C06590FA7AF5939FDC0474B67DDC1D793CAC6F126E43DA1EFA80
6A8D1CACAB1E44C28628B02E5693BBB1773F127EEB1CA0531017D74B47E1D5BB
294A0DDCBDDA5D4918E9073587C083D442B7C90259793DC03FCE382707403DEF
D76EC3B1A52DBFC21BB4378BCA923BAB0C28F98A942B36D93B7351CAE87A3C4B
8388F18598D2A66459ABEC024D889BD631182BBB766C7A746441B578692E93ED
D220950CC75D942D6D7372B83BA78C57B25AA461C38E4E10D675E1025B8A5518
5EF4C4CC93772C7113BFCABEB90370AD8CD0C13732C2FCD6B3EFF62720368A7C
CB5CFF3740EA1C864BB8D2B4C0B5DF17B4D10A20CF37922BF8474991D033AD95
5FF10C2FA392AE5D9A6ABEDEAF9FB2AAEBA694ABF9177EFC910C3BBACFD4ABDF
13C215269037F91D63A951E949C12E8ED3F28DA566BA1F3EBDE72DC20762CD97
D3DB4CA72A12401788BE22435D02DA676FF993546E768925E98EB3F7C3806532
2D9AAE2D5520639513B26330DA3250248510E039C3F2CF212845AA0249CC6EEF
89992553B2253F869ED3E28582046A24D3B502D312CF9ACD08B09D8A33E8C32E
7A46DB17509D2A08B85D1FD15C40FA6215A317F293FB934EB64D1DF5B36678E0
9AFC9DD4DB12F54C67424CE8F4E46C719996A076249A703AD1F2E259BA25D963
18D5592613E74383FAC1CA7D641A3B3D100EC7F45818E9BD885192A371DEB0BC
55F19799D8E31BCDEF83B245E3314025FD74604CB79218AE831F981AD2496009
C53055470595F2D249394B725DB93946B6EE55FB5327F7EE5CD75FE40975CA9A
E8310892078C5F2F4D6F32AF4D81824956928F4E0D60707FE8994A2579EACAED
B1B7EB830E3493DDAFD7863B84DA16D059832DA3667B1E47B4D4AD31E7B1B985
A30F5C033E07B80418C3F4C132242BA3D1629377B20BCBFF56657F39E3D77459
F9AD0F2933EC1ADE2A730D8A51603E0DD8387E1B45A0D555FE5CC827DF59811D
85CED706080E88E8E20C48C04C9FC297436B2C629A86EE7E20DA6D8211E3AD48
42769D7DA1FE44E19AB53B20835B146A96F6EBACA3AAE90E8484C1D3FF223BFB
CD3AD5A68F54BBFE3A805D75FD073CD0749CBE9773F111BDE0474CC7DD07E691
CD3B8B8769934DB89D017D0663A0DB22C442D4AB088839AF8C40E9E808423194
9F24A00EBC858D84ADD970800D4029ED780BBBA3E59DFC837604AA31194E3D4F
BF85FEA4E68DAF50D5CBF7DB23239992275EE81DBF46D238500D8BC9A0C8BEA0
369881E6CE6216F6778729C4A46B0DBC647C26C8D3011EB9399EAA7CA635C29E
6DC8768FD7C1135161866F14BE96ADBD2342DA5D452CF544494461B4296FC856
328EEE978F8DD06CCADBD3BF80F571E7C0C3508E359A3D0C234B0E3691C85D67
4DEEED1FE39F7F6F76F9F1B4E36F1137A5945A5ECC2A72EB40582C356B79B63D
8580890ED97C446608B845BB11C5D81ABD7DDDBD87F6DBB5CF39C93FDC6D91F6
39B27A5B5EC4D42436A5CBC178FE12CC8F09BC2DE7CD0BF9DEFD97A7ABC08130
049AD2470C1C38D5CF524805676B44D0ADC79D0F15C540E8219C398401EF2886
8869A44B509FD37752A4E9292D95FEF6DF2DC8F3F642AED6C5A97C346A460EAA
C282CDB7B182AB43FA928DBE86DDAFD935A48588C85C12375337BBC5246F5EEF
5253B7418C01A32C11F4B8B868CCF34C4DAD0CC56F8AB487B4C6D68972F8EF6B
81DAAD5211650F6F3B5EED2EA3EDD895F2323099E364EAB95CCD6ED121B27267
DDB7191C879B50F8A2E75EDF96C591BDB0D41BE1D386150D437286D253044320
8ECC9C2F1788DB5BFD3CD18642A8E6A0DC1959B76C0CD45CE77A4066E1204237
517D1BCCDC0D4E574D34270A26CD22EEAB14E9738C8C63F6FA08925FFB1A0594
F4A4830627D03B4CB37FBFB573DD8755903DB7990F0D8624FB6E11CDA44C5A36
7B6E18C1A667358A1D0D17E6C62C7F0912D09A88C9A384EDF15BE011FBADDF53
AAB568543CBCDE2F44C52A64EC329B50B8A3183F59E77AEF890560C805D0C427
3DEC95E2942F25632F27D910DBA49FE1F9EAD922B44531B2B808B8036520BFE0
7827A80F0C63ED43F5D605E6ACA86AB5384E45A7A2EE75D5BECE20F9328F22FE
1AC21E88A0045EBE2B5876C629F033DFCA44E0A50A2B8F4CB10A5562AF192272
CBDBD7E72690C22F27A64F6B54EE59759F0EDF8EDFF0EE4478ED386272EB246E
D4D6DC776D0786DFF4F02939A5F43040B998DAA48EFFC8A82D0E0C8DF2A9F343
942AE45050C2640E34B2D83C71B912062414B3778B0078DFC6ECA624D70B7156
DF3809C78DC1FFE251331C05586D6D784FF3CAC752621BFE417DE903CEA643F8
5066C103F6708AD44FA51A069AD743682054FFE7278F3017409EE9AFE61A51B8
3AEC5FD2208B33A5323F6C30240261E8CC36D8DF8069B48612D40743C6F89AE7
0B8BF509288489A14549F6EC4B7A517A01E7071C8C2313CBFB06153E26DE46B0
5B8B28BE162717CB62ABD6966FD2F167327EC8F2635A91827E7FB098C806A23C
E7ABFFBF1B2BDB497348C23455236C99AF867B448CC3179ED1EE023D25EDA950
845B3B9A8FCD3847BBEFB9CA02459B220F0945F32D3453E339359AFDAB1E9A5D
428C46A17609CEF061781BAF4B9A91177BF0E412D0418401705CFBA55CC887EC
4F2B4809CC0CF4ADCB0903FBEBA51859FF444EFBD925BB16385912E98E979863
B6DC554E234D91BDA9830C3760689921C1228C091AEB7A1EE79C7EFE184654B1
D316E706C7109723C3EF9B50B27DA214025F6506A77CA29D5F06846B5F72C65D
39B537706F32C7520F9E67C51A9BA997D71DC58A16A4EE09DD5EC6176682FD8D
57B1768F41082EAEA0DCF949D5337E7E00260B8A29C31C97810F5646D02E897C
EF40BDB873676C7A1293A93B3CD4C651D95E8793AB8E9964C71573FF9A97BADD
8D14C579837AC2EB4B20AF13E226E5A78C58BB23F8AFE37B083B4A955B68A86B
57BF249429A7540D83B6B21EC250FEB0660A04AEDE135EB5B2D96D2E45000E0E
7A6A4E9C934A9672158F11079BC6ED4D39EFD371F07C1216B56B64F7D60A84F8
54867EF622C352B4B1FD372033CFDAF091A35E6086AF91661359173E53F7A1E5
BC335BC1DB2C16609CE4652BAEC1AFD5B18675B98944D7AE47588BF840FD8EA4
06D823572AB2211E6DBAD7D7326839CBC5D07365A35F1E03ECDAAB99FD494105
60B121B37CF5F049C38C2F7E1651037BABF9EBA8A759B6F5EDADCDDDC92D6CDF
1C68863CBD5F9BF95029C3D6C41DC8339AEAAC21828C07009695D78AD75CFA5F
B12BE8D01CA26E58FCE71F1D6EDF1CE71D0630E0836C04D0CB6FA8051EC3EA50
B8009493923D785F0B3A3436D7DCF5C90EA2BC6BF552DB523A4E6D103A8D5A92
DE462729C83FE2DA268343AE9B55220D6E0E8C44C1F0EBCBA1C9D9DC3C4FF1A1
34633DF24AE864D4F3E731677E110414BA4D7700D98A5C33AD6809B2F633279F
34E6B7B4125FCF1D4F0FA532FE0F6CF2B9395659AE6B5324080AD6B7EC54CB6D
41DB08C4D6D91DE4D9D1AC1B3E052FF7DB830D952D1CB98EB96F2B0C05135D58
D9A839376DF4C947FAAF29D0548A2AB22F3B9C80D003E00E03F051B4AF0146D2
0874910AAE82D02ED3A168C9F1EEA4FB4E608CFCF3C7AFAFB8ED5D5D2FFFF297
5261A5C17834F27AE05EBE574F87DF22F3515D79C8072D4501596977FE9096F8
BF6389AA70E5FF3AA3775F973CFFA966BCD69B763073B2C07386332FB4CE98E1
0B505483A922F770E8375D8449D4F29EC78586EF1503084E87ED9C6ADB593D60
267535066FF1CF9B24F12BFB5ACFCF0CCC82081D3A50E3260099E2B3A646DB9D
F13CE88C5C50B7B757D61FC3203A255D6E5140396673DCA4970AD3F03DB78FC9
D7ABE112D632625519108E42644A908B3417FD939EAA662E1BDDB1CEF3856C7D
BB82873645C9646311B8F70ECA4ADBDC646B2CE85AF2E10F7D69B913FB584586
8665027075966489D7CD223BBB09B3F0CE1F4E64CE1EEBE1BA5AF9032168FFEE
9A7E79C43EBC5CDC14BEC403B4909B7EBB4E5D1F9E90B9D4A55BE5D7AA42144E
E363FE7DEED57A6625F779B12E1877C3D42455593891EC099853352FAF8F1C28
0FCC3927FCA7ABBBCBF6BEE2D456A569CF56B6965A284AE0E6BCD46B7A9A512A
EEE6AB018D0B89DCC06681492C932E41F3117CC0E73EEE9457FF1DE57E19209D
84DE75CC1FF470646B57C864FE6630309AF29081A7E0DFCE42992348B3A02B35
220BCE2B96689E4E89B9AD86BAAB8DCB7F63D7CBA8A213732D01114771C41ED1
0EA0D2B0A410A49402085B33E1613BB7769B055E106DC3F61CC87CC4BD084AA7
712FD31A237E06BA3A1625063C692E4461E65FB9FC6DB4788AE833981D2B9683
F7CB5C7C49D40D8F7C5A0B24AD215D242ADAFBE6899F77305020C27557F9B514
5F21688485E50166DB719936069E72FD97F96AB2E20176D2133A8259247D5599
F043084980599C4F27CC66078038CA77F5732046835EF42ED2BE8E3B4CC5887D
08186CF6A74085414E54105267BFBC98ABEFDEB57D3409DADCA8BB90C40D3BDA
758809A3B7D0BED7B19EA6A96E51CB7BA0945FF8AD8D6FB95CA93C93EAB3CD73
4154C8728D0956E1014B7BE5A6677F160A23EE42A5A8504B2B516AFEB3D4AB92
D5296E92194072D263047BFBB46A9F5409E2D78BD43BFB3470D0084D8575B09B
233EDF8688E67C8A58D4E1D21B083668C474FF016E5D811BF1A1AACC1302C005
D221460770B4DF9238B3A869BE352F66DB25446A7C3DFC27D57D1FDC9FD5349C
F992CC555706E2BDBCBCBDA68192801A2258BDBC3A741F9BB5FCE62757ECC67E
807A1FB47B9336BAB17D7CC84AF707816752D1734473F7F9C30E6DD4E4A6B74C
A87CBF5A25B01505F029229DA7701F5A28475CB57BE4ADB8D9D5E0A1C9643082
FDB77442698F41E0FC50469DD5E31EDC5A4298E062CBBC70DF84B2C9744EE5BD
D8F8F26F570ACF12041D1F81D7C9A8DD9F93D70B69D48AFCAEFBDFE251D8ABBB
6DE2F1F9BB97FAAA533FC20F029BB7248B58C22C3F159841983BED21AC57C26B
DC1959B39BE30DD7E056C4BF5F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 40258431 52099146 1000 8000 8000 (asgn2.dvi)
@start /Fa 204[470 470 50[{}2 885.568 /CMR8 rf /Fb 255[1033{}1
1328.35 /CMSY10 rf /Fc 140[435 2[474 455 571 2[490 1[320
3[436 484 408 25[408 7[705 65[{}11 885.568 /CMMI8 rf
/Fd 135[739 1[629 1[470 613 586 1[653 625 776 2[676 1[444
749 2[603 676 560 14[762 800 990 8[574 7[975 4[1012 361
361 58[{}22 1328.35 /CMMI12 rf /Fe 133[578 686 686 939
686 723 506 513 506 686 723 650 723 1084 361 686 1[361
723 650 397 578 723 578 723 650 3[361 650 361 3[1336
2[939 723 957 1[885 1012 975 1192 813 1011 1[469 975
1021 849 885 993 1[921 975 3[1012 1[361 361 650 650 650
650 650 650 650 650 650 650 650 361 434 361 1012 1[506
506 361 4[650 21[723 759 9[1084 1[{}71 1328.35 /CMR12
rf /Ff 134[789 3[830 581 589 610 2[747 830 1245 415 789
1[415 1[747 1[682 830 664 1[726 14[1115 1[1021 1[1168
1[898 2[557 1168 1[939 981 1145 9[415 7[747 747 49[{}28
1328.35 /CMBX12 rf /Fg 139[697 707 2[996 897 996 1494
3[498 996 897 1[818 26[926 8[1354 14[897 14[1494 35[{}14
1594.02 /CMBX12 rf /Fh 137[1136 1196 837 849 879 1[1196
1076 1196 1[598 2[598 1196 1076 658 982 1196 956 1[1046
16[1470 1[1683 2041 9[1554 13[1076 3[1076 1076 2[717
45[{}25 1912.83 /CMBX12 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
%%BeginPaperSize: Letter
/setpagedevice where
{ pop << /PageSize [612 792] >> setpagedevice }
{ /letter where { pop letter } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 7911 7638 a Fh(CN)717 b(510)g(-)h(Principles)e
(and)g(Metho)60 b(ds)716 b(of)10125 9449 y(Cognitiv)-60
b(e)716 b(and)g(Neural)g(Mo)60 b(deling)18449 12697 y
Fg(Assignmen)-50 b(t)600 b(#)e(2)20140 14950 y(John)g(Joseph)3432
19637 y Ff(P)-42 b(art)499 b(1)f(:)665 b(Handmade)500
b(Euler)f(Numerical)h(In)-42 b(tegration)435 b(In)-42
b(tro)42 b(duction)3432 22885 y Fe(P)-36 b(art)299 b(1)h(of)g(this)g
(assignmen)-36 b(t)299 b(asks)i(us)e(to)h(n)-36 b(umerically)300
b(sim)-36 b(ulate)300 b(the)f(Leaky)i(In)-36 b(tegrator)3432
24490 y(mo)36 b(del)487 b(of)h(the)e(neuron)g(using)h(the)f(Euler)h
(Metho)36 b(d.)738 b(I)487 b(m)-36 b(ust)487 b(come)g(clean,)501
b(here)487 b(-)f(in)3432 26096 y(the)504 b(previous)h(assignmen)-36
b(t)505 b(I)g(included)f(an)h(Euler)g(sim)-36 b(ulation,)523
b(as)505 b(w)-36 b(ell)506 b(as)f(another)3432 27701
y(sim)-36 b(ulation)499 b(using)g(the)g(Runge-Kutta)f(4)i(metho)36
b(d,)515 b(with)499 b(the)g(in)-36 b(ten)g(t)498 b(of)i(impressing)3432
29306 y(the)468 b(instructor.)684 b(I)469 b(had)g(no)g(idea)g(w)-36
b(e'd)469 b(b)36 b(e)469 b(doing)g(it)g(for)h(this)e(assignmen)-36
b(t,)478 b(but)468 b(as)i(a)3432 30911 y(result)433 b(I)h(am)f(relying)
i(on)e(data)h(generated)f(from)h(Assignmen)-36 b(t)433
b(1.)3432 33461 y(I)568 b(c)-36 b(hose)568 b(to)g(use)g(the)f(results)h
(of)h(the)e(RK4)i(sim)-36 b(ulation)569 b(in)f(this)f(rep)36
b(ort,)602 b(since)568 b(I'v)-36 b(e)3432 35066 y(b)36
b(een)566 b(lead)g(to)h(b)36 b(eliev)-36 b(e)568 b(they)e(are)h(more)g
(accurate.)977 b(T)-108 b(o)567 b(the)f(grader)h(-)f(if)h(y)-36
b(ou)567 b(w)-36 b(ere)3432 36671 y(exp)36 b(ecting)431
b(Euler)g(and)g(w)-36 b(ould)431 b(lik)-36 b(e)433 b(to)e(see)g(those)g
(results,)h(please)g(let)f(me)g(kno)-36 b(w.)579 b(It's)3432
38276 y(no)487 b(trouble)g(to)h(send)e(a)i(revised)g(v)-36
b(ersion)488 b(of)g(this)g(rep)36 b(ort)487 b(using)g(the)g(Euler)g
(metho)36 b(d,)3432 39881 y(and)583 b(I)h(understand)e(that)i(it)g(ma)
-36 b(y)585 b(b)36 b(e)584 b(a)g(b)36 b(other)583 b(to)i(determine)e
(if)i(m)-36 b(y)584 b(results)g(are)3432 41486 y(indeed)432
b(correct.)3432 44036 y(That)340 b(b)36 b(eing)339 b(said,)360
b(I)340 b(ran)f(the)h(sim)-36 b(ulation)340 b(using)f(RK4)i(and)e(a)i
(time)f(step)f(of)i(\001)p Fd(t)368 b Fe(=)h(0)p Fd(:)p
Fe(05)3432 45641 y(seconds.)550 b(The)351 b(Euler)f(In)-36
b(tegration)351 b(metho)36 b(d)351 b(w)-36 b(orks)351
b(b)-36 b(y)351 b(adv)-72 b(ancing)351 b(the)f(curren)-36
b(t)350 b(state)3432 47246 y(of)374 b(our)g(v)-72 b(ariable)374
b(using)g(its)g(calculated)g(rate)g(of)h(c)-36 b(hange)374
b(and)f(an)h(arbitrarily)g(lo)-36 b(w)375 b(time)3432
48852 y(step.)847 b(The)524 b(RK4)g(metho)36 b(d)523
b(w)-36 b(orks)524 b(b)-36 b(y)523 b(calculating)i(the)e(rate)g(of)h(c)
-36 b(hange)523 b(at)h(sev)-36 b(eral)3432 50457 y(k)g(ey)354
b(p)36 b(oin)-36 b(ts)353 b(ab)36 b(out)354 b(this)f(time)h(step,)369
b(generating)354 b(a)g(w)-36 b(eigh)g(ted)354 b(a)-36
b(v)g(erage)355 b(of)f(those)g(rates,)3432 52062 y(and)348
b(then)g(adv)-72 b(ancing)349 b(the)f(curren)-36 b(t)348
b(v)-72 b(alue)349 b(using)g(the)f(a)-36 b(v)g(eraged)349
b(rate)g(as)g(one)g(w)-36 b(ould)349 b(in)3432 53667
y(an)383 b(Euler)h(sim)-36 b(ulation.)562 b(This)384
b(requires)g(more)g(computation,)393 b(but)383 b(for)h(an)g(assignmen)
-36 b(t)3432 55272 y(lik)g(e)434 b(this)f(it's)h(all)h(prett)-36
b(y)433 b(negligible.)3432 57822 y(The)424 b(sim)-36
b(ulation)424 b(w)-36 b(as)425 b(run)f(t)-36 b(wice)424
b(for)h(ten)f(seconds)g(eac)-36 b(h)424 b(using)g(t)-36
b(w)g(o)425 b(di\013eren)-36 b(t)423 b(deca)-36 b(y)3432
59427 y(rates)501 b(\(lab)36 b(eled)501 b(as)h Fd(A)p
Fe(\).)781 b(F)-108 b(or)500 b(eac)-36 b(h)501 b(sim)-36
b(ulation,)519 b(an)501 b(input)f(curren)-36 b(t)500
b Fd(I)605 b Fe(w)-36 b(as)502 b(supplied)3432 61032
y(for)568 b(the)f(\014rst)g(\014v)-36 b(e)568 b(seconds.)980
b(As)568 b(discussed)f(in)h(the)f(previous)h(rep)36 b(ort,)601
b(the)567 b(results)3432 62637 y(of)583 b(the)f(RK4)i(solution)f(w)-36
b(ere)583 b(at)g(all)h(times)f(equal)g(to)g(those)g(of)g(the)g
(Analytic)h(and)3432 64242 y(Rotter-Deissmann)433 b(solution.)24692
75163 y(1)p eop end
%%Page: 2 2
TeXDict begin 2 1 bop 3432 7638 a Ff(Results)3432 10757
y Fe(The)535 b(results)g(of)i(the)e(n)-36 b(umerical)535
b(sim)-36 b(ulations)536 b(are)g(the)f(same)h(as)g(they)f(w)-36
b(ere)536 b(in)g(the)3432 12362 y(previous)464 b(assignmen)-36
b(t,)471 b(but)463 b(the)h(con)-36 b(text)464 b(of)h(this)e(assignmen)
-36 b(t)464 b(merits)g(a)g(bit)g(of)h(dis-)3432 13967
y(cussion.)682 b(Giv)-36 b(en)468 b(that)g(this)f(assignmen)-36
b(t)469 b(demands)e(w)-36 b(e)468 b(turn)f(our)h(input)f(curren)-36
b(t)467 b(on)3432 15572 y(and)611 b(o\013)g(during)g(single)h(sim)-36
b(ulation,)656 b(w)-36 b(e)612 b(m)-36 b(ust)611 b(b)36
b(e)611 b(a)-36 b(w)g(are)612 b(of)g(the)f(imp)36 b(ortance)611
b(of)3432 17177 y(rates)527 b(of)h(con)-36 b(v)g(ergence)527
b(and)g(ho)-36 b(w)527 b(the)g(metho)36 b(d)526 b(of)i(sim)-36
b(ulation)528 b(can)f(determine)g(the)3432 18782 y(\014nal)433
b(outcome.)3432 21332 y(The)513 b(table)h(b)36 b(elo)-36
b(w)515 b(sho)-36 b(ws)514 b(ho)-36 b(w)514 b(the)f(Leaky)i(In)-36
b(tegrator)514 b(b)36 b(eha)-36 b(v)g(es)513 b(as)h(it)g(approac)-36
b(hes)3432 22937 y(equilibrium.)979 b(As)568 b(deriv)-36
b(ed)567 b(in)g(the)g(previous)g(assignmen)-36 b(t,)601
b(the)567 b(Leaky)h(In)-36 b(tegrator)3432 24542 y(mo)36
b(del)433 b(con)-36 b(v)g(erges)435 b(to)14958 24019
y Fc(I)p 14844 24232 705 45 v 14844 25000 a(A)15682 24542
y Fe(,)f(the)f(quotien)-36 b(t)433 b(of)h(its)g(t)-36
b(w)g(o)434 b(parameters.)p 3432 26730 36752 45 v 3410
28335 45 1606 v 4096 27854 a(Time\(seconds\))p 12990
28335 V 1328 w(A)p 15293 28335 V 1328 w(I)p 17272 28335
V 1510 w(I/A)p 20695 28335 V 1329 w(Euler)p 26937 28335
V 3189 w(Analytic)p 33179 28335 V 1402 w(Di\013erence)p
40161 28335 V 3432 28379 36752 45 v 3410 29984 45 1606
v 4096 29503 a(5)p 12990 29984 V 8930 w(1)p 15293 29984
V 1653 w(5)p 17272 29984 V 1329 w(5)p 20695 29984 V 2773
w(4.970397)p 26937 29984 V 1331 w(4.966310)p 33179 29984
V 1331 w(0.004087)p 40161 29984 V 3432 30029 36752 45
v 3410 31634 45 1606 v 4096 31152 a(10)p 12990 31634
V 8280 w(1)p 15293 31634 V 1653 w(0)p 17272 31634 V 1329
w(0)p 20695 31634 V 2773 w(0.027972)p 26937 31634 V 1331
w(0.031841)p 33179 31634 V 1331 w(0.003869)p 40161 31634
V 3432 31678 36752 45 v 3410 33283 45 1606 v 4096 32802
a(5)p 12990 33283 V 8930 w(2)p 15293 33283 V 1653 w(5)p
17272 33283 V 1329 w(2.5)p 20695 33283 V 1762 w(2.499934)p
26937 33283 V 1331 w(2.499888)p 33179 33283 V 1331 w(0.000046)p
40161 33283 V 3432 33328 36752 45 v 3410 34933 45 1606
v 4096 34451 a(10)p 12990 34933 V 8280 w(2)p 15293 34933
V 1653 w(0)p 17272 34933 V 1329 w(0)p 20695 34933 V 2773
w(0.014061)p 26937 34933 V 1331 w(0.016023)p 33179 34933
V 1331 w(0.001962)p 40161 34933 V 3432 34977 36752 45
v 3432 37585 a(It)483 b(should)g(b)36 b(e)483 b(noted)g(that)f(the)h
(\\Analytic")i(\014eld)e(actually)i(con)-36 b(tains)483
b(the)g(v)-72 b(alue)483 b(for)3432 39190 y(the)355 b(Analytic,)373
b(Rotter-Deissmann,)f(and)356 b(Runge-Kutta)f(4)i(solutions;)382
b(as)357 b(men)-36 b(tioned)3432 40795 y(b)36 b(efore,)372
b(all)357 b(v)-72 b(alues)357 b(w)-36 b(ere)356 b(at)h(ev)-36
b(ery)357 b(p)36 b(oin)-36 b(t)356 b(in)g(time)g(the)g(same.)553
b(Ho)-36 b(w)g(ev)g(er,)372 b(it)357 b(is)f(eviden)-36
b(t)3432 42400 y(that)584 b(the)g(Euler)g(solution)h(actually)h(reac)
-36 b(hed)584 b(a)h(v)-72 b(alue)586 b(closer)f(to)g(the)f(equilibrium)
3432 44005 y(solution;)620 b(I)558 b(don't)g(really)h(ha)-36
b(v)g(e)558 b(an)-36 b(ything)558 b(to)g(sa)-36 b(y)558
b(ab)36 b(out)558 b(that,)589 b(sa)-36 b(v)g(e)559 b(for)f(the)f(fact)
3432 45610 y(that)484 b(all)i(solutions)g(will)g(ev)-36
b(en)g(tually)486 b(con)-36 b(v)g(erge,)499 b(and)485
b(that)g(for)g(the)g(duration)g(of)h(the)3432 47215 y(sim)-36
b(ulation)433 b(it)h(app)36 b(eared)433 b(as)h(though)f(Euler)g(w)-36
b(as)434 b(less)g(accurate.)3432 66327 y @beginspecial
50 @llx 50 @lly 410 @urx 302 @ury 3968 @rwi 1559 @rhi
@setspecial
%%BeginDocument: data/part1/figures/eulerError.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ./data/part1/figures/eulerError.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Mon Sep 23 20:57:37 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (./data/part1/figures/eulerError.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (john)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Sep 23 20:57:37 2013)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
854 448 M
63 0 V
6030 0 R
-63 0 V
770 448 M
( 0) Rshow
1.000 UL
LTb
854 1282 M
63 0 V
6030 0 R
-63 0 V
-6114 0 R
( 0.005) Rshow
1.000 UL
LTb
854 2116 M
63 0 V
6030 0 R
-63 0 V
-6114 0 R
( 0.01) Rshow
1.000 UL
LTb
854 2951 M
63 0 V
6030 0 R
-63 0 V
-6114 0 R
( 0.015) Rshow
1.000 UL
LTb
854 3785 M
63 0 V
6030 0 R
-63 0 V
-6114 0 R
( 0.02) Rshow
1.000 UL
LTb
854 4619 M
63 0 V
6030 0 R
-63 0 V
-6114 0 R
( 0.025) Rshow
1.000 UL
LTb
854 448 M
0 63 V
0 4108 R
0 -63 V
854 308 M
( 0) Cshow
1.000 UL
LTb
1870 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 1) Cshow
1.000 UL
LTb
2885 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 2) Cshow
1.000 UL
LTb
3901 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 3) Cshow
1.000 UL
LTb
4916 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 4) Cshow
1.000 UL
LTb
5932 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 5) Cshow
1.000 UL
LTb
6947 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 6) Cshow
1.000 UL
LTb
1.000 UL
LTb
854 4619 N
854 448 L
6093 0 V
0 4171 V
-6093 0 V
Z stroke
LCb setrgbcolor
112 2533 M
currentpoint gsave translate -270 rotate 0 0 M
(Error) Cshow
grestore
LTb
LCb setrgbcolor
3900 98 M
(Time \(seconds\)) Cshow
LTb
3900 4829 M
(Numerical Error) Cshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UL
LT0
LCb setrgbcolor
6296 4486 M
(Euler Error) Rshow
LT0
6380 4486 M
399 0 V
854 456 M
51 497 V
51 463 V
50 415 V
51 372 V
51 333 V
51 294 V
50 261 V
51 229 V
51 201 V
51 173 V
51 149 V
50 126 V
51 105 V
51 86 V
51 69 V
50 54 V
51 38 V
51 26 V
51 13 V
51 3 V
50 -7 V
51 -16 V
51 -24 V
51 -31 V
50 -37 V
51 -43 V
51 -49 V
51 -52 V
50 -56 V
51 -60 V
51 -63 V
51 -65 V
51 -67 V
50 -69 V
51 -70 V
51 -71 V
51 -72 V
50 -72 V
51 -73 V
51 -73 V
51 -73 V
51 -73 V
50 -72 V
51 -72 V
51 -70 V
51 -71 V
50 -69 V
51 -68 V
51 -68 V
51 -66 V
51 -65 V
50 -64 V
51 -62 V
51 -62 V
51 -60 V
50 -58 V
51 -58 V
51 -56 V
51 -55 V
51 -53 V
50 -52 V
51 -50 V
51 -50 V
51 -48 V
50 -46 V
51 -46 V
51 -44 V
51 -42 V
50 -42 V
51 -40 V
51 -39 V
51 -38 V
51 -36 V
50 -36 V
51 -34 V
51 -34 V
51 -32 V
50 -31 V
51 -30 V
51 -29 V
51 -28 V
51 -28 V
50 -26 V
51 -25 V
51 -25 V
51 -23 V
50 -23 V
51 -22 V
51 -21 V
51 -21 V
51 -20 V
50 -19 V
51 -18 V
51 -18 V
51 -17 V
50 -16 V
51 -16 V
51 -15 V
51 -15 V
51 -14 V
50 -14 V
% End plot #1
stroke
LTb
854 4619 N
854 448 L
6093 0 V
0 4171 V
-6093 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 12779 70478 a(Figure)g(1:)579 b(Error)433
b(of)h(Euler)f(Metho)36 b(d;)434 b(A=2,I=0)24692 75163
y(2)p eop end
%%Page: 3 3
TeXDict begin 3 2 bop 3432 7638 a Fe(Belo)-36 b(w)365
b(y)-36 b(ou)364 b(can)h(see)f(the)g(plot)g(of)h(the)f(n)-36
b(umerical)364 b(sim)-36 b(uation)364 b(using)g(RK4.)556
b(The)364 b(input)3432 9243 y(curren)-36 b(t,)546 b Fd(I)104
b Fe(,)547 b(w)-36 b(as)525 b(turned)e(on)h(at)h Fd(t)e
Fe(=)g(0)i(and)f(on)g(at)h Fd(t)e Fe(=)g(5.)851 b(The)525
b(P)-36 b(oten)g(tial)524 b(in)h(the)3432 10848 y(Leaky)553
b(In)-36 b(tegrator)552 b(mo)36 b(del)552 b(naturally)h(approac)-36
b(hes)552 b(an)g(equilibrium)g(v)-72 b(alue)42841 10325
y Fc(I)p 42727 10538 705 45 v 42727 11306 a(A)43564 10848
y Fe(,)583 b(and)3432 12453 y(c)-36 b(hanging)433 b Fd(I)538
b Fe(at)433 b(this)h(time)f(causes)h(this)f(equilibrium)h(v)-72
b(alue)434 b(to)g(c)-36 b(hange)3432 36420 y @beginspecial
50 @llx 50 @lly 410 @urx 302 @ury 3968 @rwi 1984 @rhi
@setspecial
%%BeginDocument: data/part1/figures/rk1.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ./data/part1/rk1.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Mon Sep 23 03:44:29 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (./data/part1/rk1.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (john)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Sep 23 03:44:29 2013)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
518 448 M
63 0 V
6366 0 R
-63 0 V
434 448 M
( 0) Rshow
1.000 UL
LTb
518 1206 M
63 0 V
6366 0 R
-63 0 V
-6450 0 R
( 1) Rshow
1.000 UL
LTb
518 1965 M
63 0 V
6366 0 R
-63 0 V
-6450 0 R
( 2) Rshow
1.000 UL
LTb
518 2723 M
63 0 V
6366 0 R
-63 0 V
-6450 0 R
( 3) Rshow
1.000 UL
LTb
518 3481 M
63 0 V
6366 0 R
-63 0 V
-6450 0 R
( 4) Rshow
1.000 UL
LTb
518 4240 M
63 0 V
6366 0 R
-63 0 V
-6450 0 R
( 5) Rshow
1.000 UL
LTb
518 448 M
0 63 V
0 4108 R
0 -63 V
518 308 M
( 0) Cshow
1.000 UL
LTb
1743 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 2) Cshow
1.000 UL
LTb
2967 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 4) Cshow
1.000 UL
LTb
4192 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 6) Cshow
1.000 UL
LTb
5416 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 8) Cshow
1.000 UL
LTb
6641 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 10) Cshow
1.000 UL
LTb
1.000 UL
LTb
518 4619 N
518 448 L
6429 0 V
0 4171 V
-6429 0 V
Z stroke
LCb setrgbcolor
112 2533 M
currentpoint gsave translate -270 rotate 0 0 M
(Potential) Cshow
grestore
LTb
LCb setrgbcolor
3732 98 M
(Time \(seconds\)) Cshow
LTb
3732 4829 M
(Numerical Integration of Leaky Integrator) Cshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UL
LT0
LCb setrgbcolor
6296 4486 M
(Input on) Rshow
LT0
6380 4486 M
399 0 V
518 448 M
31 185 V
30 176 V
31 167 V
30 159 V
31 152 V
31 144 V
30 137 V
31 130 V
31 124 V
30 118 V
31 112 V
30 107 V
31 101 V
31 97 V
30 92 V
31 87 V
30 83 V
31 79 V
31 75 V
30 72 V
31 68 V
31 65 V
30 61 V
31 59 V
30 55 V
31 53 V
31 51 V
30 48 V
31 45 V
30 44 V
31 41 V
31 39 V
30 38 V
31 35 V
31 34 V
30 32 V
31 31 V
30 29 V
31 27 V
31 27 V
30 25 V
31 23 V
30 23 V
31 22 V
31 20 V
30 20 V
31 18 V
30 18 V
31 17 V
31 16 V
30 15 V
31 14 V
31 14 V
30 13 V
31 12 V
30 12 V
31 11 V
31 11 V
30 10 V
31 10 V
30 9 V
31 9 V
31 8 V
30 8 V
31 8 V
31 7 V
30 7 V
31 6 V
30 6 V
31 6 V
31 6 V
30 5 V
31 5 V
30 5 V
31 5 V
31 4 V
30 4 V
31 4 V
31 4 V
30 3 V
31 4 V
30 3 V
31 3 V
31 3 V
30 3 V
31 2 V
30 3 V
31 2 V
31 3 V
30 2 V
31 2 V
31 2 V
30 2 V
31 1 V
30 2 V
31 2 V
31 1 V
30 2 V
31 1 V
30 1 V
31 2 V
% End plot #1
% Begin plot #2
stroke
LT1
% End plot #2
% Begin plot #3
1.000 UL
LT2
LCb setrgbcolor
6296 4346 M
(Input off) Rshow
LT2
6380 4346 M
399 0 V
3579 4217 M
31 -184 V
31 -175 V
30 -166 V
31 -158 V
31 -151 V
30 -143 V
31 -136 V
30 -130 V
31 -123 V
31 -117 V
30 -112 V
31 -106 V
30 -101 V
31 -96 V
31 -91 V
30 -87 V
31 -82 V
30 -79 V
31 -74 V
31 -72 V
30 -67 V
31 -65 V
31 -61 V
30 -58 V
31 -55 V
30 -53 V
31 -50 V
31 -48 V
30 -45 V
31 -43 V
30 -41 V
31 -39 V
31 -37 V
30 -36 V
31 -33 V
31 -32 V
30 -30 V
31 -29 V
30 -28 V
31 -26 V
31 -25 V
30 -23 V
31 -23 V
30 -21 V
31 -21 V
31 -19 V
30 -19 V
31 -17 V
31 -17 V
30 -16 V
31 -15 V
30 -14 V
31 -14 V
31 -13 V
30 -12 V
31 -12 V
30 -11 V
31 -11 V
31 -10 V
30 -9 V
31 -10 V
31 -8 V
30 -9 V
31 -7 V
30 -8 V
31 -7 V
31 -7 V
30 -6 V
31 -6 V
30 -6 V
31 -6 V
31 -5 V
30 -5 V
31 -5 V
31 -4 V
30 -5 V
31 -4 V
30 -4 V
31 -3 V
31 -4 V
30 -3 V
31 -4 V
30 -3 V
31 -2 V
31 -3 V
30 -3 V
31 -2 V
30 -3 V
31 -2 V
31 -2 V
30 -2 V
31 -2 V
31 -2 V
30 -2 V
31 -1 V
30 -2 V
31 -1 V
31 -2 V
30 -1 V
31 -2 V
30 -1 V
% End plot #3
stroke
LTb
518 4619 N
518 448 L
6429 0 V
0 4171 V
-6429 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 9319 40571 a(Figure)433 b(2:)579 b(Numerical)434
b(Sim)-36 b(ulation)433 b(1;)h(A=1,)g(I=5\(on\),0\(o\013)93
b(\))3432 65846 y @beginspecial 50 @llx 50 @lly 410 @urx
302 @ury 3968 @rwi 1984 @rhi @setspecial
%%BeginDocument: data/part1/figures/rk2.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ./data/part1/rk2.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Mon Sep 23 03:46:57 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (./data/part1/rk2.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (john)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Sep 23 03:46:57 2013)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
686 448 M
63 0 V
6198 0 R
-63 0 V
602 448 M
( 0) Rshow
1.000 UL
LTb
686 1143 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 0.5) Rshow
1.000 UL
LTb
686 1838 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 1) Rshow
1.000 UL
LTb
686 2534 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 1.5) Rshow
1.000 UL
LTb
686 3229 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 2) Rshow
1.000 UL
LTb
686 3924 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 2.5) Rshow
1.000 UL
LTb
686 4619 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 3) Rshow
1.000 UL
LTb
686 448 M
0 63 V
0 4108 R
0 -63 V
686 308 M
( 0) Cshow
1.000 UL
LTb
1879 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 2) Cshow
1.000 UL
LTb
3071 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 4) Cshow
1.000 UL
LTb
4264 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 6) Cshow
1.000 UL
LTb
5456 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 8) Cshow
1.000 UL
LTb
6649 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 10) Cshow
1.000 UL
LTb
1.000 UL
LTb
686 4619 N
686 448 L
6261 0 V
0 4171 V
-6261 0 V
Z stroke
LCb setrgbcolor
112 2533 M
currentpoint gsave translate -270 rotate 0 0 M
(Potential) Cshow
grestore
LTb
LCb setrgbcolor
3816 98 M
(Time \(seconds\)) Cshow
LTb
3816 4829 M
(Numerical Integration of Leaky Integrator) Cshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UL
LT0
LCb setrgbcolor
6296 4486 M
(Input on) Rshow
LT0
6380 4486 M
399 0 V
686 490 M
30 327 V
30 296 V
29 267 V
30 242 V
30 219 V
30 198 V
30 180 V
30 162 V
29 147 V
30 133 V
30 120 V
30 109 V
30 98 V
29 89 V
30 81 V
30 73 V
30 66 V
30 59 V
29 54 V
30 49 V
30 44 V
30 40 V
30 37 V
30 32 V
29 30 V
30 27 V
30 24 V
30 22 V
30 20 V
29 18 V
30 16 V
30 15 V
30 13 V
30 12 V
30 11 V
29 10 V
30 9 V
30 8 V
30 7 V
30 7 V
29 6 V
30 5 V
30 5 V
30 5 V
30 4 V
29 3 V
30 4 V
30 3 V
30 2 V
30 3 V
30 2 V
29 2 V
30 2 V
30 1 V
30 2 V
30 1 V
29 1 V
30 1 V
30 1 V
30 1 V
30 1 V
29 1 V
30 1 V
30 0 V
30 1 V
30 0 V
30 1 V
29 0 V
30 0 V
30 1 V
30 0 V
30 0 V
29 1 V
30 0 V
30 0 V
30 0 V
30 0 V
30 0 V
29 1 V
30 0 V
30 0 V
30 0 V
30 0 V
29 0 V
30 0 V
30 0 V
30 0 V
30 0 V
29 0 V
30 0 V
30 0 V
30 0 V
30 1 V
30 0 V
29 0 V
30 0 V
30 0 V
30 0 V
30 0 V
29 0 V
30 0 V
% End plot #1
% Begin plot #2
stroke
LT1
LCb setrgbcolor
6296 4346 M
(Input off) Rshow
LT1
6380 4346 M
399 0 V
3667 3924 M
30 -170 V
30 -161 V
30 -153 V
30 -146 V
30 -139 V
29 -132 V
30 -126 V
30 -119 V
30 -114 V
30 -108 V
29 -103 V
30 -97 V
30 -94 V
30 -88 V
30 -84 V
29 -80 V
30 -76 V
30 -73 V
30 -69 V
30 -65 V
30 -63 V
29 -59 V
30 -56 V
30 -54 V
30 -51 V
30 -49 V
29 -46 V
30 -44 V
30 -42 V
30 -39 V
30 -38 V
29 -36 V
30 -34 V
30 -33 V
30 -31 V
30 -29 V
30 -28 V
29 -27 V
30 -25 V
30 -25 V
30 -23 V
30 -21 V
29 -21 V
30 -20 V
30 -19 V
30 -18 V
30 -17 V
30 -16 V
29 -15 V
30 -15 V
30 -14 V
30 -13 V
30 -12 V
29 -12 V
30 -12 V
30 -11 V
30 -10 V
30 -10 V
29 -9 V
30 -9 V
30 -8 V
30 -8 V
30 -8 V
30 -7 V
29 -7 V
30 -7 V
30 -6 V
30 -6 V
30 -6 V
29 -5 V
30 -5 V
30 -5 V
30 -5 V
30 -4 V
30 -4 V
29 -4 V
30 -4 V
30 -4 V
30 -3 V
30 -3 V
29 -3 V
30 -3 V
30 -3 V
30 -3 V
30 -2 V
29 -3 V
30 -2 V
30 -2 V
30 -2 V
30 -2 V
30 -2 V
29 -2 V
30 -2 V
30 -1 V
30 -2 V
30 -1 V
29 -2 V
30 -1 V
30 -1 V
30 -2 V
30 -1 V
% End plot #2
stroke
LTb
686 4619 N
686 448 L
6261 0 V
0 4171 V
-6261 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage

%%EndDocument
 @endspecial 9319 69997 a(Figure)433 b(3:)579 b(Numerical)434
b(Sim)-36 b(ulation)433 b(2;)h(A=2,)g(I=5\(on\),0\(o\013)93
b(\))24692 75163 y(3)p eop end
%%Page: 4 4
TeXDict begin 4 3 bop 3432 7638 a Ff(Discussion)3432
10886 y Fe(I)471 b(c)-36 b(hose)471 b(to)g(include)f(the)h(results)f
(to)h(the)g(RK4)g(sim)-36 b(ulation)472 b(b)36 b(ecause)470
b(I'v)-36 b(e)472 b(b)36 b(een)471 b(lead)3432 12492
y(to)463 b(b)36 b(eliev)-36 b(e)464 b(they)g(are)f(more)h(accurate.)668
b(If)464 b(the)f(grader)g(w)-36 b(ould)464 b(lik)-36
b(e)464 b(to)g(see)f(the)g(Euler)3432 14097 y(results,)d(it)455
b(is)h(no)f(trouble)g(for)g(me)g(to)h(submit)e(them.)643
b(As)455 b(previously)h(discussed)f(the)3432 15702 y(Euler)446
b(metho)36 b(d)445 b(exhibited)h(a)h(small)g(degree)f(of)h(error)f
(when)g(compared)g(to)h(the)f(Ana-)3432 17307 y(lytic)335
b(solution,)355 b(though)334 b(this)h(error)f(rapidly)h(falls)h(to)f
(zero)g(as)g(the)f(solution)h(con)-36 b(v)g(erges.)3432
19857 y(It)395 b(is)h(w)-36 b(orth)g(while)396 b(noting)f(that)g(the)g
(n)-36 b(umerical)396 b(error)f(seems)h(to)f(p)36 b(eak)397
b(at)e(t=1)h(b)36 b(efore)3432 21462 y(falling)511 b(o\013;)550
b(lo)36 b(oking)512 b(at)e(the)g(equation)h(for)g(the)f(Leaky)h(In)-36
b(tegrator,)530 b(w)-36 b(e)510 b(see)h(that)f(it)3432
23067 y(uses)403 b(an)h(exp)36 b(onen)-36 b(tial)405
b(term)e(in)h(its)g(time)g(ev)-36 b(olution.)569 b(In)404
b(general)h(this)e(term)h(v)-72 b(anishes)3432 24672
y(as)331 b Fd(t)f Fe(gro)-36 b(ws)331 b(large,)353 b(but)330
b(for)h(v)-72 b(alues)331 b(of)h Fd(t)368 b(<)h Fe(1,)352
b(m)-36 b(y)331 b(h)-36 b(yp)36 b(othesis)330 b(is)h(that)f(the)h(exp)
36 b(onen)-36 b(tial)3432 26277 y(term)437 b(will)i(v)-72
b(anish)439 b(at)f(a)g(slo)-36 b(w)g(er)439 b(rate.)592
b(This)438 b(will)h(cause)f(the)g(error)g(to)g(build)f(up)h(un)-36
b(til)3432 27882 y(that)580 b(term)h(starts)h(to)f(approac)-36
b(h)581 b(zero)h(at)f(an)g(increased)h(rate,)618 b(th)-36
b(us)580 b(bringing)i(the)3432 29487 y(system)433 b(to)h(equilibrium.)
3432 32037 y(These)601 b(n)-36 b(umerical)602 b(solutions)g(are)f(a)h
(necessit)-36 b(y)602 b(as)g(the)f(di\013eren)-36 b(tial)602
b(equations)g(w)-36 b(e)3432 33642 y(deal)578 b(with)h(b)36
b(ecome)578 b(less)h(tractable,)615 b(but)578 b(there)f(is)i(an)g(ob)
-36 b(vious)578 b(tradeo\013)h(b)36 b(et)-36 b(w)g(een)3432
35247 y(computation)548 b(time)g(and)g(accuracy)-108
b(.)923 b(It)549 b(seems)f(to)h(me)f(that)g(the)g(b)36
b(est)548 b(in)-36 b(tegration)3432 36853 y(metho)36
b(d)525 b(w)-36 b(as)526 b(Rotter-Deissmann;)572 b(it)526
b(p)36 b(erformed)525 b(as)h(man)-36 b(y)526 b(op)36
b(erations)526 b(as)g(Euler,)3432 38458 y(but)432 b(yielded)i(results)f
(as)h(accurate)g(as)g(RK4.)24692 75163 y(4)p eop end
%%Page: 5 5
TeXDict begin 5 4 bop 3432 7638 a Ff(P)-42 b(art)499
b(2)f(:)665 b(Leaky)497 b(In)-42 b(tegrate)500 b(and)f(Fire)434
b(In)-42 b(tro)42 b(duction)3432 11516 y Fe(The)436 b(second)h(part)f
(of)h(the)f(assignmen)-36 b(t)437 b(asks)g(us)g(to)f(sim)-36
b(ulate)437 b(the)f(Leaky)i(In)-36 b(tegrator)3432 13121
y(with)385 b(a)h(mo)36 b(di\014cation)386 b(that)f(causes)g(it)h(to)g
(spik)-36 b(e)385 b(at)h(certain)f(threshold)g(v)-72
b(alues.)563 b(What)3432 14727 y(this)433 b(means)g(is)h(that)f(when)h
(the)f(solution)g(to)21438 17680 y Fd(dx)p 21438 18268
1415 45 v 21573 19490 a(dt)23281 18578 y Fe(+)295 b Fd(Ax)369
b Fe(=)f Fd(I)16316 b Fe(\(1\))3432 21557 y(cross)456
b(some)h(threshold)e(v)-72 b(alue,)463 b Fd(v)48 b(T)181
b(hr)36 b(esh)p Fe(,)461 b(the)455 b(p)36 b(oten)-36
b(tial)457 b(v)-72 b(alue)457 b(will)g(automatically)3432
23162 y(spik)-36 b(e)624 b(to)h(some)g(arbitrarily)g(high)g(v)-72
b(alue,)673 b(called)625 b Fd(v)48 b(S)77 b(pik)45 b(e)p
Fe(.)1150 b(In)625 b(order)f(to)h(do)f(this,)3432 24767
y(w)-36 b(e)565 b(need)g(to)g(hard-co)36 b(de)564 b(an)h(up)36
b(date)564 b(and)h(reset)g(condition)g(in)g(our)g(original)h(leaky)3432
26372 y(in)-36 b(tegrator)311 b(that)g(c)-36 b(hec)g(ks)312
b(our)f(solution)h(against)g(this)f(threshold)g(and,)335
b(if)313 b(w)-36 b(e'v)g(e)312 b(crossed)3432 27978 y(it,)436
b(generate)g(a)g(spik)-36 b(e.)584 b(Once)435 b(the)g(spik)-36
b(e)436 b(is)g(generated,)g(w)-36 b(e)436 b(reset)f(the)g(p)36
b(oten)-36 b(tial)436 b(so)g(a)3432 29583 y(v)-72 b(alue)434
b(called)g Fd(v)48 b(R)11 b(eset)p Fe(.)3432 32133 y(It)433
b(should)f(b)36 b(e)433 b(noted)g(that)f(this)h(is)h(not)f(a)g(natural)
g(feature)g(of)h(the)f(Leaky)h(In)-36 b(tegrator)3432
33738 y(mo)36 b(del.)559 b(These)376 b(spik)-36 b(es)377
b(m)-36 b(ust)375 b(b)36 b(e)376 b(hard)g(co)36 b(ded)376
b(using)g('if)93 b(')377 b(statemen)-36 b(ts,)388 b(and)375
b(are)i(set)f(to)3432 35343 y(\014re)476 b(once)g(the)h(p)36
b(oten)-36 b(tial)476 b(crosses)h(our)g(threshold.)707
b(The)476 b(sim)-36 b(ulation)477 b(w)-36 b(as)478 b(run)d(using)3432
36948 y(t)-36 b(w)g(o)487 b(threshold)g(v)-72 b(alues:)687
b Fd(v)48 b(T)181 b(hr)36 b(esh)459 b Fe(=)i(1)p Fd(;)221
b Fe(2.)742 b(The)487 b(sim)-36 b(ulation)488 b(runs)f(for)h(10)g
(seconds,)3432 38553 y(during)401 b(whic)-36 b(h)402
b(the)f(input)g(curren)-36 b(t)400 b Fd(I)506 b Fe(is)403
b(on)f(for)g(1)370 b Fd(<)p Fe(=)e Fd(t)g(<)p Fe(=)h(6)402
b(and)f(set)h(to)g(a)h(v)-72 b(alue)402 b(of)3432 40158
y(3.)3432 42708 y(I)382 b(decided)f(to)h(k)-36 b(eep)382
b(m)-36 b(y)382 b(Rotter-Deissmann)g(and)f(Runge)h(Kutta)g(co)36
b(de)382 b(from)g(the)g(last)3432 44313 y(assignmen)-36
b(t,)323 b(so)296 b(I)g(ran)g(the)f(sim)-36 b(ulation)296
b(using)g(those)g(t)-36 b(w)g(o)296 b(metho)36 b(ds)295
b(along)i(with)f(Euler.)3432 45918 y(I)453 b(m)-36 b(ust)453
b(admit)g(that)g(I)h(struggled)f(for)h(some)f(time)h(with)f(an)h
(analyitic)h(sim)-36 b(ulation)453 b(of)3432 47523 y(the)420
b(\014ring,)k(only)e(to)f(disco)-36 b(v)g(er)422 b(that)f(it)g(cannot)g
(b)36 b(e)422 b(done)e(using)i(the)e(solution)i(I)f(found)3432
49128 y(to)573 b(the)g(leaky)j(in)-36 b(tegrator.)998
b(The)574 b(n)-36 b(umerical)573 b(metho)36 b(ds)573
b(w)-36 b(ork)575 b(b)36 b(ecause)573 b(they)h(allo)-36
b(w)3432 50734 y(the)519 b(system)h(to)h(adapt)e(no)h(matter)g(where)g
(it)g(is.)838 b(The)520 b(analytic)i(solution)e(is)g(a)-36
b(w)g(are)3432 52339 y(of)538 b(what)f(time)g(it's)h(at)g(in)f(the)g
(sim)-36 b(ulation,)564 b(so)537 b(when)g(I)h(tried)e(to)i(sim)-36
b(ulate)537 b(spiking)3432 53944 y(it)441 b(had)h(already)g(con)-36
b(v)g(erged)442 b(to)-36 b(w)g(ard)442 b(equilibrium;)29781
53421 y Fc(I)p 29667 53634 705 45 v 29667 54402 a(A)30947
53944 y Fe(is)g(greater)g(than)f(an)-36 b(y)442 b(v)-72
b(alue)442 b(of)3432 55549 y Fd(v)48 b(T)181 b(hr)36
b(esh)p Fe(,)432 b(so)i(I)g(got)g(\014v)-36 b(e)433 b(seconds)h(of)g
(radical)g(spik)-36 b(es.)3432 58099 y(I)433 b(c)-36
b(hose)434 b(a)g(spik)-36 b(e)434 b(v)-72 b(alue)434
b Fd(v)48 b(S)77 b(pik)45 b(e)368 b Fe(=)g(50,)435 b(and)e(a)h(reset)f
(v)-72 b(alue)434 b Fd(v)48 b(R)11 b(eset)368 b Fe(=)g
Fb(\000)p Fe(1.)3432 60649 y(I'v)-36 b(e)473 b(attac)-36
b(hed)472 b(the)g(source)h(co)36 b(de)473 b(for)g(this)f(mo)36
b(del)473 b(to)g(this)f(submission;)493 b(all)473 b(c)-36
b(hanges)3432 62254 y(required)480 b(for)h(this)f(mo)36
b(del)481 b(can)g(b)36 b(e)480 b(found)g(in)g(the)g(individual)h(sim)
-36 b(ulation)481 b(metho)36 b(ds,)3432 63859 y(i.e)434
b(solv)-36 b(eRK,)435 b(solv)-36 b(eE,)435 b(solv)-36
b(eRD.)24692 75163 y(5)p eop end
%%Page: 6 6
TeXDict begin 6 5 bop 3432 7638 a Ff(Results)3432 10886
y Fe(Belo)-36 b(w)531 b(y)-36 b(ou)531 b(can)f(see)h(the)e(plots)i(of)g
(the)f(Leaky)h(In)-36 b(tegrate)531 b(and)e(Fire)i(neuron)e(using)3432
12492 y(t)-36 b(w)g(o)433 b(di\013eren)-36 b(t)433 b(spik)-36
b(e)434 b(threshold)e(v)-72 b(alues.)3432 36458 y @beginspecial
50 @llx 50 @lly 410 @urx 302 @ury 3968 @rwi 1984 @rhi
@setspecial
%%BeginDocument: data/part2/figures/Vt1.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ./data/Vt1.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Mon Sep 23 02:52:44 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (./data/Vt1.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (john)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Sep 23 02:52:44 2013)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
602 647 M
63 0 V
6282 0 R
-63 0 V
518 647 M
( 0) Rshow
1.000 UL
LTb
602 1309 M
63 0 V
6282 0 R
-63 0 V
-6366 0 R
( 10) Rshow
1.000 UL
LTb
602 1971 M
63 0 V
6282 0 R
-63 0 V
-6366 0 R
( 20) Rshow
1.000 UL
LTb
602 2633 M
63 0 V
6282 0 R
-63 0 V
-6366 0 R
( 30) Rshow
1.000 UL
LTb
602 3295 M
63 0 V
6282 0 R
-63 0 V
-6366 0 R
( 40) Rshow
1.000 UL
LTb
602 3957 M
63 0 V
6282 0 R
-63 0 V
-6366 0 R
( 50) Rshow
1.000 UL
LTb
602 4619 M
63 0 V
6282 0 R
-63 0 V
-6366 0 R
( 60) Rshow
1.000 UL
LTb
602 448 M
0 63 V
0 4108 R
0 -63 V
602 308 M
( 0) Cshow
1.000 UL
LTb
1871 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 2) Cshow
1.000 UL
LTb
3140 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 4) Cshow
1.000 UL
LTb
4409 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 6) Cshow
1.000 UL
LTb
5678 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 8) Cshow
1.000 UL
LTb
6947 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 10) Cshow
1.000 UL
LTb
1.000 UL
LTb
602 4619 N
602 448 L
6345 0 V
0 4171 V
-6345 0 V
Z stroke
LCb setrgbcolor
112 2533 M
currentpoint gsave translate -270 rotate 0 0 M
(Potential) Cshow
grestore
LTb
LCb setrgbcolor
3774 98 M
(Time \(seconds\)) Cshow
LTb
3774 4829 M
(Leaky Integrate and Fire) Cshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UL
LT0
LCb setrgbcolor
6296 4486 M
(vThresh=1) Rshow
LT0
6380 4486 M
399 0 V
602 647 M
32 0 V
31 0 V
32 0 V
32 0 V
32 0 V
31 0 V
32 0 V
32 0 V
32 0 V
31 0 V
32 0 V
32 0 V
31 0 V
32 0 V
32 0 V
32 0 V
31 0 V
32 0 V
32 0 V
32 0 V
31 0 V
32 9 V
32 10 V
31 8 V
32 9 V
32 8 V
32 7 V
31 7 V
32 7 V
32 3907 V
1585 580 L
32 13 V
32 13 V
32 11 V
31 11 V
32 11 V
32 10 V
32 10 V
31 9 V
32 8 V
32 9 V
31 7 V
32 8 V
32 7 V
32 3912 V
2061 580 L
32 13 V
32 13 V
32 11 V
31 11 V
32 11 V
32 10 V
31 10 V
32 9 V
32 8 V
32 9 V
31 7 V
32 8 V
32 7 V
32 3912 V
2537 580 L
32 13 V
32 13 V
31 11 V
32 11 V
32 11 V
32 10 V
31 10 V
32 9 V
32 8 V
31 9 V
32 7 V
32 8 V
32 7 V
31 3912 V
3013 580 L
32 13 V
32 13 V
31 11 V
32 11 V
32 11 V
31 10 V
32 10 V
32 9 V
32 8 V
31 9 V
32 7 V
32 8 V
32 7 V
31 3912 V
3489 580 L
32 13 V
31 13 V
32 11 V
32 11 V
32 11 V
31 10 V
32 10 V
32 9 V
32 8 V
31 9 V
32 7 V
32 8 V
31 7 V
32 3912 V
3965 580 L
32 13 V
31 13 V
32 11 V
32 11 V
31 11 V
32 10 V
32 10 V
32 9 V
31 8 V
32 9 V
32 7 V
32 8 V
31 7 V
32 3912 V
4441 580 L
31 13 V
32 3 V
32 2 V
32 3 V
31 2 V
32 2 V
32 2 V
32 2 V
31 2 V
32 2 V
32 1 V
31 2 V
32 1 V
32 2 V
32 1 V
31 1 V
32 2 V
32 1 V
32 1 V
31 1 V
32 1 V
32 1 V
31 1 V
32 1 V
32 1 V
32 0 V
31 1 V
32 1 V
32 0 V
31 1 V
32 1 V
32 0 V
32 1 V
31 0 V
32 1 V
32 0 V
32 1 V
31 0 V
32 1 V
32 0 V
31 0 V
32 1 V
32 0 V
32 0 V
31 1 V
32 0 V
32 0 V
32 1 V
31 0 V
32 0 V
32 0 V
31 0 V
32 1 V
32 0 V
32 0 V
31 0 V
32 0 V
32 1 V
32 0 V
31 0 V
32 0 V
32 0 V
31 0 V
32 0 V
32 0 V
32 1 V
31 0 V
32 0 V
32 0 V
31 0 V
32 0 V
32 0 V
32 0 V
31 0 V
32 0 V
32 0 V
32 0 V
31 0 V
32 1 V
% End plot #1
stroke
LTb
602 4619 N
602 448 L
6345 0 V
0 4171 V
-6345 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 9319 40609 a(Figure)433 b(4:)579 b(Numerical)434
b(Sim)-36 b(ulation)433 b(1;)h(A=1,)g(I=3\(on\),0\(o\013)93
b(\))3432 65884 y @beginspecial 50 @llx 50 @lly 410 @urx
302 @ury 3968 @rwi 1984 @rhi @setspecial
%%BeginDocument: data/part2/figures/Vt2.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ./data/Vt2.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Mon Sep 23 02:49:45 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (./data/Vt2.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (john)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Sep 23 02:49:45 2013)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
602 647 M
63 0 V
6282 0 R
-63 0 V
518 647 M
( 0) Rshow
1.000 UL
LTb
602 1309 M
63 0 V
6282 0 R
-63 0 V
-6366 0 R
( 10) Rshow
1.000 UL
LTb
602 1971 M
63 0 V
6282 0 R
-63 0 V
-6366 0 R
( 20) Rshow
1.000 UL
LTb
602 2633 M
63 0 V
6282 0 R
-63 0 V
-6366 0 R
( 30) Rshow
1.000 UL
LTb
602 3295 M
63 0 V
6282 0 R
-63 0 V
-6366 0 R
( 40) Rshow
1.000 UL
LTb
602 3957 M
63 0 V
6282 0 R
-63 0 V
-6366 0 R
( 50) Rshow
1.000 UL
LTb
602 4619 M
63 0 V
6282 0 R
-63 0 V
-6366 0 R
( 60) Rshow
1.000 UL
LTb
602 448 M
0 63 V
0 4108 R
0 -63 V
602 308 M
( 0) Cshow
1.000 UL
LTb
1871 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 2) Cshow
1.000 UL
LTb
3140 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 4) Cshow
1.000 UL
LTb
4409 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 6) Cshow
1.000 UL
LTb
5678 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 8) Cshow
1.000 UL
LTb
6947 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 10) Cshow
1.000 UL
LTb
1.000 UL
LTb
602 4619 N
602 448 L
6345 0 V
0 4171 V
-6345 0 V
Z stroke
LCb setrgbcolor
112 2533 M
currentpoint gsave translate -270 rotate 0 0 M
(Potential) Cshow
grestore
LTb
LCb setrgbcolor
3774 98 M
(Time \(seconds\)) Cshow
LTb
3774 4829 M
(Leaky Integrate and Fire) Cshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UL
LT0
LCb setrgbcolor
6296 4486 M
(vThresh=2) Rshow
LT0
6380 4486 M
399 0 V
602 646 M
32 0 V
31 0 V
32 0 V
32 0 V
32 0 V
31 0 V
32 0 V
32 0 V
32 0 V
31 0 V
32 0 V
32 0 V
31 0 V
32 0 V
32 0 V
32 0 V
31 0 V
32 0 V
32 0 V
32 0 V
31 0 V
32 10 V
32 9 V
31 9 V
32 8 V
32 8 V
32 8 V
31 7 V
32 7 V
32 6 V
31 7 V
32 5 V
32 6 V
32 5 V
31 5 V
32 5 V
32 5 V
32 4 V
31 4 V
32 4 V
32 4 V
31 4 V
32 3 V
32 3840 V
2030 580 L
31 13 V
32 13 V
32 11 V
32 11 V
31 11 V
32 10 V
32 10 V
31 9 V
32 8 V
32 9 V
32 7 V
31 8 V
32 7 V
32 7 V
32 6 V
31 6 V
32 6 V
32 6 V
31 5 V
32 5 V
32 5 V
32 4 V
31 4 V
32 4 V
32 4 V
31 4 V
32 4 V
32 3842 V
2950 580 L
31 13 V
32 13 V
32 11 V
32 11 V
31 11 V
32 10 V
32 10 V
31 9 V
32 8 V
32 9 V
32 7 V
31 8 V
32 7 V
32 7 V
32 6 V
31 6 V
32 6 V
32 6 V
31 5 V
32 5 V
32 5 V
32 4 V
31 4 V
32 4 V
32 4 V
32 4 V
31 4 V
32 3842 V
3870 580 L
31 13 V
32 13 V
32 11 V
32 11 V
31 11 V
32 10 V
32 10 V
31 9 V
32 8 V
32 9 V
32 7 V
31 8 V
32 7 V
32 7 V
32 6 V
31 6 V
32 6 V
32 6 V
31 5 V
32 -5 V
32 -4 V
32 -5 V
31 -4 V
32 -3 V
32 -4 V
32 -4 V
31 -3 V
32 -3 V
32 -3 V
31 -3 V
32 -3 V
32 -2 V
32 -3 V
31 -2 V
32 -2 V
32 -2 V
32 -2 V
31 -2 V
32 -2 V
32 -2 V
31 -1 V
32 -2 V
32 -1 V
32 -2 V
31 -1 V
32 -1 V
32 -2 V
31 -1 V
32 -1 V
32 -1 V
32 -1 V
31 -1 V
32 -1 V
32 -1 V
32 0 V
31 -1 V
32 -1 V
32 -1 V
31 0 V
32 -1 V
32 -1 V
32 0 V
31 -1 V
32 0 V
32 -1 V
32 0 V
31 -1 V
32 0 V
32 0 V
31 -1 V
32 0 V
32 -1 V
32 0 V
31 0 V
32 -1 V
32 0 V
32 0 V
31 0 V
32 -1 V
32 0 V
31 0 V
32 0 V
32 0 V
32 -1 V
31 0 V
32 0 V
32 0 V
31 0 V
32 0 V
32 -1 V
32 0 V
31 0 V
32 0 V
32 0 V
32 0 V
31 0 V
32 0 V
% End plot #1
stroke
LTb
602 4619 N
602 448 L
6345 0 V
0 4171 V
-6345 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 9319 70035 a(Figure)433 b(5:)579 b(Numerical)434
b(Sim)-36 b(ulation)433 b(2;)h(A=1,)g(I=3\(on\),0\(o\013)93
b(\))24692 75163 y(6)p eop end
%%Page: 7 7
TeXDict begin 7 6 bop 3432 7638 a Fe(The)349 b(results)f(for)i(this)e
(sim)-36 b(ulation)349 b(pro)36 b(duced)348 b(a)h(nice)g(series)h(of)f
(spik)-36 b(es.)551 b(The)349 b(plots)g(will)3432 9243
y(b)36 b(e)524 b(on)h(the)f(next)g(page.)852 b(The)525
b(spiking)g(rate)g(w)-36 b(as)525 b(calculated)h(for)f(eac)-36
b(h)524 b(sim)-36 b(ulation,)3432 10848 y(though)432
b(I)i(did)f(ha)-36 b(v)g(e)434 b(some)g(confusion)g(as)g(to)f(ho)-36
b(w)434 b(that)f(should)g(b)36 b(e)433 b(measured.)3432
13398 y(The)418 b(\014rst)f(spik)-36 b(e)418 b(pro)36
b(duced)417 b(when)g Fd(v)48 b(T)181 b(hr)36 b(esh)368
b Fe(=)g(1)419 b(o)36 b(ccured)417 b(at)h Fd(t)369 b
Fe(=)f(1)p Fd(:)p Fe(5,)423 b(and)417 b(the)h(last)3432
15003 y(spik)-36 b(e)470 b(w)-36 b(as)471 b(at)f Fd(t)431
b Fe(=)g(6.)688 b(A)470 b(total)h(of)g(sev)-36 b(en)470
b(spik)-36 b(es)471 b(w)-36 b(ere)470 b(observ)-36 b(ed,)479
b(so)471 b(the)f(spik)-36 b(e)470 b(rate)3432 16608 y(should)433
b(b)36 b(e)20602 19562 y(7)p 18959 20150 3936 45 v 18959
21371 a(6)296 b Fb(\000)f Fe(1)p Fd(:)p Fe(5)23397 20460
y(=)368 b(1)p Fd(:)p Fe(56)27326 19562 y Fd(spik)45 b(es)p
27221 20150 3853 45 v 27221 21371 a(second)44941 20460
y Fe(\(2\))3432 23550 y(Ho)-36 b(w)g(ev)g(er,)434 b(spik)-36
b(es)434 b(w)-36 b(ere)434 b(observ)-36 b(ed)433 b(at)h(the)f(follo)-36
b(wing)436 b(times:)17127 27075 y([1)p Fd(:)p Fe(5)p
Fd(;)221 b Fe(2)p Fd(:)p Fe(25)p Fd(;)g Fe(3)p Fd(;)g
Fe(3)p Fd(:)p Fe(75)p Fd(;)g Fe(4)p Fd(:)p Fe(5)p Fd(;)g
Fe(5)p Fd(:)p Fe(25)p Fd(;)g Fe(6])12045 b(\(3\))3432
29714 y(It)366 b(is)h(plain)f(to)h(see)g(that)f(there)g(w)-36
b(as)367 b(a)f(spik)-36 b(e)367 b(ev)-36 b(ery)367 b(0)p
Fd(:)p Fe(75)h(seconds,)380 b(meaning)367 b(the)f(spik)-36
b(e)3432 31320 y(rate)433 b(should)g(b)36 b(e)434 b(1)p
Fd(:)p Fe(33)14533 30749 y Fc(spik)24 b(es)p 14446 31010
2789 45 v 14446 31778 a(second)17368 31320 y Fe(.)3432
33870 y(When)433 b Fd(v)48 b(T)181 b(hr)36 b(esh)367
b Fe(=)i(2,)434 b(the)f(\014rst)g(spik)-36 b(e)434 b(rate)f(equation)i
(is)20602 36823 y(3)p 18453 37411 4948 45 v 18453 38633
a(5)p Fd(:)p Fe(1)297 b Fb(\000)e Fe(2)p Fd(:)p Fe(2)23903
37721 y(=)368 b(1)p Fd(:)p Fe(03)27832 36823 y Fd(spik)45
b(es)p 27727 37411 3853 45 v 27727 38633 a(second)44941
37721 y Fe(\(4\))3432 40811 y(Ho)-36 b(w)g(ev)g(er,)434
b(spik)-36 b(es)434 b(w)-36 b(ere)434 b(observ)-36 b(ed)433
b(at)h(the)f(follo)-36 b(wing)436 b(times:)21255 44336
y([2)p Fd(:)p Fe(2)p Fd(;)221 b Fe(3)p Fd(:)p Fe(65)p
Fd(;)g Fe(5)p Fd(:)p Fe(1])16167 b(\(5\))3432 46976 y(Whic)-36
b(h)511 b(puts)g(a)h(spik)-36 b(e)512 b(ev)-36 b(ery)513
b(1)p Fd(:)p Fe(45)g(seconds,)531 b(making)513 b(the)f(spiking)g(rate)g
(0)p Fd(:)p Fe(69)43406 46405 y Fc(spik)24 b(es)p 43319
46666 2789 45 v 43319 47434 a(second)46242 46976 y Fe(.)3432
48581 y(The)339 b(ratio)i(of)f(these)g(spiking)g(rates)g(is)g(either)g
(1)369 b(:)h(0)p Fd(:)p Fe(66)341 b(if)f(y)-36 b(ou)340
b(follo)-36 b(w)342 b(the)d(instructions,)3432 50186
y(or)428 b(1)369 b(:)h(0)p Fd(:)p Fe(52)429 b(if)g(y)-36
b(ou)429 b(lo)36 b(ok)430 b(at)f(the)e(data,)j(though)e(either)g(w)-36
b(a)g(y)429 b(it)g(seems)f(as)h(though)f(the)3432 51791
y(ratio)434 b(of)g(rates)g(is)g(nealy)g(the)f(recipro)36
b(cal)434 b(of)h(the)e(ratio)h(of)g(threshold)f(v)-72
b(alues.)3432 54341 y(Giv)-36 b(en)441 b(that)g(the)g(input)f(curren)
-36 b(t)440 b(is)i(only)g(turned)e(on)h(at)h Fd(t)382
b Fe(=)g(1,)444 b(the)d(\014rst)g(sim)-36 b(ulation)3432
55946 y(sa)g(w)453 b(its)f(\014rst)g(spik)-36 b(e)453
b(0)p Fd(:)p Fe(5)g(seconds)f(in)-36 b(to)452 b(the)g(\\on")h(p)36
b(ortion.)635 b(The)453 b(second)f(sim)-36 b(ulation)3432
57551 y(sa)g(w)498 b(its)h(\014rst)e(spik)-36 b(e)499
b(1)p Fd(:)p Fe(2)g(seconds)f(in)-36 b(to)498 b(the)g(\\on")h(p)36
b(ortion,)514 b(and)498 b(the)g(ratio)g(of)h(these)3432
59156 y(t)-36 b(w)g(o)433 b(n)-36 b(um)g(b)36 b(ers)432
b(is)i(1)370 b(:)f(2)p Fd(:)p Fe(4.)3432 61706 y(A)416
b(c)-36 b(hange)416 b(in)g(A)g(from)h(1)g(to)f(2)h(means)f(doubling)g
(the)f(deca)-36 b(y)417 b(rate)f(of)h(the)f(system)h(and)3432
63311 y(halving)556 b(its)f(equilibrium)g(v)-72 b(alue.)944
b(An)555 b(equilibrium)g(v)-72 b(alue)556 b(of)35937
62788 y Fc(I)p 35823 63001 705 45 v 35823 63769 a(A)37236
63311 y Fe(=)38957 62788 y Fa(3)p 38957 63001 471 45
v 38957 63769 a(2)40115 63311 y Fe(means)f(that)3432
64916 y(for)476 b Fd(v)48 b(T)181 b(hr)36 b(esh)440 b
Fe(=)h(1)476 b(w)-36 b(e)476 b(w)-36 b(ould)476 b(see)g(more)g(spik)-36
b(es,)487 b(but)475 b(for)i Fd(v)48 b(T)181 b(hr)36 b(esh)440
b Fe(=)g(2)477 b(w)-36 b(e)476 b(w)-36 b(ould)3432 66521
y(not)532 b(see)g(an)-36 b(y)533 b(spik)-36 b(es.)875
b(This)532 b(is)h(b)36 b(ecause)532 b(an)g(increase)h(in)f(A)g(causes)h
(the)e(system)i(to)3432 68126 y(con)-36 b(v)g(erge)344
b(more)h(quic)-36 b(kly)-108 b(,)363 b(but)344 b(also)h(means)f(it)h
(con)-36 b(v)g(erges)344 b(to)h(a)f(v)-72 b(alue)345
b(to)36 b(o)345 b(lo)-36 b(w)345 b(to)g(cross)3432 69732
y(the)433 b(second)g(threshold.)24692 75163 y(7)p eop
end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
