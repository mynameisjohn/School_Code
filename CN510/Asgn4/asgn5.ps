%!PS-Adobe-2.0
%%Creator: dvips(k) 5.98 Copyright 2009 Radical Eye Software
%%Title: asgn5.dvi
%%CreationDate: Tue Oct  8 02:43:31 2013
%%Pages: 17
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: CMBX12 CMR12 CMMI12 CMMI8 CMSY10 CMEX10 CMSY8 CMR8
%%+ Helvetica CMR6 CMMI6 CMSY6 CMTT12
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips asgn5.dvi -Ppdf -G0 -o asgn5.ps
%DVIPSParameters: dpi=8000
%DVIPSSource:  TeX output 2013.10.08:0243
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: CMTT12
%!PS-AdobeFont-1.0: CMTT12 003.002
%%Title: CMTT12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTT12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTT12 known{/CMTT12 findfont dup/UniqueID known{dup
/UniqueID get 5000833 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTT12 def
/FontBBox {-1 -234 524 695 }readonly def
/UniqueID 5000833 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTT12.) readonly def
/FullName (CMTT12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 34 /quotedbl put
dup 37 /percent put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 59 /semicolon put
dup 60 /less put
dup 61 /equal put
dup 62 /greater put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 73 /I put
dup 75 /K put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 81 /Q put
dup 82 /R put
dup 84 /T put
dup 88 /X put
dup 91 /bracketleft put
dup 92 /backslash put
dup 93 /bracketright put
dup 95 /underscore put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 123 /braceleft put
dup 125 /braceright put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943DE1B57D05DA0555DF933BB0
7B42D264831116C06C79335D519461E7B0E870A6715E3D74A08D1BCF86E3BCC3
A43FC6BAD1C68BD9D4AFCC06D845FD1F1E70D7A47F0BBCAECE8396E04591E5E3
4797F646AFEEB7DB548183F0B74C9BB6BA2AA04E7F5950EC8AE97C741D4B2C5C
A8E7A8DF5A36A30B5A7592D95E1DBC63EF33C92FE459792CED29E2B8B6919251
75EF62089BD7D44A6E1F9B62EC802FBE62B821DA1C3B2DDED45D27964AD29ED0
9FB7868F3A8FEADA87A8E42D52C1EB7229D7C79B60BDA263F2BDB025AE14A507
098FA274206BACFB4A0A7257D5998EE8F0FDCA79CB61DD1FC59DADD11E16BF02
ECDFD706CDA1E72054D4EB55AF7BA9F19955886BC0BD6E0E3FE3769C94AF3581
DFB2BCD67FE2892AF07E858A01280194D8DD7332B3D0A585C87FAB056C2EAA9B
5AD48D1C9F00CEF8EF0D1408DBE1C03D04B231D7B8D5D998FE0CD7EE19828EF2
F988EBF6DDBFEE00F04A4A1F4E1A55DED7EF3AACEAB5005F1962C724A017C914
2936E2E0DF26A55ACD7DD836C6035CBF07981C1BCE3615064F0540A1034C69B4
E3908E76EF8925D486DF0B4A8E1F02D8AA99585A7C31847AB9382F83880C1C21
C496AB2DF8E7BD4643B28B704B5F6B53429D3EE940A79135F5BF0396E5B46F23
42AF406C26D12BEA7A41F332AEB75DF43C15334CF4651A99F602036946B1B91D
4BB0D2E51C20216D892C8173241AC8FD15A37C3CDD8AB4FB67D8565AFA61C068
95E3D6E46D7C09BBD09428207D506AD43C693F3C3D787F6A5C39084AE45E81C9
830900DB50DAD10A17E118FB5E9680B5194716A788FF7514A1167DD1A305FBE3
FC1F39A39F5613D50934419B95A4A2FE1B6C18912CECB86726926F6B77B5C3AF
F38F85F974A2D2145BE010EBB4A390B842BC222AD4A0B7FDD882668C04C51F19
13FF91E7CFA0A0F4E99A1944B272E0291BBF3F9ADFCF3F625B87377AFEBD9F11
6385726E908BAB7D1357504048C0F5B266994CC60A09BEA9A64E8AC6A4272240
00CF0C50AFC2F783594DE2C907D4EC63F6431805A40EF837884510B1A8C7CC6D
FAA856E64BDB00231392BE88421A29705AC41628DDB7EFEB67FEDD00215CBE9B
19B4A3406A86E58F083AC9CFE93B3A937B3B748013866F0EE5D39073FCD88867
DE69EB0AFCE824D6272EB47FD123FC4EC0B2E9CFCE842CD96579458037F76AF5
163025552603A20B82A6469C877F399CCEF8F364600BC1487E707902114CF0F1
51B6C20EAF52647F52384E2014355252AE4AF1DE150D2674F352414850BFD93C
DB78AED53F9816BB6D6CC11D26BCAFEDF82D96BC36D25AE45F9C9BCF3961097B
8C98ADDF186788F7C2CFC443D24E1D49BEAE73E079B3D09BA949F66D190E24B7
B4B84CC94A31A2552659A502755500EB4719340D2B964CD4C570A39F1135C4E9
77316557BA411A81B3D5F9673137B22420FD5F0E76A62C11CDEDF020EE046189
B172D1FBEC5B7F4C7EF6B6BAB7DDEF69CB304A1B4C1CDE9123B706B67521940C
ADFF97D6EB9FB04CFCFD84D12A3C33B51FACC679B820F3006889382F7F2E02BD
FDBD9129750C8A7B7BF7A606569B7B80E2751284E004812FB54F2EB8D997A701
93863375545C490FB8805E0FE056EDA8FD8765DCB52395D942C145C2204CFC22
7A7CE573D4C1F9180A05E73905A7C491E95426275658B51680D7BF84EF5EDAFB
1821C8AA75FFC259652F9D3D5BF5F2122552D6B88CFA84A88F8D781EF3F71FCF
659E599164582EE30BFE570CAE4086F028A08EA3428E013C2361FEE2C4BE6C80
BB26CCB3430993D99E018371969441CD0EAC70C6F994D3750D63A653F77959D5
919815A92C1CC9488788683DC99FEC8B19FB9E890F90F5BDB2F719E4F85AEE65
E87E64EA8060953D272887D52B852D19A0386B436BEB0E0044320CC5A89ABD80
F5ACF2FF5E31FD46643F52208C73B96C55C78E6904929E6E4337E15FEA538AB0
1D8322BB5B93729B0B64CF865818A2A214BB694178801796BF8B6617626AF9C1
9F72D84C9CDFF3A4D8CFAD54CF0D65F5BB3AE36FB3F541C7C1F88453993CA6B9
56A3EF6ED9D3FEA9A5277A3CFF26B9FB4B7EF096A23FFC4ED790914D5FF5919E
8BA2EB4337A2F96B9E6ECE4C32885856BBA23EFEA2579F8F51BEAC9B1902AAE9
E19DBED420AE1FA7B0773E8C7DD38215B519A692430F381D317C7F69CC919B5F
20AF4C48881A1D067445124F0D1ED0BCF5F11FA83FF92CD340DE4CDF1DF328E6
3876577CCD1E0E6FCC049DB08A19BA44E89FF23D26B47B9CB5B498D35930D16D
61203C039256BEC771BD84B7DDB215526CD3405CD6D129487134FDA391714426
45C9D256312122960DDADD9B4392201DC2BD2F7B84A1A6D4D2E990F886E7EE8B
72FCE62E785FA85AE6AEDE28747B40697D55110C3662876BE2631498E2C7E6B1
065C5E8308A1DA307932D9B3AF9DFAD403FAD75ACA1AA7C8B8C7770C7F473172
C5B837EF687E7C58C6492C19900192F2BA02B7341FF5413E288C44E02854EBD7
810D7538CCEEE0D1E8EF93510C5D3980856131784876479182512CF4A5B12764
17184BDEFF916057804EC1534D7228BF4DB8B2B49C25E1DBBAC837A84D6966B7
EF67D7F07880B49F4CB9797A8F0B85D1DA827F9BA026DC5AD0B7315A55396A4B
1391B61935B04761619A603F30AE5B3D2C6A6F7CC4880380A8471E75B6CDC33F
9224042566A152C1D1B4AC4280869FA4C31CCBFEE9F5BF7B63D5319B2F40AC21
BF7A29ABA9A6C4EA3BC387E38C81432005E0F613D42832DC0DDC1AFF757D9B35
77C6797E934255FF24C96FF7F37CBB7CCED09681CC0C8194649292298C85D6E4
06B10DF00E76EE68B0D3726DAF2A7BBDD16FCE8413E377C71E190748C0F1468F
A89AE89EE9EDE95C29C04E1BC2CE7BA777B5928836DE891B1CB9A1054E74D693
DAA2C6C481622CAEE8C6DC5126EAF0B90A50F5198D20C47B88B8659AE80BEC9A
84A90AC507E6C372D76E1464311D1E27310544132D4249E91F5E0682CFE89B80
43671B221B2085600BBF94A8BA78A093D3709C6AA9385E8229DE942340A40AB1
37A4C434F7C9F4A5B79757C177679A83A2A457D52227E679E92679AD5D4315C1
1DAF4530593CD1E5063F4EC22EFB1EAE031B5D0D9B9415396A85B5B773515D99
5485732462A9DDD832654461543E185CF083227E9165B536327072E55108A5E5
2CDBED1A8613E0F03719096FEBA186D9D6F62ED8E8CFCF291A33194620DE9195
E8559ACA241569F0A5DB1134A97E8BE7F1C0D80E45EBA4CFC4C3E008F4535187
97058CA2393B9A1D56DABD0537D0BCD251AADDD488CC6139326DC01E920F57D5
07A3B3C112F12F8BC0BA61A1C090DA27FD03E545176C19A0DB1E9E83332116DB
B3D53AB3E972A1CEF0DAAB4DE2A9892F03064439A596568F1CAC54FF0F25A13D
AD439556D25495D7B4F5E9ACD16FF7E6B7AD7546B1C5AD122B7226F033C0FF9F
3AA3AED94F18C0BDF39CFA3A7D1DB78B242FFCA484B730EF48E6572B82B1AD0B
992C2143A58156B0D1B159A093C0DD8ED86040879B37D55F9189717FDFA0E09A
37A9F608979CC37DC02088BCC1F95EA8E1AA82F609DBD1244EEF4B7C3C6F0B03
8668DE208608644BB240C711E203A2460EE7D351E6BD8B49E85D45024A2A0B2E
1040992C15840A641CAFCD680041B87EB66E5D4ECC7C0DDE1A8E200EC8E6C764
9FEC9A6E8C55A3D65952C2F5D661B825B808CC29F63B3DB318F0CE103B2A5565
10583200B0448EBAE8F7F5058D11229C7A071B60AE33BC870AF550ED01909AFE
C19E812AD3DFE58183B9077A0D87FF3C4008EE6A09C6E286E6C68727E2D5E77B
09A9975FBFB17EE7B370DAB6D3673B8580A7ACB4AB7B0698F8392018693E02AE
8B3EEC7B6B18A64D6409743BEDB4AA1C6DBCDA86A6B76D6D4D4D41A69D39904B
5553EE77E855EC63187066DE7A307BF33C309C3AFA167DB61D6D3DCDFDA2D7DE
037791CD96EF22F9140AA17845B0AA2F53634C35AC22BAE17A9728A440FF1EAA
79A3D217A248A8903AC791C5424038CA9DAAF9931DBF80F4E8075010E1880FC4
61D198230D2D6C096B3EA3F51F6BE136DDA20A49389643C7A86DCFDAB4FFC824
576CD054186F09316C43B4A6233B81461AFD63738FD69C97E109A0D03AB934E3
4EF273DE29FD9B068F74AFA096CBD3AABC8F633197D2BA6C2C25D471F5B59F0F
C428FCE711882EFE18F796F9759D043C1FA5A52ED739A4815E17F523F17A05A4
FB364E024C067B5A77642F58BD82A4F784AB6BBD270D33BFD33186D2B6260A68
2BEBF28AE261C6B06606FAEF720D608EC4705B47F0006E9344C7B0AB29C14165
5CD06A6B5DF4E8B638E9A01F02B4C5BD61FD2B3AA5BB392BECC382B82F6F8C62
8EE7A8096798EE421F762BB7F0E9CD9B977E0F621B302088B9D2145665E553F9
2D3C4A1E9308B5B37EAE9E35BFC403AC9C120CEA3000DFD16C66F12DA8944EEF
8A0D2E76002DAF711DD66A4C41C0D5605B810173A9577258C715D0BA7822ED97
AA8681D68FB5C7D184523461FBC8291E944588EAD68D4DD1342CFF8E5EA3F52A
82172F253454EC3C552DC421202BD08AD826DC30703EA0D71DFD740F37308AAF
F95BAC04F3145E84D01E1E09B1BA6DCA61723E149853744E06C9E5DFC8006198
743A648B9DF117C7F1571DC1C29B50C4D98A534EF3209386699F5A343FB70FA5
BAF923B9D171897950A38ADBB8AAFE7EAA581DB64D4FA34315FE9623D70305F3
79C797A84440C1EB68936D570FA8183BB89E1371DE4CC669986DE81DDCBAB61A
B1F6BAAC55AFC9D90E440895C5F4B8CFEC96FEDF1D1C1BFF269AC327FED4C2AC
C3A83577F1BF7723D47FCDC5BFFCC5CE9C84AD859079BBC80A48A7DC811225F4
05C599D9E7429410CF6B5034763B87B8A1FDC25070E0FBEE5396375C6E5B5C8F
A210419FBCD05280201F4C032AC916CAB57EE71B6A34E37BDFFED0E6C0217BF8
AC2150412C18AEEE7D47CB31336E00CAEB3FF0419D1055658ED31954553A5EBC
952A99DCD21E7BCD472BC137F1F361CCBBE6F342C2A96F955CDB29833EEF365D
DAAF90B5BE5650C23E4F41A2DC7EF7D8749858EA58080072BB3FC8B4CECC8A46
6C569B7C1ECB1E5FABDF52955AECF797BD0D656B97F44105D847B8B2DEADDD47
5CAFC27C573DDC476C4C30ECDB433EF3DE24A725761103D77DA7EBA82B709C9C
6A78C2697AFF7E7A753B2F1D5B850D77007D752B6543F6122B070ED5F13EC52B
2F67C1F634DCB996455997F5BC2DC7FB01A15E2D2137DB432D18B73C579DAA74
90C29C53506B734D059E3883A0E27BCFD52683B72CE1515421ED91E3A55222A2
BF126E2BB56CFA3D0AC6C5D9FFCDBAC0C2E04F8CCC361549FDBDD6AA4B879590
2F6ED3E3A0F743EB18260CDB75C6B66062474B3BC59EAF427A597E71E95B554B
09229A4FBAC842019CC4DF9E4ADEA85D9F8CDA71DAB71CEE8578A06859FFDB48
1BE38C651206051B38EE5CC826310B49A3C3E7A566EA2CA3EB16542A3D231506
D9862E75893768422478AC20EDEE9457B89FEE9B4FB045CBE189A7F47371F11A
C595422F7E73104718738747530A78789F4C373084E4E25315DC8622C934194A
3C697D0B085E0D75B83EF752D23B36FA839425C59A87FC63553281726D6158E2
843ADE7B9A26C37B80574C68B0A5C78B7F33305A8FE8ED0D947DFE7E0F08B662
FD676923E586F8D97F6B800042CCAF9604CB53F22FEC88438EB5134A8F8952FD
21DBA4E286381D01E295BB76BFEAD16659F20F49D7946F1F5DD42036E8493AB3
965F5CD0F928861A298094C0D9B66BE619B178E122474FAE12723125872AEA05
EF8F63A31C91A0C4F25DAB7FA4E71EFB7075790A3AA62BB26683015EBED534B8
C7D131713B8B7E4D02F98525513981EB84EDE027AA2C2666F12E48134E4E1326
7FCBA74E107B65B9B29753EC723FF058D611F86F90B3277CA30AF340F41B8764
6E4D47835A826D827B4039FD82BF3E52500CC4D9A8A973F8036C2234390D66B8
B72D6DE1D63E2653C43BD22DA25366571758072ACF6E1812D8939BDBCD33DDA0
9D9601412F73BA5904EB264857F4BC9047DF3E42E7BC765E7A652C1D9128FA74
C30CA0AB63A63A343D41750EAECE1340A332D901399BD8D4AC2B21C7DDA2FA43
2A1BC21EB4D4955F3AD2D03B9B248940B09D07A06039BD2E9BD418A1ECAC7076
475B1C44F28F628D55BDA07E7A807F189803C3D031ED3D5783B49492B5E844BD
396935ACC43FF8982981E1453C1B06BC962E9DBFADBE8220505E7002F9A205E7
C765F249DF4182831D20F92298942BBD3B8AFC8DA6AFB0BC56A1E0EC2F9A9F6C
DDEDB0D4F43CE202CF372F4D8D74080570A88E84CF89997AC00F15BEE980B077
09415966E4657AC20911FC0F9920E418842DB229D553AECB23807C96655BC30D
B4C4AD051084310D962BC49BCDAD7C25C7EB68DE604375D3783829E0CCBAB1E8
59CB6230093A260C7B4B18A8BB36E310F529FD9942A2FC747EAD2B70DC3BDFE1
93F7210A8566FE53148CA0C0B053CE60AAB51CC50AC9133E42A1F389841684A2
147EBC99C54B3401CEE3156D530BDED4BD2C97ED17DA774035E9F2F186A3C00D
0035E6F14F64DC77D9B7A12E99ADC818536FD5EC266961EA81F1ED6D8F97B865
4AAB2215CA1F2B0E0857B65F4FEF793AD1C2D5E56B8419C3DAECC36A88864492
2FD54ED4783078358BEB3D4FBFC6FEC637F609940590841734F5CE209F205C91
7C515F8999ECB7F2A95C7D2E788DCCB634515BBC5A2D79FBEAD616FCB6500488
F91ECABD365455886D61FBF2F398BCB5317E46485E289367F084F9B36B22A5EC
AB49F5379EED0590D38872466B7BF35CDA7491A1C42980251E0D79776F00957C
ABEC15AA2AE87D6DCB7D73B88D7E4FB07ECE69B6C0929942AD9C5FC1F049A8B9
0EBE28166072DCB9B8D04A0C1ECB445B93B8C1B9F3C2A813264E38C37EB91B1E
80BC591C1BBA90EBC332A954A8E83F88523BDCBE8C808D6DB88AFD2132498304
DE01F67878446DECD390A1363AED4FC4D2640CF3C96BD643D9F8794FB5522847
9F3CB789AAABF5120AB381CB985C1F6FB58EF62662C4E2BAFD08D96630A4FF4B
26A95BB1F29554744FBB52A470289F158DA7C844BB4D31F81E7D3FA2629792D8
ECFD0CF8EF118622949DA61F08B66BCC69594B0B69CA83F8B295585B91050D3C
40D77381F3241D94073741D2599A5A5FFE055749F10604A0E430D140967D7F1E
F6EF38314443D7792C25164D0C106E36082507B7559E22271A19E8323509F82E
F62FD9889F4820A911AB0FBA3C014215EE1EAE7A5DE9CFA691277E3769580F2A
1AD1B705AB89830D6326469A09161BB9BED15F4B635E560150CED3D87903C70F
A97DACAB25DB39C18A1077EE6DF9F83DC9F099BA16F274C486774B1DCFAABA8D
FFBE3BE8297795DD6F64374238F5BF9B02C8CCD708ECA855092D0A8F0A3AED55
14DCF04EEE1C2B5840CD11AA9817E082BA60359D5CD3F4BE6977939ED380A7EE
99E93921E5A934722E9CADBCBDEC37FB2EE97F5290CCA3469EBED639033DA987
E10545776327B188E5C9B74E868FD355BAF70270F6DB5AA9237FD2F6F5FC0BCB
7F316B287D9D2D0DFEC8B2E0D08204A5401A30DC1390178F5CE2A9705C8BFE00
B29B97CB8EE41D88FDDD8AC4F72D85C38BA77FCCE89999D6F3067E6C73DE6DF6
49052EDBB70BB67489D59A5235CCB77C8B598722ECC79546540D57810D32A753
0D1D2E60980985F223C7CCCF120297C7981C25E3C081E2786A3FCEC2751F785C
6D4A33751A2B3592FCD4606DEF84F8AADED364745E7B85319B8232602122CA1F
8761F83F692F13203A2CE3106E3E42083906E89AC2BA9E90C046B70D40F66914
C5751BAA23BD565C4D12255256AB64410E21B02F21329A631B1EA82A0C847ADC
C518BAF91C1F3195AEE08F5F7D028994D206A95B44420987346683EBC386D7EC
A7BF601F4031A011B0E61227334153FDF6FB05D3E9EAB885AD762FDA83116165
440F6A22A7F0998E5A2469A71005565A15E53E8DDA281B92C06C8B204D9B1067
206E16FE04856E72F64D8E7EAD3AED03B773FF85FB941FF3B149FC868B223A5B
F33B354AA65039873982114B6C839C65BA1FF11BE53973DC20098EA8788D45B9
B5F3FB5FFF9615FC6DB413FC4AC2E974467E0FFB308F2FBFC2AF61C3081B4411
3EF08067D331643CA5C55A376E555E91177C8DA93E7360017DD4BA7AA7A24832
E0DAB36195D1B0ABE8BF0ADCBEB857A71DC5E6C5E1637FF9ECF7BC560B0D37D0
FDBE5632C095BEC30F91BCCBE632268A40950DC9624BFD7F4F69D91984949910
E41101FE9B946DF7D61CD3620CA7950AC732145AB8E92E5333AC6E7FE4E0D7B1
509835746094C18474E384DE0CEA9481F06111699F1609F31C0AFDE54DAD30DB
04B8EC3CD49FD72A1E5BE5B547FE53BDE9E15D9D64D230C83AD08AAF77D12A22
631A78F0083963DBE742311FE4BE2626CEB80B454FA4763168D04D8DD47845F6
0C3B44EC0C7F959D8265F19AA9BF097F43E61C15BAAB5630EBE28AF800DF7209
B4C7E9AB86417DFF7872BFC10EF4A17D1ED17761E256BC43859D4888752163AA
C2A12C7690EBC0AA06E4B52001AE10D121E8CB8EF41A8CC1BD9FC999A3FE1A7F
C41303AFBBDA03503FB5D56F65231557D954BA9FB68C6D53B2A12CD3FF1DE99C
5787A39ECBBD0EF26A72AAF3CB89284EFE7518423E8D967EE00F979A6B2E2382
31404F018BDB52C450F460586B916A0336E79564E4CB4F09BB395404C70F73A3
10AA299AA2D0233F54BE9C09B06FD164E4B2D4FD56EFB7CF8AB0EB735BDCBD7C
622422AF5943F88F57EC3785732402C93A552B1DC56796C26C672CDE646B25F5
1AF21851D56CC6503E1EA69C911DDAB8D025878AC44DB91FCF1506B6B6C03C48
66359B839D4B8B134BE192E9477FD403588411DCAC24C06A607D2A5FFFD3B419
03C24A3EA06DD72F759AD74D7FCE64A887E7984684EB7E065E27ECA17880EC05
C0187AB3F877CF1DFB9BFA186ECC4E82D4CF8E6F48146C5E01127CEEC1C9D39B
EE7E3DD42AC25A829A2A1B2BB91ACDA8134A12926B271916DF74482BF1F4F69F
42F493083AE18A2E877FE6FA9001AAFB3661B2A592FE5B08297C67BC8835C453
4514F41AD74C04CA36A10E727FCB7214D64CA14D84191EB8DD972A66C1FA42E6
CBE60B83020D4322A7C9FD1BA9B201B4A982C8DB774E385E40FB6D01D68D792A
E660ACB62E18A1F5C19334C09716ACCD7CD1493637D002E96CCB81F4DAD89CC3
531C0D4C6EC39ADE17F24470C46F0DCDFBA868F704E37BD9EBD162D85802156C
D644F23D0785BA3B1FC6057DBFC2B0085C495E3049D306D076B4BE3268C3C360
0633C3D570AD015DA0E1EFAAD7BECC7ABEE0837CDA3BB38D937C3C1AC4E9A7A7
598101771AA66CFB7FE69A2A129925568D46A1D78B32AAD25FF8CC50B803AB5F
52886E1501D9C05A928D8F8B2A48349E276322DCD1008ADA97D80AAB8A48C957
078AF97A8EDA0AEB40CA220FF6B8537E07BF522B519FC3B5EDB857E529C7E754
66DF0E33F27D8F95D855EA3F69AC2B34B35C01B43BC7DC5A97AECAFA6BCB9525
C6EB65B7A47610DF20AB537D3998A9CC55080369CAF96CBE225B93A0D7B4D28B
29B12B56391B211247A6ECAD409E6FE1B0852ECE75EA223FAB8FC9CD54496479
C8CEA64841297DC4090BD2530C78477B73497BF0D88B89F7327A22FCA20B5A36
1A5FEBBBEF1F5F856A8C34BC6B1DFB6BF0B0FE14DE6C3D57866DB2514A946A90
E33A1EA33A7D58995B62065F65FFBAD4AD07E7F60BEA3A01DE3CC77F2B66B906
C3FE06AD244DEEEF565D19B8E8DA7698AB4491C03EEEFA9F858EFED685D9EC64
C0A8905D25A8489F4C3E2922A05F2C4C726BEA5BF4A2832F9530CE76CB7DB901
7858A14F36495811D8DE59045DCC161AAAC6F9F14D32DF7E1446CB7E5BCDF341
6F99278546201E8B281983742EBFCE213C21EEEB2CC62421E4B139C7D35E22A9
D1FBA64A750E7CAEF8F1569FA2D27FD48C07E1DD62BEEF3CCBB5E92700ACEC9D
12A10AB0B1265445C5BBEE3D3882E9A0ACF24B8A0E85C167EC9E5EB271586AB0
A9EB3094AA6DD959C87DA3E033710819183AFE51105AFE68A6E5422ED3D10137
0D826903E1FFF8CE020F90FCBCCB60C28B6148433F9434A5068B9C9962AB5821
E7B0CAFFBD6A5D1FF1BB71C47F1AE86C9F21377BD6C7F97D9D55CBAAC29E1CEC
196CDCD95E942A61987C6B59F111E1A9BC9A07E663F42A42174B921529C9944A
4E6FDB5776DFDC8D929E557707267CB6E58FD3DB0137287349D2B822C2A9F961
7FB0F42733A08E910FB3196478CD064DC84E1E3D85F3F0C72566AB49E2286BC2
A003AB3C41548384C3BC66B94C1BC6860A27696F4A52493F4228864368D6F088
77A2F2E480713470461A47FE5C41E767998BFDBB9D9EC707C276261A68D995AE
2ADFEA72ED2B367FB83A291C32F8FFB41978BABA936014055D1043EAEC5F227E
D67BF078C6CE138444DC039E98AF27024529FC9EB524221E8CEE6C0AAAF294E4
06E2D40686C5E1B02034A11471F861D19FD2468A78BAF9DAC59D1B98A02C952B
8AE6CBBB47517D0A899924B6F29F5874C2E622FF37A143D78C29A61B7BB1CCC3
B070F85FAD60491464D80FD9842B8316DA606B30B0E4B725699B4F9F33FD4E42
8FDB937987A2CE92D7FA1A6DC9EB366D6888615AC5B37A8EF8EC76CC480E8B7E
D6C21C5970B66DC9E13E66EF0F9ABD74EE1B400D5C2917CAB0962932A173EE66
218A4CFE763D6D1CDCFAB227BE55A9D0B12CD224BFBF22080F7386BCA54F14DB
003C5D21197F12DE9A7F4E67A620387107CE8B0AB426AE2FE9C0213961EC6D14
FCB74290DFD92ECBABF5C9F41932438A4A934ED0C9581FE272D64E855E74809D
DD7B33475E49893E49C5DB20CCCB1D7FE234C44B0A03C6812104EA16F0C48E73
6DFDC902BA5D1E10D7A600E8C48C8F3EED7C4AC53C77CC494FF5F70F9C639F24
AEA80F5FAC6CF1845717EEA764B34555D5BD99AE2C0EE869E39372E34E3FF57B
2959AF8C63D44F59EB973711F90E9E0C975D1E676396CC93A77CEC202BCF7EF9
0CF79C3963923CC8F51BCFE5FBFEC30241A8A7558208732C57A21C357B306F83
576718820E3045D7C6337A27F58864CA08155326438EE3E3CCA4A943D7AAC641
7E96A3488840C120AD63014C2C26B06A974A074C76C7B8FC52AFC52B3E5E3EFE
BC4F961CEA0D3EF5C04DC68D73E9A0E70211B0B6DC9260EBAE9E124077D1E4C0
FA024B938F63E682CAAA219352C2382F1E3B18AA2D4D2D64FE9321FB1DE3FD4C
85CDFC4B03BED9C4C8EB661D824F5C469838172FB00C82D5F57DAC295C5C22E2
C83A4BF317E11E0682A4B2C3627CFE8CD86B259FCFEF9568AE9CBAB307A808D0
29DD89F3D4D1A0DF6DD22AABDF3BB4AD4E957D58D8244D1A6FE577D8CA3A70DE
2663D10CDCDE770287CC9ED87E068B4396A3B8150E253D069955102C1167B9A1
800B30D106B696505DE95BCBBF7350AAF9E65C01638757E208F1BE4ABA91404A
CCE3F55865F40BD197A7837DDB0133464496B83AB2730A59FA19EABCD0075216
C54A7B3B71F8057A354030F21D052D710469FE6F900427B9618A855C4A217770
4055FE500683E5FA7827F8728F199464F013AC5EE692447B09A385DA130C3934
1B00BBF100D19009C7027BBB4EB4756693FADE3FF89A67F3D834921D25F55292
F74FDD6EBEDFB3AAC67966D92B213E2F060185F35D3024F6636DEED3632D0E27
0A209C1A5FD9023F18B3CBA4BCEB0FCA7BF5F61197F2437DF710C554468482C8
61D18142144D77BAB27C8F743C415DDB1782B646157BF5C047527E1543A93778
A857DEC58AF977C8D70836E5F2FD4EC79FEF874B66E20014DF45CA7AC1C981E8
B4C17404C44CC666C4D3DFEA1B9874555183077B0885DD42A40D83D012C3BDD8
8AC7AE6F1DD70051CF6ADE0F789820E52D777CC2E3485830D7A39B658041CD46
5D2B7DEA0657B7ED9333A86FE2B2538495776F19F8454D63D6D7B84C077C3407
7D0A51EE0FF0E3DFDBBF24227265A1351E984683F2FBE50407CDE11481379418
AD0284C6940FE4C35FFA442D33DD939DF065CDEBCD039D82D01387AC5E62AB97
1AA5CE7B6806EE52E6F7608C6184D433618C353FC68A77014365D1CB35A90CD4
4553CB9AA57D9561A001BC500458B1CAF3A3D103FBC174CBA4764D56F19FE09B
30513CD9E3007814C4D160A8BC08E6CF7F84D15BDBBB2FA7E9BD18AAB7FDB8CF
6E03C2C1BA9545AAAED556C4702C9A50F419F4152BE0C881AC23191B736A88F2
2FA5F20591AA887BDAFE7D193714F0FF29DE7774642CBB01A1CDFD00EF67624C
DEDF48628CFEA479817535C1DDBC4D1D632C45E06A9236F59260C112B8B4AEC9
F3413CDC57DF948E5F82C2397F59E8C20A161F13D40F608EB4F44FC3FA98C0B7
4132544B1AC05670E9072DCB56351D3ED037D1600EE7B3CB5F1AC5B70CA34038
FA90B1DDC5252AF4300CA0BD0D023314A2CD2AC6B4E37B0A89DCC73AA6C866F2
85F88B0CC9508AFAEE8DC0352D1560EE5A2DF285BC9F1217E1F5768999317341
C36F30E99796BD9C0B8A9C2F8A8E282B9AA8892F14CCAC3A328F9C3AA409CC7D
3AD48696068281DEB81A7EA3C60143505BDF0D01829C94E92B3806485A38145F
5DA6FD7DD99141831A5F5FAC95679D9C77B42720BC47D29BD70E2268BFD0E066
D9BEB8AF0D6034B01CFD3FE9117BB75F52415579B2E6C19ABC3C1A8CD10021A0
3A067076D4CBF8FAA09383320220C4A0BC8C92D4DF8A8CE41BA3EF32F943CFDC
02371CDB31EDADD5FBED8583D71EE252FD1208A8D6F6B3BE28254CB52AB299FF
91B93A21CC21972F13D49DBF2E797F73A00E2CBBBDCFB3A1FC24D25A83FF68C6
5F3AA4282ECEB4119811D94A83F31035CB4F28F9E4265FAA8259CFC7BB7A8525
E63280388C7783E963B6A4874404FB948296D94EB5DA0144E7C1BB1696358853
4506ADEC961407BE85A873F9907545D8B3C8E8BA285BF529FFFE3800E2D5BC87
F063C10BC2DC853DCBD1F5EAAD3D221BEB4432597791715139367BD6EC8F5D2D
E69138617A49C20D469E8ECFE5E244C8C74C31706D890B42655D8DE45AAA8081
622FA5A9FAA0A856D5993504D547422EB533A7F046C372AFCF6EB41D3BCF9412
0FF5CF356E3598DE16A1DFEDD9680563B8F2D50F7261F0F4BB160E316D8265EA
D7EC570BD515F153F16865F0FEADBC0E2868F9F1402A3FCD7416A456128054C9
679317B56822FD66936DC58806F5F40A44510C63B0B8715130F7DC0528FF7A90
0A63E3AA520A7EBEB97F49FF422A15DFC548BAAE8B76EF8F3B330F1AAA69E59F
903A471080B83EFB4950275C177AD33E37EBF1DD9FEE436BB1005035E8BAE428
85D830D3652904A517E6875AF27AE2AD7715C8D532050553899A1950AB1221DE
6326F3811F1948589F2CB64F824454AD1F96DD1D601DD319B558811EF9F2AD04
77F2B91400F4F04BC6FBB40CC3393915A20F9CCA69DC5C39CA9646B0A61C5B21
E1B1D7057DC4EF02057DCD5F1C708AF98916C3DF9EF9CD7C9623CD02C59334B7
29CCA58EF3412AA1FD3D1E1E5D6627D97AA26E34386FBE012E49932F8D1FC8A9
DF02EAFE9618AD9DF0B51142C8B82344FE51EC8C360C705F1E8147B91CCF944D
AF094290B767230DE115B5142DC4FB757291842CA08B77F3C9CE3F5B7D5E1AF7
F896B1782CBA755078333F9339C5A283BD35068D3C1355CCD86753A4BEB397A4
DAB35FF0738C600E9F7FFF00B515E7B05D4FB7332BCECFC2ACE29F33EFB8AC67
4CE5058E852109E7A038AAE647C3A029D7BB9E31932B0C4F0894D9CC69C69456
5C1E2725AAF27682CEE376B4BBE25D1435DEDCFB7F837842367BA33D596A0EAB
078EC0FB2C47106295B7186E9087D5854047E256E6C072C4F6481984D13C24CB
1E1925206F9A1CFA4B5AD73E2F5B7902D11EBABA9F93DBC07605DE4EF40E46E8
C4933AC9BE11E4A89B909865887D4EF8AA7A49FCC33AB96F9909237C93D170C3
3E683B843BD7DD3E962C4729FA8C63673ADCBF373E2DB631AF77E7C40891096A
A1CBC8815791F9B9E3BD23ECD2B91CE3E00054442E5CBFC82FCC3835AED502C2
B8C7DBCC25DBD97B070CA8421B87BDF40D08872F27B6564A3DC8C8E10E3E9547
206EDD877F4058BC70030D82E9A7DFCC102651F8BF3D1781598FC25E29C6BBFA
BD453C0FA7C85DF05467E44D511BA5450E06EB24AF4934B0C3208B12CB6DA8DC
E38246532ACADBE3B1D3B0C3EC471A81FEC58B11DD49AC68C77F5524F864DA85
D78FA6C18F2969266EAB80643154A39F7EB1C089647F6298CAF1B227B9BB43FB
E14437A0C0E074F8DF6BC161BA4C1C46FAC1B4ACE6A48391326CC76E19C0EE2C
751DD140561FA38012DA30ABD714C477356D85F8F84CF1EB6AF4663CA2FC0984
F63E3F9E4AAF1D857CC30C6E9170D11BEA2B0970987A9B2FE09AD7F4808BC5FF
5CDBE85C92A7B0AB2B19BA6FCC4859DC2A6DA76680AA91D7AC01E5186125FA07
FE731033FDD8421049F34E411D802FF2DF9A4CAF44A6B12DF853BF66F09DE06B
58D28414F9924EF2B55342741535AC4D4D58C4E206C967E3361D44EEA48BCA88
74F33F4D063A971814DD8CFB18C404D7C743FDF50C2AE25E7F2994A812B13D9D
C7A76AE3BE5F613CA01545A8DC570F49E07E7772A66C6F06C5F5B33298681430
D3EC05D9DEA7D1AB69A1F1573612FB26FD90C95C3B392829E670219AC95EC24C
F6118814929B1FE79109E776A8B75485BCD16D864DAC54C30D10E50D147FB182
A50029409E3C5F68C7F27AAD
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY6
%!PS-AdobeFont-1.0: CMSY6 003.002
%%Title: CMSY6
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY6.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY6 known{/CMSY6 findfont dup/UniqueID known{dup
/UniqueID get 5096647 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY6 def
/FontBBox {-4 -948 1329 786 }readonly def
/UniqueID 5096647 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY6.) readonly def
/FullName (CMSY6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D6AE353EAB9DBA0D
4335868937E3A2D0F9C8A4FBEAE138AE56EF84665582DDEF7B546714518D224A
F91D19409EC600924626D79F58E272E3657E631C06412F9D42732B6AE0A93D81
E2B13A81C76CC37FCA6DB35A1C6A572EFFEC7E1581C57B1D22EAE9C407771F40
71D002A06A6AC249FCB7605C902A76EB298B05E39D543A63332A91B8A1ACE05B
F902540FEC1024680B8D5857E4931D00781747C87ADCC45430B5462EA480BE50
D07C5C9EA0D8D6447324434CF0D637BB13037B6E1C48F191C52CF2B9511690B5
405280D5C825BD376EF12429837CD44BEA223DC8E199D8F85856C0FD551471CA
B30481FAE99B71FAA56B639F549F449F2CA6F5450AADEAD4C09595A7A8530D12
B23E012978225E112D23BD1D48DB097994A9D5EC707216D2BF5DF8B69E66ADBF
DBDA4737737F51EB7A38A4207BB46456A8117067748659D654B1D14849F14920
E57462ECFF602A181700A346C1E95131C6F1C66132915FFD999FD4105AFFE7D6
7DA46DFCC4FE53265B14D7326F5A44A3E97902CCB106AE99ED6434AA9EEE7E6F
60B8034EF80DF885FC63DFACB0AD1C00BE56F79B1AD41B065C59A35073B450F3
7E6BC7B90C9D9337F9636943ED701398E6886947E126F1E12D74C5E4B5CF06EA
E60F9B121B9B15E6752B127CCB9C26017A84BE6DD918AFE46DBF27BC06E66AD9
830BF2D6CA9E24A0199DD3E732405F3210C97C9BD21545B5E4DC10E17C1A2C71
851ED2B272055831A6F95864137C218E555B054BE3616820FE671E5BC08E7A48
D683ACDB91E05F469C0C8919D71027E179F4911E878F8D13F999C63C4EC2C21D
ADE1A11979B539C4C5746AA157A4EB4A7A153BC5D966197A7FF6A2DA3FDB161A
EF43C2D906C617868617E72163D5B0BC29C36A60867C120A02E08264231FD46C
1D3B62622A05129188D818E2AE83FB2770DF1D466CA38A49D15F9056BB7AB8BF
D7DEB2E3B3A8157B59D138787B21CE3B3A456E230CFEC1374AC66B7DBBE788FD
5182DA23264093CEF60D5BB0073AEDB68A61ECF1C69669244A1FA0CBA44DB83F
352AEE6012082B8A3FD62F4497B1BE0E4FF77FF94BF221212D63BC1E35B9758F
2D7F8FA002751DC0380AB954331E9AABA6C122F8F3D7E69CE8A6B359184F0531
6B158ACF34C64C32F4671D430820B36C9A9397E9C877D734B17C3BBD8A88CE2B
9F96D7AC5B8D55415E942D6C05392D03DAE53449F8FBE2225C91F228704BE9A1
ECC568FB2E90C73F2F7AFA62859C35F0FB26756DE719BEA5A3EB81A6481507F1
813CD1680EBFCF612FD9D3AA4B90688521446FABD5C54CAFE7B879F24B54449D
2B30738B137B5E212B34BC5384BC2216A5D13F761D6E13A043DB2AABC0276705
5C80CA394A8179D60DCA4651CE8B0A477165FF48A31BEC6B7C0852C9D72E11BE
FEC5E4B984DFDE90218C105999E070FC83F1716D13389B5EEAE3F26C82FE9A7D
3C67A98027D15DAD791348A21DD922C71145D287C7EA83B225377744BBB0082C
22FD44E1B0DF60956DB9C4790F4E2F81C477DD4CA9F4BBB4287914EBBB4F6E36
976C9E573496A2311E5C7677FBC4BB755B8BF925F291DE0442FBB8921402A487
ECF23EC556C3FD66158727B10B74C778FA91EC16629F6E949624D265FA6FDF1F
772E965A2C30C80AEEDC4A1867AE3D6D116BCE0F96D1A0C5138F294CC7C2AD72
8BE152B314E26422FA2DDDFA89A054CEFC6607D932FACB035FC9FD9959C4A468
CAC0F4DD41DFB83297EFFE36C352CA0A6B1485BF8433522BBBCCF9C73FB7334D
1CFC92348F91C4D0EAD90B22BAC6B27D21CDF5AE65C056BDE3B30424F76C8EFE
D7CDBC854B13EAEE0485CC348AC52F5345B7545B4FFC60B6E7CEF8D32354B233
8DF503A03F5201EC012AA67157F4A47B902D269A060A5B8E10A37CA7CAAFD417
1A13EED9533BD4A6E8845D7D236CB254D40930C273EA4372E0B13912B2CE9261
275D51D202D461FD69AE352E95F72D61683267D4951BB602A0BACEAFF9516F3A
C30EFFF3ACC08AD374A730287B148FE8E168089D239E1084E0F7D83CB9815031
5428874FA4640E1C216514AA16C74BD2B9A95EFD7B6B0C575A5D5B3AD1086CE7
E8EEE33490CDCF2E3FBAEDC984FE53D033987580E75E74E455E44496E186349A
DE4B5125F69BF79936565986B3D91E6A25CE6E1C4527FE22580A39805A91BF6B
90EFC8AD31FBA71FCC90EA04875B5A7ED05BA2FFD1C04774E1ECE84B4105ABBA
798C339FB61ABF75C6FD3F24BC775A7FDBDD87BACCB9A86B4D928917CA62C0B8
56343CAE0051A1172E7F234001A5FAA947CAF382FBF23E57F1144425713423E4
4FC1AE1D096D10D6FECAA6A9186B0D519F51D06CC976A65A37E9219492E6218A
FE9F99700C0D0D18BC48632268DA0F0CC24BE660E30645E7F63B0AD49CCA26EA
CEDE4DED685DBD38F5C4BB6AD6CDFEBED1B14A456C27C448C91CBF6337FB3632
7B9A565874F9849FC5E22C5A0437AF29E2B7FA405CF6B7AFEF66AE7449E89746
66ED2D4C15A36C45C0F64E6F185B808FC788984C230B4BA63204B38C309F2DE2
2937A92C184077F5252C9D6171EC6378273C32B61CF65E4DC124B321A4049294
BB6CDD064D4E07605DA5FFB7B3B0A55A09D26C8624F03D8C197885BFF0A20B77
257637447F628A4A642F6F92019F9ECA5B2DBCEDA63C05E5258C9DF131EDD1B2
B4B04E7A5441035163BC2769B79C89ECFDF071E3517C59A45C9E97800724E1F5
FDF504E2798FA9074A37B210B1C24DCC0B78263E2297ECA31D5C258BDD92D2DD
8C53DD3B3BC3835E5AF52311EF0AACD6DCD159C45743B1AE7EE5A0111DCC9193
441FB81F945D219DFF26BF50D80606DD3392CE941242CBAEA45077FBE6AD78E3
0DF4FA54CC33CAC27A337FF307F14E60D1FA48FB8368E307441D6811676CFD38
094A558CBF0B92503014BB169E345C27C74543CDA9E8134F85AA0DCE45EAF612
1AB1D86FFB5E13CBDE8E0F68B19E30D0D9F5F0A3EF2A84AEE4D7F1F63A045297
3F5C3080F313B32066E0C209C2708636C33A6531F1A483F3AFDFEA62305EF41E
C55594660133146B24184070B87C22EE5B80D66C409076D733245FD100E936D4
E844D8A15CF45C0CD6AB04F3B5FCB0BC7B1517BAF21CED4D6CCC3F19D21BABC5
FFA9768D77A41BC3F5C4595D868F2FCA88D6E41558FA5A70FB562E4EB22651A3
886F0ED1B46BFFF297A28ED67BAA28A1302BC866AA7A73418BADE0870872CE0A
305A5E46BE0CF6B5794539B8509F1E2DB4E40124D72201589BC4B55ABA2F5C40
E167175C7F7378203C949B8967E8CCC40F44A2D1D555A4273733874265542C0A
3C47FF7144C4DB276320150FD5CF453A505BD3BC1E98738A1CBE175574037D47
8EF9F80622F57DF4DAB8FB13004ED1DBBFB4664F8D7ADCCBD529B22235740EB1
216799B2D8CEC7CC4D16D8273B6AEEA427D480AA6E3C463F46763864856713DB
05307CE674714CAC8351410627B8D1087155F3788E744158F3428A767CDC9769
CFBE28A30D635D7C4FC44E43E7F13128A867389FD66CFAE939AE2745055BE71A
AA7A7817E24D38773771C77328F4A755C872AA977C062A3BF7EBCD6DEBC7746E
70346293A661684D3988A5D0B29860E6789FA8911E0C0749ADCB9A6B053B0E31
3D490B9A2982CFC167001648FDF96D040BEFDB75A4EB90E2974927BF38F10E78
17FFB9DF2A65CF56C1F63544662CEA0E88A5141F990DF6B5DA79CEB5B4744083
C4697EB37422BF120332AB934D292CE8A3624E2C8FE6862C2211254558459BAB
D8F1D8C76C604098701163703FAED0BB298396C86A0427106C007A7CDBB0AC8E
35F39B240F8D9D43C1BCECAB622C02E721A323383973B61DB81115E3552E4260
9F252F18E01C1EA2B0A1DED4BA50A5822D10AC7ABD664C460A4022BA910804E2
2094A3AE0F2AE375FB22CBD35CE9C2542C240A79BC6A79F1135E58985837E1CC
1E5D6666BC5D61FE6EF590316F9D1E80C42B9A7B6106D8B7F575447AACBB2660
2C96D7F024FFE3292611E82CFE62D95646B92CEF6F03EEFCB3F6950A22B0997E
52C38B55B77C2EE7A4D047F27ADEC6BF0BC639589FD0D1E0A47C948AB5BADA43
9846CBB5B1CE53E96622B59133303AA0F559A481E50382A2A38C98C1A56D9AD1
1668FDDBB1FE8068DCE68E5DA13C2D9918D1FEC7F69A6DDD3A29E31A57B7BDDA
EAC616202162DCC7B9DC52AF821A9C1D2D7F860A2F294904A55499432C7098CA
BF79B1B0A1527B99A4C57673AF54297BA822AF200FFBDEC475158AD6ECB55F87
555012ACFBDD0EA527CB5793CA7CACE2FD956F30D7A8AC7F6A98979BE4BD744F
BB84A87668E3DE62A814B92D3139981200D5ADA86C5D733CF5107DF6CB5C999F
F6F63ABEBC9694F0F67EC632BA8C58E715D92FD6BDD056F29753BCC3E54B0A7E
63EC33F7A29740EF0D8351B5897B126FB6C33E9A33CC83DAB91691690B8B9598
FD3F397FAD45555CF5FB9CD80879A0CAC1CD8E8D536F05134B21FA4065452DE4
BC8F63C82A3C34A01D00F4BB254F2AD7F6171EFFF6D7BE1213C9456AB383C568
BEC17694C545B98E8AD734D0522FEC92EB3182DDDAC54740AD352E7645D08B4D
CB4DA9B381D36C920C77869619855B4CF730E590B0405CD25884D6DB4D49F1E3
D79EC4D0489514359CABED492BD751104091A661A510F268EC681F818780F304
D960A15E583F354DD574767B860C57CC9CCA991E710576C626EA909C6677057A
C409AEE846B4D5C0535F849F33470FA395CCF5C05CBB9A1FB62CF656F7A2AA42
34730F786153A9856C337112F6A555A70EFA76404E2B88DA2DB91E8A2BC5A05C
CC339DCA364A87738B60497CB790EF16875CBC506695DC7D70C6ACCDB2A00555
3877A013482D55281C83BB630CB3EFB0657E5490176CF23420B97265B22B4CFE
1DF9E0B294F064F5160540EF3A452641C82E347A96514E4063A7FF16832736A8
6F21F6881E269CA09FB66DF37CAE7FF46D6B9AE42B6396EBF9A7A06453A81EBD
808B047421B0F88F62B3FF217542FBDA872D03A476FBC7C0D658C03AF70ABB40
03F1A3027E0FE186A22AD461835877ECF843C0E8B8340306092FBC5E91783A48
E010EBD29F114BC273BDC53D2C94275F8956A74561813AA6C2D896CB3F6E13E3
30F6C230C00917A40EC6F4689B65BEE32F5722BB1D1147585AB3B3D2D5EB8273
CBE30D1C6CA1BCC4BEA9B87A014E7ED3CE53D13ACC8D426267CD3BFB8497E1DC
C51CEB14F9CFB4D4BC9D6EA5A49DC3871DE59C89F855F079299F45D363F78634
493829329E3F370D117DEAA18E7A6989C515667C2229779B9A5494DF0B4109E7
71D79D379FA7B408A4675FA3DE17ED0ED632F9A443527CDA8E960411AD4070EE
173ABBFAF9101BE92BE59707F98419503A85AC58B949E8595D66D7B13B8FD4EF
11B28FCB5955C5F147BD7FA141AE0CA2ABCB1CAF82FE22D3281852205087CF45
549F4D5B47F52AF50E8F6FA0AEC0F95FD0B1EBDCF965BC8A924CE0F4598AC546
C15CEE4EDE7E6DD0E5FEC3A531B944CEA406DBEE21C4CF3384A79D0D5CD51BD8
AA5B8B1FC987AEB57E86D3C6FDFADF998A6D6043449FA5B88BB2DCBF2945A513
AD7ECD01B39BE46A577437E1774C3FEA176287C51ACCA15909E987B5AC2CA664
709AA5605EA89A8DCE6B4014CFA781E822E8B05F377BD0187D5EAA0585A98E2D
6726C471578295D824D1FBFE89F04A67F1A360D799CDF92C1218F29C24DE22CB
C6B625D044404C22C89C433715BD77D0BF171030BA84E292B7A81E2FD99D4E67
BA702C2EFA11D4461D833E74E97C9E295C6D170DB6BD73D615D03E678B0296C0
F8BF99321767684127625942B4C3241BD0608460C81D97FA658BC179917B5065
74A4D1F729CEB1D51C82F9C90F0C712917AC482D413ED7CAAFD545508652DACC
1A03842E354F734C5FCEC8C7BEA4C69B066DBC83BFAA473D0A632DA2CEDF20B7
6C7C83B4AE2AF7E05AA2C081BB6870AE38848F3870DD62C7D56EF1CCDD4BA3B0
32C61ABE629BBC464BBAB06AA0202772C16D82427ABAB4830ACEA267B0109A81
BA5D832731D1E9C9F0552BEF7A9B7AAA73760C6A09B910009BA9D93F1A56298B
A43A32D43CAA3988643DE373FF47C176CE92D7931601F0034E6CC303876498AC
026BB32D2F656A3541815697CBA2B6D527B69816161B2E13171E073D7CD85435
3D32708391F63D592B71D98805CD19978C2BAF780CB124372EEA0A3DAB537683
DC74F9E9EF98843F170FB086AEFD526CB81A7CC88046C52E1E56EB40F6F5C75A
FE9D5ADE49E82078858072F68BCD02487EBAF4E3F7F309628C1FDCD4B01F7D00
E1AE0A7CD3455953FFC77EEDCC5B5ECB1FA583064EC17132A3C12C0153C4B87D
AA57FF73AD33C22C81C545F0593DC7EF438FF7A5F76A04E52848E00CF2C8CB06
F295B1CD3BDB1D9E4EDD765D3753EA8DB76DAACAD75CEAC866FC4CA41501200F
F12998E8DA573786AA9A7232287A6D19A12536026BA4423EF0B6D81D38BDCD9D
2BEF15BCF32824F8EE802B461F52BD926A5BEB2E6CB31AF83E98E849D4339FFF
95419941B12D2F3B76CCD34D6B78B91BDFA5DB4D4879501DF3E514A5EA8F1713
E96330C5B4F1B7BA42D42F05E229FC303AE00E954A81F9BD43016F5930A0C490
6C753157E4355F6ED3C5D1963779EB27402522B5E9D459206B3A06E594DF198B
785F96B96E13045594EB42EF4A8BFE0DFCB4C5A2DA9594431FBE72A5AE18991A
36FEB5FD9E8B238B3A095939B6ECAF5644BCE7DFFD8EA3E723F66B305F142B71
B26F34E0538E4B58C4B5984883C6B08F3D1F596B56578FFB0EDFFE3F95E3B6AB
63CEFA183A5A49F07F0F7559994F56D7305139D06AC8DF9466E715D90AECB1E2
C35E3CD3F387579B3C9CA6F5BD741A7A5D7B63FC0130AF374124DC8C6AFA4FAC
E40BD5923FE889E87126FB22C1AC4FFBD351F884D70803BBE1BD0D40D3CDA0DA
F6984C373D3174358BC41C8DD4A215283ECCBC24F345FE65E316F24940198A6C
3B5483129706AEB60D6C0CCE0DF9C130593475C72A92662A323EA5B689E5AD0F
C949536875C37AA2517281A36A1C1D5650AC96E0CC00C03266E279B54232A1E6
E6697196A4270E1DC794D8DBDF0690372AE19121B85FFD357E965228C66BBE6B
D2E55533F7A1BF30B2EABBAC98CE35C619556CF9F0A522E8EFE4BE3EC61FDFE4
E364608963C928AA8B302B1636DE15C83711C8FA060C5BBB1BCB8E02215A4F4D
560DBC4A235F6F07EFD20ABAFEDE0795AA3932556D6AE3F6EB8FD0C1C509FAA2
55CCC2703661C9F48233B429F020E01C1F3B8090D331C3B925DD5D1CF9D19F95
6B192C593225B5186109D3E6636E87BA6F24EFEACD1F06A29DB1D1F4DE0D0253
87641AA4A1113755D0DDA6EE4234CD9AF550DF63A46FC6F698E623BBF6F05278
858904B415033C1A33B7770D99247815E2A8F1216EB42EF9742EEB4E1D90EC3E
F2C0661DFDD996CE1FD66F946B9D4FFADF86861CF8EDCD570CB400D181697747
83F38B92B1803874C24AF99C66E5F966B0E72B725FFBC6172341596D8AE51C3C
4676A65E4D32F499FB1ED170554DA7AFD79DE5953988516A8B2B123FA207BC49
D80645DFB16A79549BD5E41606D80424DBFD6F5BA1DF0EC271C596EBB4FD0B84
DC5EEC45C3FF598241368442A3FB06B460C7D46678069011FFAA3072402D4DD2
3DA6139A548FA99A68AC61134087071ED8B4A37A0A8A1A3B48A2A8CCAA351D75
1828BA7DD5B7758A43F98F4D449ECB58B20B26C40B35AC82623961CD892B5DE3
777908625E1A91DDE62DEBB2EE5EA3CAD7E089F421DF613D976660D547CCB02B
3C6B01F009299124A78E46BDFFC3F2497C435678B4DFF0E94094B0DD3B930E62
909CED0E31BE64C98755D78874558FFBF20A9CB007FABA7E405259E681AFEEE6
3B5ED57F935F48031D298898D63C57EC31E30AD0B03C9AE6A26D54A9CEE0F8D1
9D3EC2644F19740405E4C7E164BCB18F952A2932521B06D2A75B5C88156681D3
FBF2E56BE19DB289A417ABC9EF5F2C2F51CE4E7F82B0A5DC8A9DFD546548836B
7245060B35EC39027174090A2E19DFA781D1DCCF39FD8B88955157A9223EBB48
C0DD363200C1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI6
%!PS-AdobeFont-1.0: CMMI6 003.002
%%Title: CMMI6
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI6.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI6 known{/CMMI6 findfont dup/UniqueID known{dup
/UniqueID get 5087381 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI6 def
/FontBBox {11 -250 1241 750 }readonly def
/UniqueID 5087381 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI6.) readonly def
/FullName (CMMI6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 70 /F put
dup 71 /G put
dup 105 /i put
dup 107 /k put
dup 108 /l put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFB83E8A2A6085DA11
61B1632328B94B21D3CBF2E7752D441A2C9A03F6681FDAB37C4B67D5857720F7
0C4BCEE266586738012A2237A85FCD0425DA7E8E8632543F5BD5D50F9DBAAE69
9E053AECA6027559DE42F7291EB381D866F1293107553809861D43508C6F2341
5E4FCC431AF4A9B3660386AE63E877DCF5E513D0D5702B98D58B34897FEE163A
75CD6F5A2196F91CE5060CA5E72F9C5F79D18F242EEE58135BFAB02D5CA430B6
D1B9A376849751A45E52577B1810C4F0C7F6C8196071D5B08FDB731C5384CCBF
03B460347E0CAC959E4A12620B6C2ED62E06A241D1637F418B5599A7FF3C1390
7AF66A00F7C31B4EDF249C56C268EC9D546CD0489DA51B734C8292CE7B3D9E30
71448C85ACC64FA99B2DEA91AA4CBCBBB9DE20833700AF96395DEEDA3FEB7D6E
D6E3BE4A62CBFA18BD0471C14F3A2FD025C88E8166A9830C5B5B94624A3D6482
D1A1D83805D0EDAC1C79EA858A523D9FA3356DF42BC01886E77F6AA6B04E4E3F
AD107D861FC626F0A439BC3F125D48649E5101BF79C71507FDACACBBB4C4335B
C41A5C15ADF1DF69E1D68C3EB9BE30BDD5385F81D26EC8F2F206C1C7032B9EB7
0392BBCA23B4693686AF8D2E1ACB2FBEE81D75667CD1DDB906BC5B675660ABA4
E63429F16623F20B6A040E4942107CCA26CF6C1F52DEED9EC7EB15BE4F18F2E3
9ABDEEAAEA9AC41E9F20C37C54B33F609F5835AE5A1EC9D674DC50FAFF6D3511
2198195590F62B3B8A6FC8C3431BB8895A2F910F0361062DE32CDA9A7F41E761
B09BD8545CAA2D7124B5688B54705AA52E4716E36C0303FEAD38E0510B3CB496
6C30B115C37E02043D47B4ED796C671E30360800EC13F0F0FF3E0DBF5A642396
EB0F39A9DAF0974678EA1D041F08BD73867065DA91B044EF2AB15FAA6546031E
189936C1FD302BCFBE55EAF369DBA4895DD0996BF7292762551A86C8A3604E9A
8AD29E38BF6FD40172051EBE7C694249F3378ED0139D37EEA3ADB66F3A80A1D9
9C3655F054CACE93BA4AD42DC78A03F42455ED1BD5C122F234F21ACEB8FEFF9E
3BFE0DB2DA6D368478299ED63912A234ADB1DCCF1E519AD20772B71F8522B5DB
24E9658BDC1333D76F07F63D81F7A51D12C445ABF698092A24E5E5C36A52206C
0C41F7DCA529BB0A4D146DB6B4B341459FC17FFA357CA5F93DBCF30B61374613
4846D619423BCAC59B7EB40C14C70ABD985754A0094C98350D01FE9FA371B0F4
38884690DC7700C49236EF68BD6E806E8937AD8B77648F552C0C907007465A76
1475BDD3FBE1CF69C706E703226471C249A3448F81C240ADBE4B5474216D0235
6B0816BB6935A2704E851E20C002F85B653BB0700915B358DDC168ED3FAE3D91
8280A5CA5C2708D622B03DC47A70E5FFCAD5A7C8D9AD563857BBEF92A3BDB588
8B5B55CC9B960F20CA4AEB598DA8488004DEDBC9671488011E836D9D8B6251BF
256D08E6F1808E9D498449DF1F18E48B310D561D4DD3146C2BA64D960E66447F
6DA8B07194E3BFAF662C00737BB7222B55A5CC206A1C46F252ACF93D2063BABE
2BAB874C01AEC438D3F86AE37C9D7FCE4077F5B5785E12C1E0B685134CE2E8A2
2E4DCDDAED2D53D13014E428FAAE22447763D4693E82600F850CA4A49E1ADC5D
C8DFC16E97B9F6164095CF7F31373B591F815621F45DFF77BFBF89EF60C9F50F
0C2FBBA4EA9602E197B9447FAB6AB57B19B1C801DAB66BF7D263F6572B9EEF88
E06744C1FE197B8EAA71E1EB67716B7CAB30C859A2D1B2DB95ECED02B83FBA32
E62F97EE4403FADEC936CC8DAA161F7B509B2723BA2B735572A80D7D087E6395
6A9D34D5963E3C6E37F307C66D1CE551D2F055BFCC7360FBE93ACAFDE2B1A849
37FD373F62BB23C1A2E3DF61C9452A8C995B03D44D6210A968C6293B4A3BE662
C7B0B59E6EF6D53FD293B2C290436B0C448E7D15A63533DE321643E53C85EF8B
060C434E46A736EA617EA00D185323460E77B95C49070B035194A2E7693C3B15
104ED7F56FCADABE49F27F9A576B354C574B5BAFFFC57FE9AF02FBD87B8874A1
24C53826659BEB1EC50446AC26EF3A95877ED3D81D33A8BC1BF7473FB9C11ABA
0F27B38EEBDF77D3D3EA63AE6022DB0D4F1125DF274B86EF0A4A263E108D6044
7A885F5E87362293A53F457CBA6C911D23653DA7CE4BB7D4FF4481AB97C0DD81
C13515F0E3BF8A7E8DE2CE69B25BA9C185D9BF31A65DD290B0D4FDF40B61E2D9
AF92BC6468B3F5AB5D5B88710C489ACC69198D697055B39AB3DE8B3733825C5E
6E763E2698574381A01352A7042A36EA96D17DD2EEEAFF04ABF7BF7D877B0FC7
B6BA51BA994D431F472B6EC4B4C327399576470A1773BCBAC61CDBF0F95DA6A5
0BE5239B7E9CD39E1E4D27EF6695D1FB56D4CA2C2370509547D6D01273CBE6E0
66A696C35D2D0282CB8C85D7B1C51453A0AD0BC80E1D183D11AA78879643D9D9
A3D0B2BD8EE3EDF29483CC5871426232A20CB058EEBDAAED85378B163425C270
B0F7BB46B7D1B89CF84E6A06791195FB17F11F34A2548FE424DE10E376B39A2F
DD9B0BA2F2FDF3ED4AACBD0D60E67C0749D6DCBDE6E79041398DF3FC8D9B6CFC
693B870683CC425C52705902DFD324E157C9829F25B14A057AA92AFA17F156FB
0BA949698EAA0657B03D9538288D887959EF24A427EE7EDE47F304A1A6A715FA
2966273831B5B3A9C11021C153E67A73FA606FE3233C3DB217404C6AED6A4C59
DD4C2A98B31AF5604D8DE8354448B4CEC66022E756B0056CD32E9B002ADC712C
0545C2C16D9457E271D98A4ED7DDE01BBD1856F5C3DA28794D2C7951FE2FE6D9
18643CEEC41CA4A3464D3D3A102653CD6EAADA59CDD44918523B8811C2ECCABA
AC0D188F5E07B37AFD56006B10B32EDD179F4DA693EEBF4DF5425D996585F21C
8780A4D23D24FB0618C12DE65CAD42A0138E28A100257978EDCAD168C55C6F07
78A067F0299890356C2A184820A554FB07448395ECE36C45211757552E288ED3
7DFE46CB92EB2070442AFC85864A45000C4854D728096AD3D4C552EFC26DB6B9
C340358451B50AF9F1B35C2E32D495DE85B5848D78940270DEFC07A14D960730
878B5B55916FB40FD805116C9C2AC8C6D4645DA67A978F1C6FE705EC188DBF7B
FE7AD6769F2EEC4A9B05306D5BCD6EC3A240D6A29ED07D1D82E697DC8CC391AA
015DB6BCD1DA5C9A5A7BE3C5936681215E859E9837027D108A54F42AB24E38C2
4A7D8CF3264AE049D4B1AF48BBC564BCC88AF19D37DD81CCC431D0C554DF29A6
94ABDF8126EE4FE1DFB78559B9BF36FAFEC9791049C865694F9E2FFB7A308FEB
EF0195FAA6BFE7A081B65C5125623903828372F117EE17E588B2FA26DC9AE37D
9A6F0043C019624D3D87AFDB4B90C46AEA78919CEF5D7ACEE316F30EA0229742
55E02E0E2533CAD78CE9BD6E0260A695D776ABA229D89CF9BEA92CE0397821A8
830A557021B3B90CE0B07A4B34C24337FA3FA4A3728B6E013BA01071CA7FA667
6FFB4BA3A28B5D5614ACD4E80E00938C2589CC6CF885A260AF7589240BF8987B
20A19FDAC73FAEEDD93EBCB3D46F735214164AFAF1A7828FE96E2BF7CE1EA46E
FC1FC4527A0ADF2B81CA51E3D96F3E786511AF00FDDD9764CD3178362CF9DEE5
F05D100EC21A301F40FEFC3EF05AFEC140A9466AE68FCFD6CAC1A143BAF2B7BF
D0DF808F0CF87FE2399CD9D2DD424227CA7D4073ED002CD555FBE8057A797B60
313D18ECDD779FA7289D4E7BF82D95A7535CE3F0F4164AF239AC666653736654
C13E436B526EC5A1DC97E1D85C4EB563C7061AE1E81F0B38BC45B17C15FDB0DA
E5F6332721A925D4DD5A97BFF3E3F11D4F4F43BAE4E73A294D314527397F03CE
AFD12DDF9D07DAD8D6C8EFAFC2F52E20FBF62026810C0C31A1EF71FBD612654D
C68B7A24112F0ABDD20EFF3DADBE447AF9CE568F873ACE72B63283CB26B89BED
4B3315F26084453B1EB0877065A76E7B704B27F93DBEB365574A78E92FDB4B82
D6ED91A1728F571FC9CAB636A6E81D0C1C4F5E3F6F4574B6EED48BB61EFDDC80
1831E2AB9327B37881F0CA5D5265575F210BF4BCD8653B4193F74E3FF65028F9
2968B8127C68CA2919DDF529EC882EE99901146CA629A07B4DC59E7868DBE083
6E546C5769655EF6628FE2EA78AC891D130108192053D5056A7BD06C09592AF9
6310B3586A2609DB94CB0079550358F5547B9FBB2B77917A327EFE3F972C7263
54076627B4DD74638C3105FB25DA246484799D5326EE80503F18672B893289CB
1FFF8D3F662FB33E93025D86803551A8A1DE363D1534BFA3EF968871B19FB189
DAD841C177E2AC98B6B69A78048221C5EBBBB86511939D3A9963B3BF021185AB
0B26CA7D0A779DC2F7693C7E48286BD60EE46615E31B93FB0E6992AE20C792A4
72AD6FFAD6682D0F606807D7AE63A6280B5967FAB889DCDF0F76347CE302FAED
A59E1B1AB785D9D0ED695A0D05DD3DF0EF0B275AFCF9EC7031E1357E99A3DB85
B4D137567875F7580E2BEC96B08C97ECB40876000B610E0BFE81E7884C9BBAE6
6BE9C2C612475396BC10EC7FFBD1118A7971FE1971DFD0CB677ECA65DD837B5E
C7D36FE9F20A15A941F1E77C11093C902DF5B7639580B9C0E4AAD13518E1901C
1162FA095F301848770C6C618E371A0AC3463D0D94221EFCC0884B21300194B5
97E03BCD5C4878CEBF352EDD1D2173B56C9B6A08BF3F33419DF226E1633CC5CA
A88A57AA85E21657569916E9B4B79E51B5535A57B2D6FA3EED1D0AA32DC0165B
12F8F5A681040B456D8DF175AD6053A2954F327F4EB4CD453A056FB1701242C2
59755058640C62632C764E002CE928E6B908BB137C28630A3CDBC7C34CF2B643
FFAFF20E345A86F31756C78A8EE2B9B1C5DAB2C863B29A44190770FD90BC6AED
0C25942BBD6A370C21650947B49AC8EB6825BE65DEFAFDDA32007754DFE0273F
B995B8986E505F95E58A3F8873545DDA6F3FFAADE992F3FF7B2DAB76D663280E
CF2BA18BC8871A7C361AA3600B192948CB918FEB0F2900AF2BCF169576828325
449CBF0C7AEDC299FCBB061F491469B9ED1D56771A03F9F202550E17FDB15B51
4772B2F06E6AABA4027D13E8730999532DB2475630D2F8EB98242E36F5B45A94
2D8083014B63A806BB9A01906143482C614B5CFBE8C5354A3F2438B2160F6DC0
81AFCEB201EC67F66DC5808C907A3C6CB664F444D24095D9A11D4978A7B57037
87C67552FD59F5713D0FE03462F9A1A323BB3EFF0AAD61B1792CB109CA9AE4D4
D7F7FBD3FB91258DCFFB4634669FA13E03C0AF699165311CBF37D24378022787
87D1320ECF878F859149B2F994E700A32CB7253297AC58753E4583A08A1F83D5
CBFF10F2D26D71CDB20E1C69A666E9C4D23BB0E6BF1097FBBB204EB736E61FF0
C3FDE1986938F8099694B9F998B3C735770FF21F73B1A6B750498BFD21184F11
5E6AF0F1FBB08EAD436C4AADE1E6B815F5E58988C113B4B2335A340798BFB201
40586D0BCD6AF5A08CE9AA042910197F47D98CBB4411A6D435A46F46B3964F85
032D7F8D880732276A8FD24DA772F642F06C9F3EB4C9090AE4A3AAE67D8768A1
7B2A57E15B7FC626450372F40E3EE28D8D997CCC8CC89C644461D1110740407E
F6D884A0503E05AF830994AD0CEEA924D935749F6EE9F2DD65A58ECD59229918
A303C90E19E9C411FAF24AD5E9B786178F8182692CDD508A4755123B4A594AF1
A8E7287456C1CE2CA485CF4CF9DEE5238AA7328DA204816F98B7EF49EDB30875
3CF8C48E0465BFFA8F2A1CFB6A8F165B63CC80F54C669D02BFD9A0EA0FDE2B40
D69F0101AE4D2C10185AB10953019FE7D373BF40C2F6D4E36693F118866D1267
12BA7987ED4313E8635DA02A4FC1F7815105F8EDFE8004A8801CC1AFA8D123FD
1768A6C39E838BD489C6BEFFD3BDF650DF48D5F8D99DD5A2E8AD235F2CAE8BC9
C13AE9B214CF3FBFAC7BDFA54CB6E675273330608BD35600775FFB2A96FF648E
DF55A78B43CF54CABC0DA8D574CC5C5C62E9D658EC62035EA5028767749E48D5
658212BD39C7E76ED0C6F3E0A1D138A0DB8BE574987AF1E43070F1F12C560009
F48993FAC935EB56A5793BA13C28293601D268B4880F9BC33D553FF3B6A7900D
37900BD3B4B558C84BBAB09B4BC2B14D32E49596DA090E586E28D560903B9744
7D014EF2A6AC4F711A025DBBC841F1C1C93BA1F8327DFE33C803A0993050D590
C7AE262261DB7D04B9DD91F89927161A69E14BB2A48D29578410E312A4793101
B6CD65B298988AB798F45B76E1F58BE24DB207C7E07014E17525B436D41FDB28
D1072CBEB526E17C72DDA00ECDD06394940DEE8BD02CD3C81BFD12BE0568A459
0F53010A0655942C932905FEE87183CE357887E2ED286DC1E89F2F401CDDDFA9
B418F218D4115043892882C09F2E3749D4671E75AB1AD01C78F59FE3F54276D2
A91512C21C68180CCC0E147E834002D7799FF393842CE88BEA714672E1952C9F
7CEF2FD0115B0E292079909A7775769341A7888CE6063537ACFF225B4F396972
41BF46C599D278906F3BCFF81DF941BF5888DE8A53CB0A2D71610CDCDCC1760A
7844F89FCBB892AEA853CF5D967648995559EFE852C95D2EFDA2CF063500F88D
2C83B615618831267BD8F5438DC53C6433CE7347E9C55E103B450EBED6229219
20E979C00B0B9D86345FC3A8EA2B049B7E148A7AA1C859AFE93381DA74CA578F
8FAAB28175D5B57F6A74F9869B2F530009E953913C6925D0045CB2E817A17742
3C5B7574E9BF3BA7B769C161C2496EA2D346B4E19E434120FE92A0ED3F4A9ACC
A8BFE55F04D17DF035D01FC0B06182D8C27B6D32F36551B9AA56D61FB6A34254
D0DF918C6716D8D05B973C8BAD5AD52C06EF3C6503D4E0F7F791511C79AE74E4
4B707612149D583C5D96E534CB45F1E7CA5B23642B1BDBC881FD8E4F66CCEE96
7CC0509B5CFB0B3596682A81E682DAF6AE58F605FD7A1F414F62572298AD8491
B76D0A23B4AC731FB8E7682F506B5CC02F7029827FFD866EF4DBF56E07E7743A
D42CE65B38EBDEA193CE5B172E87DC88452C3DE192E363EB9DBEC4EC65F53002
BE9E94180F73B53CE1E8EE9333DC86DF5FB2561FA1F9B2511962CBEFACA739CC
38A286651CEFBF451FF6568CFFBA8AA68555181147C1CDBA18C4F5C77BA8548D
2B1BA37E05EAF7F69879C3ECBD02783028CB1A8649842EB71023F89CEB36CEEF
A9B04E9ECB0577536B88ECE7C1D81B0D6D5A478F8E92DF83D194759437088D7B
E93C6AFD0CC6D568E60E2F1265A6613F97A6C4068C8EEBA70F6CC4E88A80F65D
EA7B498395390A74BA57221B86611D3EE5DC4632F139CA8A15E5B9D2DC97088D
7CC65197CD93F4803BE4246394F40EDC2CB4904BC273C597F13C8DC680245A3F
F1AF2D7BCE5D69E9CFC81E5E9F46927C5F55C719AFDB2CB1AF2E4D55B0E3ACA8
6BBBCF253CCFF8F02B8542F296CED0EB8A06A88549DC959E22C3D6C48F310452
22B32C44B046A61A4F7F8AED613DCD3C464DB2280D56E517CFD16DC32C83EACC
D3E936D2F3A883B265444D818393E30EE3AA59E6FA73DDC421F5A0FC8442F89D
CCE98189ECADC080F1973E14012C2B87F6A8289D7E1E24B79433A73BE771A305
ACFE83195EFA1EAC827EDBDDA678979C87FAA5768355728EF195A9456C7098D0
9D501CC27070F27AA426B145218C9315AFEE5B4BB37010E988DF32E2D7CBB3F9
F236403EC9325531A6CF39B45B12328C9EDCC6AF76A0DF223531C12CDEC349D2
325D6FAAC3C41E378245A0E017C3352B9CB7F2A1E4AA3D9A44E39D5BCD4C4FB8
7316BC327ABA5D5F5FF14BFAABD822D9433F0FC61DD06BF1493BFD06A184A94E
7EC0C67DAF6DD7825A6CBD56048BE3943949B1CC8EACE24367EB14A7D28DAC9A
22E2DF55C42D244D9DB407A7FFF1BAD2948665E1E90FC92AF5EFE248BC07056F
5352F11301DBADA209D66E6B7272ADCF9C9C7B4BC22FB3F9E0A93AF57FC08663
6A1604265B534680AB860FF5F2FF702423C0EB6E56E0E7DD0D816C25DC7B7CE0
73E2EBEC74AF763000A262532D1B24CAA8B473CC05A7CD120D9F6B2447A38930
3C84FD6466918B9F72C88E51B17B6D8F69AA1D88240826F6D1D9FA162B912654
16CC2075CE1845D367EC6306A9A5E172E2222426FB22B6AF2BBF200D8B9D70A1
AB47482CEDDD4EAE1E5E9D11FFCAA71AE7B312B441B30B10D0634ACA1C6928D4
45F6A26F6DD550BBD41C36AAE0FDF7753583A876EFE588C784A44720EBED6CF4
572B9F25557B337EA9875CC53D8F975B0DCECF63AF7B957005017B3A730D0686
798235E0B93A6477FBC85C9A33CB76BED3EDE4FD86AE3340745678FB5C718EB8
EDE9D932C10D4CEB6D06F3EF9196B2157FAD4D5AB72451831AF9DB5DFD2ED708
D63353EE1036374B31197E141E6475752BB79E93F504E07620721C0DBD89D450
E87E71488F4D57F71E8213A20B7F8FD369497032784830CAB5C192177A147997
0832FC33ABC0E40E32ED1AECA975F649FFB9B94912A773EEA2BE8136ADF370D0
CB71935AE2018F96210B055DA547BBD7322F233D49C3D783974CCF6456202DFB
281EB70294FE27B9318D1C22047BAF9C46FADBE5055DDF3839597176E6446BE3
AF3FCBDEC334675DEC492C0CF1267AFE9C1CC48E6784DC4AF70B512B4C9A6DA4
7FDE41C3119DE400CEAC19FD830EBB8F9A894428CDDB11A3B412300D87F9919B
D1AC18E3B55D3B279AB993349E3657D92798140BD80BEC4EF4FFCCD731E63EA6
AE6CBE0ED3D6FFB32C7FEE9D116E9D87BD8A1884BF07C30AE0DE1459A8C37554
597240DF0750E259879548D4E51AD5A5408EDE91D50CA988011DBF784E6F52E4
C1448D44EAD4AC04254A1D81B3454BC3272B6AF93F1BCCAD9ECB0EA21B75DDA4
14249253436AE57B6C9FAC2F22B3FEBA9D875189CFA2578DC6E3B601E93EE206
832956820BF5173D1BCCC709CA4B122BFD499F9F5DB9BD4BF43FCEFACEC0D385
5F3F8132623AF68C8252C1C8FBC14BB63B2CFEDA69293C6EF74B25A0A9A26B82
8914FBFC40A24461790C910B1D852F11BE10E223EFB5A718524AAE657EFD8A60
0F088414D899ED6B135CCB62000349628F9DE352325E4F4C8425C3748F8EEE4B
398B71534584DF005BF2CF7B56639CDCB945E32CF5806D3DA12A94AD5007E2EA
8550F4CB967EFE29B7926F659842A7B90F8B2188DF64F477C2955D6C890E81A4
4C4FD33B630415252599DD5ED7B4AF434B073D354B050AA6FF3394787C4FB9A8
99375CEE8D7F9A96F78DF2EB9F0E25DE5E0BC6984CC02E58BC2584633F71D5DA
470263106BC069D6C2D5774D71C18E9A6C8A04A81E0A83FC46F9F56392469247
53D3B06A7E62D6B781524511950807EC3B3D63B72D95D18523F662E556FCFAF9
9CC6C2CA7CDFB8702EE971A7919CF85BDB8B5673B8D2F956FCA5B49B4918BA1F
74794421AF3E933C5F7CA6CDFAC8716D7A78C68996B74B58F45B2AFB034C0CEB
CA5E03A25359CC5356747EDE310C5334930A92F20EB14DA7B60FC2EAAA5218D6
B399C44B963C9DECCAAB5D06CD88D680F90229D451A1EF416015847925824F21
91520B3AC7AC377902A35C45CAADD404301C58405AB9C5B6749A8C97FDEA0052
CA80963AEE108ACB6EF2BD1EAF8BF30180EA95AA47A1ACBC4916EC5ECF85D5E9
683DE6AC21C0B8475B3C5138E5057BFE93E9D71DDA8CF4E62C5F435BD3550C2E
425CDCCE05E74433775FFF3187802B089B8BE6E83B09C828808DA0F116E9CB70
6F47903656FE73559F11CBE7B2D2B859819B9F8E0A3154A164046E31CBBB798B
0E25D25C00F2CAE20BF3709B0FE9D0CAC3F736B166006158B60150A1DDF91D17
29E1197B77333E8486E6CE270D650043C2DA9C898C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR6
%!PS-AdobeFont-1.0: CMR6 003.002
%%Title: CMR6
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR6.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR6 known{/CMR6 findfont dup/UniqueID known{dup
/UniqueID get 5000789 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR6 def
/FontBBox {-20 -250 1193 750 }readonly def
/UniqueID 5000789 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR6.) readonly def
/FullName (CMR6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 50 /two put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DAE339BA29C1C6F656
1DEF13780383DAE38A868377CC7D396B2A05F341AEE0F8BD0A0191F51AD11A4D
2E927B848A1EF2BA15CFBE57A51E3AF07598275195C9613041F71C1AF39E61F9
EFD5F6512FBDA76E29DE6B508F62F5CF9F73F5288DF1C7B0B82C92D3B6358BAD
EC3CA20BDE55DAA7CC58004AA86B6CBF8C410D8287E88BF20588A39309C2B703
CED322F030AA6069869064486CA651DA054FF3F5E56534CA358B0829A6B954D8
9103436E6B06DAD1658BD4A95AB41343B01F5866FC87C4EDFC71F1477C98F8E1
1DCF27EF743FF90BF918AB8C4E5AC35841E2F745480E5EDE1C1DEAFAD8D0018D
2C1F1CFCAD9F6609859DEDFD1648A6CD23D8ABB80747F94899F17C8F3E6CA55A
E176F19CDFDAA0D7C920B3A72051A4745560AC81978C92459EEE5AFE85AB247A
32981139CBE352B248F4BE5F73503A084A3E91F05328EE521D9669E44E202584
5407E7846F9FEE3D54EA18FFB144BF2D6803BF65AE402034B3CDBB40DD24217A
3CE0E95E2717CACD603A958187C42B3558AA38D6B6390EEEDD396F96E6041FCF
6F8888221AFA87EAD79F46E0E32CAED91E6C8500879AB6E580C581E8C8CE9B68
2BB5EFE2604E8DCB2432D39D75EE556969F1B2FBDF6A4BC72D106AA7CF22C268
464027898B311613E06E1584707F262F71D9F49D2149306A88E02BC60BBD6BDB
EF41D90F19197BA9AEF32B5E63D5B9FF41B5602F9F786E76621DA54D574981AB
87A72081EA05D6C6BA940EFEBD0904EA4E77BBCE17E20B42E1722617E0F6EF32
F1ACDE9D758594E9C81049CCC10605A27C2A06872FBA9F159CB155609B496ADA
4886F478E44029B5E620DE8319E257697E93E1CDFD27D560E2E4D34507020E2C
D9FF06BFA14E056D81DF701FAC3ACE4BE6C098AE116E079F0044391EC1661F6E
7A93B9320BD7F91E8FD2E8EB3F5CAE997D5CDD35107A1D35302260D1499B8B65
39625B7925F97D917B66BAFEEA992873F07220714F192839948CEA080BDB9A03
77B9DD032273DDB5629CB28B5D8797EDEFDBC601823E038384C90C79012A7D96
8F27784DA15BACE21501C26E3AFA5DCCE81B52B0ABAF71A35D33103EA86F2415
A39A830D559C5C6CA7423945BD3DFA942B20A06D7A8D8671F9831DBB52907AB4
4E54776D29C6085CD9970B6DD21DD3EA8EB09C49CBEC6CDCEEB0BBB1B8827109
3BDE64DDA024D67F098D6C1998506DDFF7907ABAADA1C39C759C850E0C6F8E89
A392D1C9329ACFFA92D361218D75E115F70A47C53B73B356D703E9C499AAD098
AA9C8119EE9E9708A9EA3049E976FA19AD04210D5F6092C7903FD155113F3A3F
269B746560F70970AC9F8D09956E0E84DACE4112C4E7C7F6B3F0B63D26EFF95E
2B2E9699D16BC8AFC4AD9113AA3A974C9E82E877288CF71E9169D2DCC61AAAA6
C536E5604EF0716F6487292BBB677518504B52C63822BED3BD5FD14EB41EE6A8
AD4B6CF90D39F98E12A765B645CBA3E8552FB9A986390212CE119E7C3DD675AC
17BD006144BEC534DA2A860188619F17589008409C5A309CB83FBA70F6446B6E
2B56991B6A03B1DE10C621591CEE45BECA27C54BC8B4F1754A9E8F660812710E
117850E1BB6FD89BB13F8CE391C43DA89EA67E9C3E7A4697790EA26B0E4E2E80
DCA508873A7AFFC11B8C02EF86C2316E8D8B6BCEA37F81A3A87546705F070C3B
9D4D28C366CEBC1EE485B8E2357DBE46E86C87B9939DADA60888AA9F1B92FECC
CC1C198DDB594BB70A8FE690ECAC21A414BAC89BF019F34D2A130F485EAE35B7
2A10C67EA3A48A4D9734759CC93AD85C6A570500AE5AC9973FC76EFA06BF5DDC
26E20E28D16B50957EE01AF2653F8D860817967AA5A9BF9BF7ABCDA710E9F34F
4F0EBCC32B3C9C2971F6225D2DAA6A451366B83F32B2ACB83E746D365B2DE38D
C1AB7447FE7B37F9630E410E5D8F0ECE74DF46C538947B3A167AD9F3E4A7EB3D
60F5425AE75AC3A27D39311DA35696C3DC7282AF1532E7AECE63D13DDA0296A2
01487185FDF1875AEF55A36C17D6A8DD329279D229259463A2F05CB7A874374B
E2320E1F6CFECB9C1CE62FF468C29751ACD9754AF1EABE8E7696C2888914416E
235B6766F20FFBEFF285277B639A51EA2F2E30D207BC891B00F0436008F980E0
9EEE7FB375BB069B9E0BA11DA951A99D8E60B4F920A0495C247FA7DE904765AB
DB5C3B2D634757E43EDD6FAA4DB3C67F82D6853E1170F0B2D8CE496DD4E72B0D
28277BEF172F1402959F64527F9B640619F04416DDB9D05FB2ACD019CB9C119E
E544D24EA6DAC5C69785394EA50E6EC9AAA9E14B904EAF29A733C6D7942B63F4
85729686742F26DEF78DF0DA1CA7CEFBB684F4CAD99021A3B3D1FE03B9C5A4B1
BD04CAC89BB91B11952A2B17A61789BEE0C54B46C03FE9A1AE73D17CF94BA30A
237C29D414C3BCE8E3E2DDF83C0BD59DCB66C4D2C3DE73DA8378F3C6C8035D28
7464399857E57651A53E9C4AA68DFCA91B2376CF98AC5290FDB9BDAD9EF1604E
9B0A70EDDA1E564B6D2456E7BC722454ACA8C4950FDD44B6EB9AD01169A9F845
B06A0DDB7897C847A5B1F42258AECF3807AE936C8F52C3A7A0A85D68160AE442
FE81543DA6702D76AB6E8701F80DFC1D87C961E350D0E52AB2A298B9E5908600
7E14D2A87309043CBF13F69AEAAB1BC239DEA88EB5176624F6046664B1D2691F
FBB2071D3706F97DCCA355A6DCC4D09FD35DC078FBAAF672FFDECEC61050A120
10B5A96629041303FD01ACCC7686165DED6AA712FF8E5E85DE33C4E7D877C49C
6C469A90410BAF60BE65ECD91CDC2EE7AC0CA8BA7B53865F26092BFCAA0BCA77
B80DC51DAD09C93C8DD8E43502B4B68F3D5918C3492196292447732BA90F5AB4
9F5E1D634ADE1CCAAD028DE5EBA9535F6FC5908DBD2D643E0A7E059C8C386FDC
E72659C0033F535C0D7F6B98D0335552D0BF3C6E302B672A5EAADFCEF81912E3
8F54E6FB7EC2B325125159713D0AC50DEE3673B9B148643727E94C80971A2E73
5E1E13237BE69C84FC039DCE02ECE2668AFD047F21A61BB94A9F498C9FE5CDEA
B274B40728B6F6CA9B6C15BAAF92F465B0D7311B46545CBA90D874839443CCB9
3110F052EB247B24B45A3D2FA6FBC7EB2A4BEC2A5892914B3C5EA3F4F9B9DCBF
6F932D95700E045B49E4B1F2C9D2A42CF39CA2F5A2654E6E8E6E92473D28AACD
5E35C6705EA728F704F5996D286BED433F976AB7E018621A577AED7C0AC0A84E
A032FE1869F603E6F20386E3A190A30A21EA886249ECF8CDDE2C33D73BA8647A
3DCA7A8DD9E8EC8D9A415D126BA38B6771C489DFC419303EE9C1B83FBFB3A0B8
97D64F30E4BCBEC24DF603FF3BF541E00D5804B6B6543D3D2B661CC551D497A9
9DFFF535AF424B2F3150BB39AAE8CDB306AAD37767BA10BADB031DC2FAB16955
EE78342CCC0E8B5976BF98F215461A8C6F63EBE6E2F1A1104662DDE53388CB51
8B44F3534853B8095F3B746A2459C2EF800FB1EF7F235EBAA9731E3AB3BE4369
1D3636E3ADD5BDF0C34FA80E90D8A1DDE770943FD196E0A7C5F1FAF6970B34C6
4673AACA6B2B5C12B9608521AE736C1F4B97209B063D991300ED5AF3D7F27E76
68E0B858FD8BFF86581E2B9548C691E3E5D9EC4D39C9715CDE86C7D22223CCEB
8A38C776A30AF14912390A7546DBECECD7A687D4F08646E57A12C80DCA022B7A
33399761A50B8E0ABEFA1163EDEC3DFB5DA3248792EEEDD894872D4E6814B4C3
548BAFCDE0CABBCDB97EC6D1BA47F2E77CC1389BF19D73661749AC33F46A618E
A665A85776545BF9662F2179D7BFD604FA8EF4700591AF3AEC647E27B24B76F3
133F9198DC15C1AED830E737909E43EB91C334C44BA35810007A3888E33F5DA5
B3B2C35481C648AFE630CC3E08F77744E401B2934E407D1EC17ECE737606B076
F8DE8EF3344F57495EF49D11580D6FB28AE0B1422521B320843B13467501CAE2
3DB93D7BB779F73B6AA30050DA74BDBC3F8DBB30F32EAFD07734A151BB2BAED5
C9B1F790059339B64BB4146470F30928C9A49AE88906BD6FDB7431A4B50809CE
0F67ABA01CDCC2320B0B097187B9299E3D80CDD7BB5DD5BFA7B28D924C5633C5
45A23CCEE097C41C3759C1FA8DBA0DD95034BCA89BD23FAC18C70093F40FF2F8
0FAC5DD4835F2DFD40540E9A9E9FD951A8AF2CB766597DE00147B163BACFB7E6
EFDA4DED594F1C746D8B46A1145E0E4058F5917B3F21E9BEBDE745EE72CDCA64
FB31EF7A2E55265F32559480E2B6726D3DE26FFC97EB4E3160F117E890C4B2E5
8DF310E6A728ABA85540F571C024F8DD58E1D7827FE97CED5EB31547EBC36415
02B8C0E10B7E37D816F01D56A364B8552CBFAAA95BC4BDDCFDE91CE0EF005B4B
7AB56FFB47A093AEDF0DE1EA48FC8103CA3CA1470864D2693E360006D05668A8
AA422CCCED20DCEEBEA5CE0DA1EFB00FB93E922B18124FA11A88D0F6E0F719DA
57603DD5DA42E1C56C2FD9E5415AA199D4F334C151C1157E75C107FBBFCEB706
5F4EA47A29B54ED8CAEB8DDA2F53D2A703B95487619780A52DA1270011648A28
AA64338E04AA5B92C1EDF3D8DA34FA6D227A0325EA6F22E9B38B6338C657BB21
CD4C582DC04010330F62923F817E4EDC6E5C0E6500F2A975A8A95BAA30C4A134
BB31B5AC45A2E7F6E9CDFC810D41344C4F606049445F8E93D74271C1E29DF7CB
5459593BA28AECF64D903D3E4D77CF5C04B06DE44A41EE4D9FC769854503AC85
69E4A5106E84016DE3D59865D4AB30BD6C9E45C45DCB5408421CC50CD6179C85
34E55CC70FBD8FEFE9F1D5160664981716E3BC7F24B6F54E0323D9BC4B692971
24419EE62D8B0BA726E2B4294A9A76F328B8101DA29E78BD5C4AC383350FE196
4D42DB1653637D19530124858950C22F1E9CF5BC07D46B7A58CDE19CC88DCD2E
7FE4EEFD8AA6047E919823C8CAB2EF5274F45E861E6508CC11A8AA90AED2403A
B2BF1315C2157B3B50A3685205D93E40906EEE9DE5985405974BCE0B84BB37DB
080A45C5237B269B93C0A7CF294A18B45464A41F604C494CBEF829A381155CFD
71CEEA54CC39EEDB6DF58A9896246B09F95DC6BC40BA6916AAB5ED3D24F66154
3662F8978FC63DA9280FF7ADB09EA5BA79D3B66E0C88BEC1EDD78DA93839073A
A4D7B0E627000C4ABA76C47CCFEE92E319315333A5584A951E34C55412049C4A
A5569FE65A006F77B416E0530AB6A8E7AD6C72340AD4CE25937158FABB2153EA
281E1D840206F5DA38E00815E9081F81DAB9FAA8F4DAB305867AC84735DB4F52
A36129929BD2084A8EA37BB6889695204BF7290B68D5E722540BF8A276F8BB6D
451D582EE59D2FF03F6B97DDE05FA00C3D375D2D0AAC8FE298F85CC067B15481
48D70B6A0354C705715B891915FE8EA45244677B9FCE81E72D66177E309F3F83
F744B9EA9E55C3B30DEC6E5E03B3988FD526A82A5E8E1DC79127FC62B2FA7949
B3AD3148868DE22BD4B5708E32CEAAE6ADEED1F463EAB9692411E18F8D6BF391
126B2700B4CF3B59D02E3F8795130C96285A63FCD1E0F647ACB1D35E9C58BD01
1DD06BABA00CA4343BEBEDBE677E053E9732B33A7495DF51782A07DA07F5646C
770C957AD915CC70BA8E08BE7A1F4E6BA5BB9C603E38F6FB0A2578471C4D02F4
283069856D926B9076EC73AA39CEB0A061AFF1575C7093FDAC9F89C3DC06EA45
06F3C2A3BC9FF21128B10CB758DF0F099B459A5264A8C24C098110D2BA1A8532
8FAE146A91BA7D033F591AB1A94B8A6FE0FFB610F698D216D58B4EF6C87B1524
8037CBB7E23D8550A620341C6625A1A2ECE7CEE2598D66277F857231A36155E3
984F147783E9B93975AC38A29F2FBCF704C8A04AD84C3E04A12D2321FA56811A
5B6744813CCC187968C5C26BB8D3E6615A912FA5369C01CCF8C0DB790593B190
1A90CFB5339B8771F325C5FC448D36C7312B11A15A8635BAB59CF3CAD176131E
026F6E141B2619EF7F3048750CC9291397F141591EEC8B612D6656DD34DB54D6
DBDD303CED74BE76664E7DC86FCFEEF2001C9DBA56418FB61F589566A47AF36E
C94671C5E8939AF9F4D53C0DE7142B7B63C86AAFA65877EBBB48C64589AFB2CB
1280AC099FC48058855CBDEB6C2D2A0D092267996591DC3B5EC8252984E9B27D
2E9EDE8CD8303F0905DBFCAE497DE1B755B924452CDE11CF4F20893DD6FF7251
427F520FE00580DAF1703FD968E0F8ECCDE618E1EA5820EE6CFED97C78864EF6
26FAFEEE194A268F24249D44829AA360D731C34DC285501E966A959180718F72
6330E4CC060588A2F65AE64A720DCAA818D49D4440F5D0B6C1F6C3A107E12445
F1BED2D3FCBB87A9597F01C7332AA79143564056219BF87D4B907A04F77621AD
054935E883B2B137D3D1C4BC792E8335CA08B6D83227F35736C41312A0BB077A
60FC6488C5E02FD51A10AC113D4EF70038C649C1677B2204A77F2ECBE9B3C341
F4126BECBCA61E3F3801F9188A3775924A62D30FB096B440286FA655EBA00A74
9A4162904BEA07CE68EE76018346DEEE20839C9A2FF71179B58E1D4AB30856B5
F5D97295A097174467010B15D733AAC5813CAA633746B430B1AAF9F997FDAAFD
436844D1A56B8E25A89D2CC4BA6EE7ABD167818FD4F6C747E07B262C99EE2C35
323F0B471586CA50F54C6381B052B15B0C58C19DEA82C0CA29F00400B727419B
2379979CDCBFA966AD513FA903160C571C3BF1BA239540B11EF2371A3880837C
6D6CA2F374280CFA1586427AE975A2AEC34244874E4D441DBAC6CD1828841C91
069AA87FAE849C5DC7C9EC1B9876E59F3CCDF8BB23D939F5348D7486934BFB02
CC5A22541ED352616830A510DE7732E5D8F7E785BBD31C2BC9D348CE5632654D
2C1740F89D57FB2AA1FD8FA3304EA03F757BB8F498ED98E48485722E78D97B12
A05F3A28438084D1CF90AC4C3FFCD7B3365941C45E1E02CB13CA1E99F7FA1D00
1C9D489D5C95F019AB4CE89FA3B6604473DBD2CE8E278969E0A0FCBCE68C23F6
9381882443D3FC16966555FC222F3FC4B1207522201AB7A15A7A6F22CDC9D392
360BF4C95DAD35770E0AC7E5EFF015F2C74ED7391F40EC94B8D1C163B5DEE5B3
911A20C2625AD3B24BD94D2A42405E655DA47D3F94F882CA2F479437B4E0BE71
8AFA4482C6FB270F8D05B4599A01403DAAA90C01DF3AA7C2BC7E66AB6AA833AD
FB6E5EE13E45CC7CE7E200FBFE639F9CFFF5D08512C02764997FD28368969BFB
0876F236EF6189BE73AD827332DF1B2EADEAC0ED3B939CE5BC3CEC78975FC636
44FCBC2CCF4396AC7343EC62E0E4F3DFFA2B880BF31D93ADFE201BE9CCEC8BA5
0B9B919E05B851E0909968DA259EECC6AA0743F25247978CC09C28C4F878E29A
5070E4023BCE95FE0ACCCC01D0EE219FA8344E8F6D7D4347563BF8AC030B9097
41F24D4BC9494915A82EE9FD37FBB6A46BF077B728FB569B1258CEA5F51F36BE
4F4D0F890D782E44748CA3FE8C8A515998371D9C7D2311F192B4B7E7C68FC6EE
3F7136714C282A2570FE591F247A08319CE9EF1E43274E4E57166E31A2ECA506
85350DA31AA4C33C9687F5210BA225EA1007C444FBFA2126769767E47A967884
9F68589E4BAA9ED32A7A466DE35554C132810C68ABDAE536D9D884352F28EA02
8A555D2CE11F30598F44A65E2D86B43ECCBDEED9E4E5B5B7DCDA20EAA09D9FF7
422FC91F2201431A9E8FC624FF44D26C0100183D77BC7E6B1A6CFBD3FA8BABC1
AE4CB0FD382E26BE0A83169B46D91429DCB746A0326243E212F802AF6A56C709
6E70C6C7CC93119675040346B0FF1754C1EAC3D277DFCB3B457EBF747976F09C
FBED73EBD70DE1B4511B333D0A064072AF92CD595E4B66E150F51686961387A7
8C1E733A9234F74E23B0DEEB17C20A85CE6EFECD73EA579E4C65E46AECA75D44
7EF831A2F5E431F7080616989DB05EFEFBF1A4BA2513C3B35C401D46077581FD
BAAE5DFD79A1C774758DA84ADDC69238CD07BD5107962CE5C709F3230835D9F2
C67DFBC034462889A228AB3FB8BDCE2FE2BE4B8D3A62CC1F94C555DD262B1BB3
2D669FCBCE76487A0DA75DC60935C3D8CA367CE35D2407C08EA00BF9F37378D1
954AD5DA5918301C94B4ABDEBF2D072866F6DCB55F3715E5E8F7C0DC56BC10B2
40446434BD460C2C9A619E2E02968E71DC13F231A3A822D40A4F4A156AAA2FB4
EAC4C5331F61057CEB789948959ED4F35FE0A756CC3F906C6D689BAE9431BF3D
CACCC9655250A3104DEA41B64D8ACD649CBFF096078A87B1A0DDB702AFE2F4F7
1E6968FED8F50BC167ECF736B96A7AD0A94183AB6A3DA0149D0C613B9C9250F9
C06B27009C989782685FB1E0574AF6EADAC2B8BA0A37BC69B806AC53F3E292FA
E7A41215FC8A125BDA9EC5BD6B9BE23DAFCD75744BEC896F4DF98E7149DFFCDC
B4583AD97C8FCC5140BD7B91D56FFCC7FB00D4A3B886B496798AFDFF2C70E50E
527836EB740565B0F5A64918414B93FC4237D37660650648
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR8
%!PS-AdobeFont-1.0: CMR8 003.002
%%Title: CMR8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR8 known{/CMR8 findfont dup/UniqueID known{dup
/UniqueID get 5000791 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR8 def
/FontBBox {-36 -250 1070 750 }readonly def
/UniqueID 5000791 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR8.) readonly def
/FullName (CMR8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
dup 61 /equal put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9928A7C95D3A6E9B
8E92F84CA0AA44461D2F4FA0F8B81C6F5B7BE98C9712BE166610465CF689DFAF
27C875C029C0116DE61C21DA0092D029E7DBEDFDDEE3D67E6936623AB53FA2AF
18BEDDD7AC19A19CADB6ED6CA7A26E6044BE414FFF59C0B98D5819A6B881F9AB
7AD0D03BDD5CD309C67811D5CF0B93F6FDC9AE64F74ED4E81F2E18D880BD842A
DAFD0BDF06300201C6946087FC0B999447BC370200BFB8CA420B668B32EBC242
6DB1546A7164CF55B332FE9D239B65F532B69EF9F4F93828A44C8F5C526126F8
B7A369114CA68D4F98638121F4E17F351723D9F1A902FCF087F94AFD23876517
2D15B482AF2D68C3F31FFA864E031596E597882578AC7FB0DAE2A713B065B374
3E2E72519ED6D50CBCA40A7275A7109A4F3ED8A4566AD8832890D3D1F4899850
9B757442B7EA355175CD5D6D8B4152ED2D7EEB4CE30F174FF672140354046A45
7098EC45B9DF3DF5CF7B417E201DA88308CEF4CED8E8903AF24FB8DD0187352D
25738519ECBC70304F8F620CC45D2586619205DA3955696FAFFE2082402B3502
CB682F410DE5FFE80A4DA3D3BCF02E35BD577D0DE55E7B8A33B7A2FD5136B5DD
A0BCB61F8E7F4363C21F890CF287304DDB8FCE7FE207C0D160B81E7EA662BED2
DFF8C444E19C91E72254257CD87240A70F1A964FA54ED9ECF27E27A57DACC3DE
EABB92C085030870C6CF5C40B6E47F5C0AEB30E84A73ECDABB2D754EF6EA28BB
16EBD6636BC288E62F4A38BFB55F5F4DD20FDD77D767F6CB52F9513E8EB75413
07F1877B2C01278675177499E4E8EB09F2657821613F5C7643FC064293EC6E9E
B519FFAEEA36B19C9D1302CF91FCBF87FCB57C5F995CB6712BB3D8681EB6F05B
B2A4195A3C73CB4ABCCFB958EAC533BD89560D2790CDE1444C0F2E4EF27A529C
F01052964E56F6D76A190E5FF45934BB711A3406284AF130D4DC0D8112BB3752
762CA0200CA262359D4F54C0CCFA9A50DE18C7DB14419E2990ADDC4A54B94978
D9174CA39434022FA77FB30179EF805E2189C35919F5EBE215EE2A00B4407826
CE56329C5586D8B414770BA5D45513C3AF1931D632FCE69B4CA504944E03362C
74A1177C6398A61A12DAA0F156543E2A8E9969C4308B7ACC21A5ECAC8F172541
1B1316A88C0C163E574FFD3CD22FF08488662FCF2F9344BC25D02146F36CA6F9
E2D0130C654B7485EEA9A110A33AA0C769121F81821E9A2BD062FAC158359D44
3F9D9947200EF1EDDD5860F10438B162A69683957300C75AF7546C70C97AB2EE
37EAAF0089E2623F787F252569B06C665FDB45EC9681C0774ACFBA76B98C4E89
7EB12AA5F8798FFC110B49C25E3A483ABE83B0BCC6DF0578403ADC369E013762
C9D08FC94D949BAE636ACA9F36F4E3F02296775A062077B011A705B6F1784D36
A926622CB3847533D7ACB24A4EBABB14593B5D8E1DAE2BFEF8A51835C8D4E76D
7543C126A4271C59A5881A5AF89331694F84489CA66725995DC3070F306EA447
CF30F63CD476A46D528EC1FFBFB8EACFA2BEEDCF54C92CE2BD26DEA5827186BD
3A4D1709415CEE7D51D671357B4A5D11E835F63521B9824EE5282E58F05A8ACC
FD249461181A38C2F47BAC4E79BE368D64F886AA493C61CBCB2ED401C8AFBA61
59CA6F6216D941A92AC52ACB3D7ECC28D6A58EF4CC70BA6DE23E80937AB38E89
6F05FDD15B954C0826636267EDAF9F2BB466BF79D2E10EED9B04297E6BC93069
79581ADD1A9D9FAE9306F46AC95B98C60A2E53D60CF1AA4069BE301E17E25070
F98DD67BD8642B1D07571A32766072E48BF27E1576FFEED300D7313A358A823B
49C8F135961B7E259095C9BB67F996CE0B90E95344F203922F47E11753F70D38
2ECB615403490310CEE6C03AFA97DA2F47ED47125D110FA69725BA0018F6A40B
29A307FDB3E52322A77A0102E6F57654CF1E96A134D13860D83AFA0A41112D3F
2247A09ACF7D06713BE443FA27C7E7220E875965D53030FE7D2D62EFD2F1DB87
5FB091FEAF599BA8C5167525899E578AB341BFE2BC4E53A047093168AE189237
EA55F055514EFA939DAE9E859CB5FBCF37D99484F44FE5AA5FA386B28BB642F5
5DBAF059A50FE96C7C6D834531D64F1F2E99AB2E96EE74D149178B1C0618495E
293973D9A03E1790654B67C0882376ABEC17D74785B3737D81644F28B3BC6FFF
F92FE29126995A07E0BC5EF3A4B93789A103C428943E045B8D1A5063AE71E806
568D48072E53DEA85253B01DF0BB7367A6BE4DD7BE514AD74E3F77C825ABA405
64DAFA25EAFF8F63344B5F6B523629776CEB090B546469F6A6008DE43072DD3C
DEF51F62731037D1FBD0C038A1E9B669849EB3BEBA281624F13D20B61917A109
A0A7871A73F7BAA18077360B38A4625C5DB9AB9E43BDEEB856FD0E2D3AA2E075
267B978B9EB47F2369302E87DBD5D5B422830BEC32411FE75D584C58650EFB1D
136FEB92B94BF8939FD63AFB7349C7511E5E46AA7324F8B1FFCA9C2A9E9720C0
A720918E8E860F137567D386AC29870FD990BD69465B3A3D2A0ECF2753578AD7
80DC87EBB319EB5AFE0B6F6FF8616EA30C51425FE3ECBC5F8D0B0BEFDEF32FA7
D168B4E85C804B7326A0942CFDE732B1171C643452B7099B31649CA2C38B62FB
46EBDF7180004C549B53F88021D029452C2B37D8C565BCDB0B11541039A13C0A
E45D4B68C7907B8BF08C6F41F564B62BB554235D50330E78DD02795516D969C9
66119D718798120442CB7EB9877FF84EC69DAE25F8559DCE3BD8042959F695F8
2F99845B1B5680DDCF181D806CC4903E077D1FF5E60918EB34C0B1E028422B71
CA63EFBF3F4F3CD813CE831EB54265A555BDD35AD7D723F9CFBDAB29C54F8AFF
2D35C6A3299E0A2DB470C7B141B1E3E10DABB7873AE302926BA8743278FAA8C0
DC6174501D6A289CF980A3F55F2DD5C3A514E7E7F13133C35D2697D64C25130C
DB78FC997968D6B3BC929E8A31B6D212C5128E4412632BC52B3A1049F7F2F61B
C74AE9A6AD19B9E2E240617E2882F7D29ED3A4279439107AF9AEBEE47CE85DE5
CE9595A96A118ACF1EB1F5929930321AF7732E351E18C6AD378508E37B4C327B
0E06AAE21278AFA9255AFE5C022034DA2968D260879B4B38E7EE2E11A593DC3F
CE71ABA050C004473324CAB6F3C50E85DEDA3E9A27388D8FD3A8F6E42A79670E
F7549CFAD4CCB337A6E0BAA4846ABCA059F1E1933CF11DC0FFBFF550CC4A1B47
CF7BCE0875FA747AA854534960F757884505A5AEE0330179A9547A4AE3E68479
7A457DE83326DC30B67F27CFD4AB697601CEE352F72F0966B3CEE3EA24683BEF
6D23AD51B8432C3F0DD0D0F80791E1091F38988B7A54E466A9AC7810DE8B7893
6B0AA6356597891D56190A7660BC7F657BC559E0525D41EC228078F2FBF89C6C
72D666DAD838CBF0861FBF0A1D4ECC069AA49DFBAE5C56B781A1D5D79DAAC256
13E3F9B928A2394FC71691E4355642764459714412D6F8EF803FC5F7353822DE
6CCBB8FBE5AA1F2C7F4D384039D85E7728527DF9FE0239E2CF8BCB7411C000B7
1FE660AE6A2A19229E5E8776CC83EFF3C27403935756463EB4721C51FE0B1197
86C2F17842A0FB639F28083DFD4F1E86D7D3BEFA922514ABF489C5CCE93D6F72
D2EAAE14F6CBA2BE4BBE7D7EA8EA19DB3A87350D4A52064137C3D15A5B05B03B
70B1DA7328D10713B83974C390C3270AF5A9A47C0BFBFABB9F31063B0CCFBB10
0F236C74446688198EFF039110F6FF42FA9F82D463AD3958B5FD205BDF85DE20
FE3F0C7AEEF350AEE6DBC1DE2E2DA4F4599956F59D6F121F7086DC120416E180
52DBBC4E56C09746938698860F30007091E1CC0351B43990E47208ED495310F5
7BA9C6AB3CA10A3F1B318FD47C1CE3B9FF1304321F9623E32D315AA9CE64B35B
F841E6C62B5B2488A311C94937879E5E0E170FA77AF0AC75C5E6E9F3E8F825AA
09C1702682E14FDFA72D27901C5BDE009B1E52E8C4511C6F6336251BD45261F7
401CA3DAE7C4B0CAEB91B9954BF4A97C48ECE7FAD401351D59DDAE9DA94E2335
74A2B880E4749D3D7026CB5299F16C204B6E00A20A6619C34922C7D3FB50F127
3157CFC08DCC5164C8023CD1B6C3556C73CB8E4ADA845339CA9BABA1457ECEE6
ECB9849DF1F0FEBC89E5F97C92978A500196520839CEBA6C0FD2E3D27BB4B4F0
93CB2BB565F4627C6DB62DD0E084E627D69B5DEF42EF094381B62C0D67EFD197
301B132420F51A41561E6106870147E0D597078435BE3819ACF0DE28AD779847
F3D2CF667DA06955D53E0204CEA2935E9E984E76963D3079EC092031E2A10E61
1227E5EE6770DD4D745A52655369EBA06A19BD7D95BBA271E488241199D1008E
36EA99F8DFD2A9F87B06B070158B466AA4C6EA3BA77DB0F853F0BF9A304EA291
34069714368E0B94DFCBA3BE5EDB6C8204DFA7EAF5C3406F60A7056407D1BF6C
CB85C1F432F97D821F5518BBA79AF8453A568FB2C2D025A70CEC75F46C545011
ACE3A99B2582793BA1DC655230AE2EFD24DE20A01D4A441AFFAB7771F223FA6B
9169849E727E494247F67D6E1EA9DCA06A082FE2094BD548AD7F08B565145634
E7ED832FEC1378306DDC796303392ADB0CBA130B63B38ED57B7828B47732853A
893E8836FE19CCF27002AE92C2B2CACFDF8A42F1B8066E033B965D2E9157FDF8
E1264B40813C1A4CE424274AA3528A4F09B3B53DD4D23789A68B3D17BC1398AE
0ADA2C2168427A49846DE0216908C2FFFEF4F13C1ECA12AD341E238EE46E6DC2
B71B54C52659632911F901660261E493AE2483D64E119D9924489779B62BC9FB
A052E822FD8D83178E09ADC825DF0DA07FCE7AD68EEB29FAA275A13691B4A5A5
B0BC0499CD6307610CD6209583C1152C559A2760823F8DC0B9B990BFFE7B7E9F
3969B968AFEAADB9FC0F1410EBBAA0DB979CF153F0B8C978405F8E6F2B6406D7
AAFBF4A655A15DD6D1E9A7EAE10EF89264659B09283F50B734236885FC09FBE5
98D780012FA77FCB19F15BDC522CC7312546C0730EF5225DEA8C22A3BC6554EF
4FE73B9AEB5C2F7DBD474221760E5F539A064AC450591BCF3499E3968F2CBD6B
F15BA2B37080A4129B66D4C2188524F025414F14DB3F96049A8B0E5EB2BBE7A1
AD64A988FE875FE4FE5186BB4F5DDA16983CB052D474B7D72F3E8965663EB50E
015C72407C3437142D3D7DBC055FA627139488DBC5A0F98D805C2143D99F491A
167E07AF60EC9F17C36289368D740B632CB919A0E74C412B76CE7A5906D5200F
9E79CEB9C65ADA3A0F23E8947E834AE7A329A9F0AA7A6BF545B1D7B4666C6522
CFF268634EA06DB3A82D91A4C0A9B227E79961212881A54A6762C335DE7E0831
130C45D94394D21C049B9D189ED955438C2151514F17BFC67E431DD9A8349202
2F616AEC1C7B19F63D5000EB4771370924BD4B9053FE78B5E4A244B9A149D66D
A8BF3B398396D2233E92E4A5FDC70FAADEADAFD255193D688842DBA865CF6154
C9348D590F3FEB135D4B7BD4D76A52CB140888247CAFAB25ED51F4D187041CA0
ABD956F83A5661CEC171B52AF92F9ADE27973B560C802E1E0FF51C4003D1289A
CDD09F8EDA8AFDFF666D35418CEADF3B0BE298F0D1E5C8E024D6A2017A7E71F3
3A9FEC9930F1118101E040339F9D41379170928DDF5B5875212B271DC843F612
E0C21C67263186E3D6929160464D4D5C8928E14D0845762C36FFBDE548188E20
3B6BAFE5EECA0385142F01216FB8A90C43A472C1D4447FE5C7C78CC088FC72E7
3FAFA062C338BDE8A430FDF1951B107D8D73FF9376FACDE5900BA362C66F8C1D
947F9545C5C13A53E4479B1C1A50472C05E8F8C266C6D4F4EB08E97B3B1BA972
26973B844545089C5732322BCC9A5A8FC972FA0D7DB8BD85D2F515ADE65DA479
0224F7EA2276CFED0B75B2C23AE7377F86F1F6F205D6FE19377D87E782143697
984E731F83CA888199CEB425643C259D4FB8B58DD69A96085198306494BB497E
FE7C9954EF35B679BBE3847A9C73507874F71FC97665E2A58BA41407A1745247
44A79B588D969D11CE4B863CDA655DAA53CEA5C3C263B345E782006CE9831D49
603D2D95DE9E370D617F5928BA416C362BB2B4DEF16A5D44BD24B34257765F3B
6223B3F9B54DAED69A90C7050AB97B06693D253C6894CBD7B497DA449F1D9B7C
D91B421891EC0724F59C82B9CB288DC42F2D2D7A7F22EE3D910E15953D7766AE
276DABED3820390BAF2700C4653E1C77FE63DB71A66D93ED293E25B8412A1EFF
809554BF04ED0DE83F7F190883ED793803CAD2C34A66524D3A580ACDF3C13B22
08F18905E7A4A16DA9ED2A112462FB9FFE481EC2069E484E8BBFC19D594153B7
3DED4C11762223B7586483B06BC164D824D1A6FCAE80A35DE0DB8B33396771DF
76DC5C05578EF1BE00A70BAF3D951A01C87328DB2B0DAD6E1B4C21F37D1BC0C5
A929BDE5EADF20DA60C4DE2E3C151005814F24824D33B95F700E09A0207EB602
3EF60DEB1622B91DB99A855A8F1DA96358F05CFCEDBDDDFC8446AE3391BEEC41
966E594E28D052DD5ADA49DFF65E79540EBE5329DFD86C23CC800F95221B9C18
CBBF941D2FA47EF1EF59A89DB5DD188E75EE94AD2A79E2221107E5992C00D531
2E00B544895A9204656867E3DE9D4CDB64B920B5CCA9A73E6514B36CABAE01BF
94C15603B86780190595560F792E5EF01650074EA4A9BBC6ED284B9AC2020641
DCBCEE0ED27FE58171DFE104EEE4202759E594159DF45113C00236127A46FB35
9EC705F21C0E456C1F0F924594C09AC64D4377C5FEEF764BA4A09ABA8D09DEB1
FC13B0CD202B2F04CF5D73DEAB65C36C2FA7C0DC236BEEF6D23BFFC9C493DC8E
1831F19EEF81EEDD976E43BAC6B5CED13F901DE59835FC75490EA528A72CEB77
24C38B258EC38B9E6B97F85CA8C10D8809BBE55A6FAA12456FCAC786942E123C
06D1E55F7ED04400088BEC968BC5081DC7A1B1B65166E7821679F76694F235FC
6854C8776AF855B83445D9FF919B1D80E98DE0741D06D6C5EEDB3E3EA6392530
F1BA817737D8162F7B3A36AC2A03190CDEC654383E31934C3E0A012B639532C6
26FEBE9B412F1C92D1943B7C18CEF510729D501349644C97F087F2F840074AE6
D8CD0FB2E620FFC908BFCD938B675A0A4A687F7FBE8F3DD06A62D7B6DE7DF3E2
49D367D60B10061EA86CD512F5A1BE8950D83C62695E130128E0037B62552D17
064319BBB9B1FAB9D79705E5D68AAE9B36EA14BF1A59A863BDB8DAD9AB5D7B8A
E30E2B499F952D65877C8E38EDD7DB29F9579D09E629AC188DB6A6403AB4BA3A
D358B3770D727A2B77D84B6C9EC17E29D88E3421F9B7D2D822EB78BB8BB50692
8C46DD6F9BBEF2E848A2B5669B200019802AD19661537A84D3514AEC5AA47445
2C791E01DCEDF18D9506367241255FFADEEA6183F51A9F42448A7DE413C08359
52DAD2A60FD606AFE14702BD3B0EC448720FE63438D020DEDFCDE3582FC31DF1
17B25FC152789D2F17FD60B8209D292D2152DCF8D28B5ADC04F6659BBB746CDF
145163361823CA343763AA951C640B5D4A99B7787105A1609EDD6A596EFC3F6F
2FC33D0D499DBE56C6668E137715D435D6B683E0113647B2765AB0F3D98AC717
5B33C3EDDE18506E73B4E392B022F30480BD30F59B2E3A59D93017296C3156B4
B5722E1955777716388AA987B2665669716F866FE6BDAD5E74A523CC03915F26
9B7B231F5D9B1F61DF7CB01ED3F27070E36547B263855DF5B2E3ABD2ACC440B9
0826E1D9B057F51ACE6BBADF67DC4C0A0F1AE1F8606EE140FB1B2D8843522362
8762E804EDDD847E3201FE5EE8F0F34C37204F4DE795965835323E85D72C6A00
6B418B96DF758C100BEE554C2C53BF9861DCBD735247E87F40C2D96DCB3F97DC
78AB912C76BB1ABD750EAB84C7E590434595E235D4EF39D5872B805C1CEA7EB3
368369B2A98529FB880AEF644E86FBE499DDA7E80AA55CFEA7C6A502ED7E13FB
7D049A71620785E5AD72BC0AE82A34E8B0235367EE050E970A3427942DBF20ED
6CA129B742049747F6A1129B659D6D185D7564168997033FEB96B9F11BA70EFE
91344967B451D0993BACFA317E43570B74B1193F270CE537242023DA14E0869B
DA1A295320574295ACF03E3E3C78D9D6518A4AD6BE618098465A83AC02B3BC30
6B8713E7F719A11991C9E1BF0CEEB87F341617EDF0EC79A0BB8B3037D15F349F
AD7A12A478AD24CAEA5B99CDE735D5796474D6B80FD9B553A5206E1EFF04C281
54B0F730E11E8F66DE4B06857F53EF865B819C92A148EABA93A26124FB8A31A8
BF075A88F9BA3066D0EBF71B15795A7C2F93C91F07748D44E5CA669A5E98ED38
933458D4534AC8843718DF41166A3979D3437666792633FD93185F7A6C7BEF63
8B0EC342ED5687E434EA4B848806F5925BEA00B69979416FC1A802A84DE2A6D2
EED799DB12296483881C80592E5F49ADA03B01F15BA05E0097D28234EF637785
3CBD51
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY8
%!PS-AdobeFont-1.0: CMSY8 003.002
%%Title: CMSY8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY8 known{/CMSY8 findfont dup/UniqueID known{dup
/UniqueID get 5096649 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY8 def
/FontBBox {-30 -955 1185 779 }readonly def
/UniqueID 5096649 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY8.) readonly def
/FullName (CMSY8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 50 /element put
dup 54 /negationslash put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D80B73E7B6CB7548
0E1D77FFC695988391DC44AEED8CC947B3D7E198B9620E2238DB3A2819182F03
14498B8CDFBA48926DA721920B221FB33BC21A8456AF10891403501D0F6415F0
7E041AFFE109F640E54FC1A365674711EFF94E752652A4C8DA62CDB1149DB899
2C4A4BD77A06E81E93C5698C05DD02F74A0756082738BDB53003B483752AE498
DD718AEA8F3FB5A6B7E2D2AE8F309065F3D556F9A34AB90C88833A54295E0982
209C466A301BA3372AABEE20D862C6DC6B6FAC1463C8CBA8AD766ED1B4C9D712
2BECB4E6ABF558D8AB5281C35726BB8D046982C0DDAE17BFFC9394125E4E84C0
B283977D31460B8EED4346CCB09F64DA0ACB640C6DBF32F2DC30D54668C1CC12
24C7280593088E9958C047125C323E9C842801346A9CE5F50413D69F6DE99471
65D2E387765E92EA4C43F17B467DF6E266D92551009C0E52E7219AE9F5E2E8D2
88852086FF3600BFB50AF3EAF8C009D8D5F084B510F792385F328F7EFA8C38AD
CDAB2EEDFBC6AA45F6DD7364C2F02DD2BE6C79C8361E83D4267CEC2407689864
B57B5D967FC80AB3BE8CA43955FB0FD3081D438437559AD24A7ADD484C1E4A77
B00BDCB0D1B121FEE983412E1EA5489BDCE5DCB4A7310135956B230C0DE7BBED
516369A92BC41FAC8D73490984942D930DC193BF0C774C1AEF627B969EE4B001
11381AC57815D7581E2372A1DB740B09F4A7FB4318B765DA4E7B44E8805CEF85
44EC3B10613FE7B397BF91B69A5CB2E9086D1E7A1FAE0A9ABF2A237A2D29ABFF
E392A18AEACBF28274E775D3FBAED4F46B982B9DA4602E24094EDCCBC9D6FC0F
67C60376879245606C0B9C9A678E8917516BE1CF097B1C75C9F0DDAD6899F08F
81FB7A198D45FE060CD2A550D9B8D58B882B969D7BC3EC018A1FE92BDB262835
26516FF97AC387EA525FF987E5EB1EAAE4EA5866C9CC043D183763C530F7D7A1
2070E4044507C4E5611FCC117FBE4396E0B24F672CD53D5FDFA56D561FB86D40
90A52A7C7F29A119DFFB694A8C445367746A49CA5FA83163BE448EB19625DF26
609A8C8672631A10411036CAA3D6C2F822A4B2505DCBE8E1CE6916AE515E78CE
E8C894B134BF811671D17C19248853131DFFAEDB24B15FF17EAC194662460642
48D23515AD434C68DF56753806FE96DB3A29F9D4980E0B6EAED7383F9FAD2584
8F85679D6D1933677ADF5D31FE6E43DABF137E834A1DEA632D36EA5728625159
8F33348893C9D1C510501628E4A9A80587DF6E179FAF68B158406A3EBCD726E2
AC17F2DF8B3607072824D2E5A6479F7BADE32E603E54E7A83BB2DFDEDB0D80CD
1F1BDD4F6C9025CC3A8A3685DF10A8183FA80CE0F0FE2BFF2500F76B1037AE41
56D2D7FB468C3CA7549E3599A2AACF66302572F1B35BC8EF7C23F6FC4B720228
1D673D903111CE378AAE83480B4DEB7EA84BB35F4F7BE997DD4FFF5A9B5E7650
3C7365BA0965B242DC369D03215651184024A08EC284F1798B0726152884B4D8
46411B3BC8F5CB53A70AD53BD7B1AF23528849B56CF2F75609FE715878CF6448
38579380688B47AE3D374B0DB6ECA5B8284414090123D47F3F9DF389E023F431
6B4C0DDEE4190DEEF4CA772742012754DA9A44A8F550FADA6D8FB0C512D5BA2C
BB7DF71B1DA41FB6936BA71B710CC6A80751E43436F0F5888F51AB370DD4A088
40F402661E08732C960705C7E0D29B8DA1A8A3E119409E51EE575E9655F47568
023977917C8EC610BEBDB9C1F4EBC192084D63EAA00EC87B53E86620BB5AE51A
579B0F8E1972CE1DA02832FC75184F45409DD9D413402C2FA27BCB0AE6DB4CE1
5AFB114E23232DE07C4674969A1FC94D152C6D3A611F029ACF4D949A2C0755D0
31C7DACDBB4DFCFAF7E87295CCF5D4AE28D87ABC3533D87EEF1507B9FF9063F7
F007DF03734A20BC3A198B049000C92D2849C62DDAA719FC28EB372793E20128
D786670E08948808BA45C4F6AA0DD8A8357CCC47228A760C5C7864853BD9C9A4
285E446CB72C5C9D3F03FAB000810DC5674061FA116153040743E846506CFA67
FA8770E785D7DBC7293F37389A0859CC22275B23C44B57B92A033A7BD194340A
D6BAC6E103402F8396A5394C617CB2A27D9500921D5DA06115EC81715EA8E360
4A95DCE8689CBE268B8E6C8B806CFB0ECBF634250243C9E1AFFACAD65311FA4C
1DB0988203537E5EF12B86FB454D06CF05E4F4FC4143D62920E99304245B6ABC
82E21192BE94F5E980DB21E07FEDF0EB0CAF4ABDFC20EF08A2A44A7940E2862E
08FABA516152DBA899D6CA561EB08C7C8298DD511084E5230CEBF28AB1D84C85
B5BAF4616C28FE05AFA4BABB3BA03F8CEEF3F3EB0D3034BD3D8D06629B8E9EBD
72484057E71C9EB4DFC7C2CE7749271AC926C2419D618FB0B60FD6F81F0F2C04
E529CC74DCC9E4AF32D935D7CA65FBD0842A7BAF162D08F782E65DF3AD9EFE69
198AFA9208B22BC21BC4ECABB9BFFBA84C8421B74748E1EAAACEB59E566838F2
C439579D6C75074F94493F7D5C8942D881AAE6302C37A61003AF77684EE99AD7
EB5EEEF050C52E75E4E842F8174470FA60CB213BB6F257EEB26CC55D1202931B
B981DE2535A87CF37BFF912220C117EE166CCAE58BBF624170FFBC0716726B36
304D698F2CA131675F7B1199E6581B8C812C4FAF75814282477BE2B7EBCBA7C2
FA6356B2876F89698C6C2493989E9EB252DE03BB374622A7C88B8EE9FEB4851E
02F85CF70CDCA7BED5EC94E81170FB557C3BFC6F32CD70B506E56A2CC5451592
130C6F570C679577C44D60A811DCEFB3535D855259B1021AC168DB76DD38B459
F1813E3DB20AD9275D58880CE94058490ABBBB0D8DD16D4A65F680B30057F15D
07FF54D779CC978E90A850A2D8D79961EE276BB26B594C16F56557435671A3D8
ADD3DD0BC4BC73B0652B9DA8462FE614A14A11ADB2214EC4910823FB4CEC8938
24354C5C62547EE5710FB5ECD93AA45DEA7411F6CA8D5B5FA222685E622AD73C
1BD5DFD1C8F253352D6C7D14FF2FACF07CA5EB11392C6A33E9CABFD99F743BED
55E8DEF49E07B9444171D1780C698E5B65B540F41F845AC188DC7C0C8B5BA5F3
546BEAAA4F29F0DF30D5AC12A60862742623100074457BF2D820DCAAB340C1DF
22FF26992DC02F276B40A7C528C84B72CD189A4088C90070486C49A1014FDDA3
5093FC12DAF309FBC063653E6A33E14EB51B081126AB5BCB8016E975060B796D
6CBFDFE6CB9E191F12E309254BDD6660E3227012F5DADE246B02B6D8127F1EE2
248F48DC5ABBD229748444420C868450602120664984FE3A8B2373232CE5CA15
E67172CAF7EA99F73A66AE33B1EDE5E8351DB02497CE3338930147873D4E46B5
E918F5592A21789FA9F46232BE693DFC33240E2649D6AC1940B101D806089436
F0CE230BF6D0363510378822891DBD3EEF3365430E74FB6C994BB40C8EEDA593
CEDAFEBC3B87C7C04F52FBD7D557A77B44855CDBEC8A8D26F44D66446B5662AD
15B6B79D13BD262D79BF51C09F8F690A61C7F11EC2E05F6BEDA273648E9E1EBC
3D5F1D6ED486797F753064ADDA8494405556D43D395B1487EDE877CCC1EAE954
1AEE2513DDA94897B733609E8179DFE1975590568202EF20D58A89B34874CC3A
A5579473AC65E0EE61545AEF578ADE10BE3FB3E2CDC96678F613E4DEF7BC1B38
8A551C93438A0540E292F65F1FA73D9AB30A5F545284085E4930A570C1807995
7108AA8194607304488616DD4AB189F8EDC5F4507AEFD7847817A8ECFFDD2DD5
DE95E04EAF2774F8AF661827229F01E769A32734097C457EB6FF056D90C46C5E
9F936AA6BF2EE8244BBEDB8862E56423F5845BB10C8809730B011D650EA18945
83C320A3F4ED095A5EF91929FC877ECC28A1C2CE74A53245E629BF46C6534983
307B1C94EB35CECDEE86551F0C308F66690E591C5D9D8FE14F534CF3F5DB6D32
39D7C799F392C4E65759B7BF61F4D8312E3B26C31466206A367A0DD7A90D25E2
805D36ED5CE0A4BEBCAC0A348FADD2D2AAD670E28BE6E33F627B4A9F35078B1D
6688084C4C18840673EF9B3526172EE14EF64E97C8B006C27DF6EF73BA6E6459
3608F10EB1EC4B824DD5360B42AFF2084788B165747AABFB2C9C0EBBA9C6246C
08F28143809315D6268E386F09BBAC54C34213438B56C386B34AA457D149CC39
A3C163F56E3C2E637C63A79CF7F2DE969EF3AAFF75F3F20499A9ACA61279D545
866FFE57D25998244F448AAB042B141952BD653007A889B1A716A4042CBBB827
C1ED5E3C616C22D5FCB39D3B3539F9B71D50D25ECD2E5D953C7A5194C867DDB1
75CE10B2C3A20E8CDE15AAE9F549D034838DC066CA649C31EE365D46450AF18B
893748D055DD88C72391FD92DDF0AA1A1316051BC756F87BC9A425019B2FA7BD
CA9F35E89E2229B3021DD24C9DF0DC3217F44DCF510116DDC9E92EFDA3E0A892
491C8961CA484BA29B8CACD2FED2E246FA7414F892AF7B9F08698FDEC82D2E4D
8C6ED1FD9E0BA2645663E7E97B0F780033D025F2EF3B364574C03F04FFC4E09A
3D4182BBFCCCD8CA54A92434E2208803ED36F931D31C7498B7FCEE4B78AECF11
B27123A10F031F9CBA36066680E4748E346D18FD0EFA395D1A9227530618ADD9
64D96C50A0172F712CB427E8F7170F8A1691FB95B247A271499F0E63676BD64B
167438333A3BD9CD9641AC637E0ADB17F1E394DF34AF5A2BD02030DD087BBA02
E1209338B74075744A9A9966039AB6D223F385E06FF359257913E6C01BF32F5B
A3640C7CA41A6C51F296E50DC1CD1D68491CE5D75E0ABDD4C5C4A97C8BE2BA35
D91AF9F8F38E7AB8C1778B06A212D0416E6137087329AAA2679C51D014CC4DEF
0F1543E2FD97621E552E19B29AA1368CB5046C188BA59B1E1875B25FB269DD2D
C0678A42CD310702465694F2BF302AEBC43F714F7C657505132DDA71CD23D17D
628BF3400EB5DDFCE2850F31B40C5913394649AA4241CF646F3939916C2077AD
C11F8C3E478586AA7931E327333FCD8A2EB31DF4B47AA2F31B999556602DD998
5848143C0CBD0B5187DF08E675550F2384D48C2954EA7D16AD2B94DF97C194D2
302CC47BF968CB1F6C9641A87525D5C6972ACCA1D4A4B4DA8EC54BEA6E7312B3
2737754A9FCBED3BA5F8220B751506BB0A5BB5CF706AFCC04BFD713A3BE3C842
9FFDBAA0CA5691D0FCE76134841A169970903843163DE68FF09649E99945DB64
491FD6D8B2DF237DBAF550D1B74263B3BF1EF6211F40D4DF2DEC46E4DE557088
5D458A7CDC6F34B8C3F5C76582C8B7D24A333AAE0B43CA67436F8ECAD7C50B12
35BAAD521033D8024E4DFCF01580AEC63BD5F8ADB778F822AC4FF0DA608EB7CC
1A52A51B9F38FFADC0D2F4D8394C5D598123B483AE5AC1215F24F2492EBAA134
3C58AD4E3B493AABDF753EBF1F04058C6981C353D6788C2D3294165B667D3765
7883A8493F5D772F789F73979B254BB9397FDE4F8B76CA6FFF312F4B012949F4
3EDCF1AC60FFF2681549DFF430B498405E79CB407DADFCEDCAB1E2FAD3B0F4C7
B575A33EAFF9F67D37F50BB06D06834EA683862991C5BE340D4A7F8D131E733D
289F72977870F9958102F5D835739F0F5A642E7194E8AF7FDA2937E5C0712CE4
EE15CB475725030CE0F238C32775D3EC95CE3D0886046E3EEAE322F59D423E83
DE88DDAB5CE0F70537487EBA5A16A9306BA7DDCA14A85A9F83B3BC3600DC9421
BDADA2704A5A24F7174A3A486ACE68739EC5960038CB44D969A594E97AE1F42C
42C1B7E3A456B3CDFC7683537B337AA8777F18CA45B22C8BEB18877DC624496B
9E8EF9F386B7FE4D94ABD5CE3B5786E76FE04A35909C472C04654A4405932EE6
A4A3E0F6DB088603FDD82F0EFCB85A962002A662D1AD0647A2F484B59075A1FA
9F4327D542ED7962620B998ECC3A95CE736089593461CED9B5AAAB05C2DA3820
5AF29B32904E1EEC357C8E282189C6D8F562DB11291091E6897E24CD8F8E2A34
67F35D261E01336152E69831B0CC6B03FF1AC7EA22B745F513A25FE10F70E74A
3FD71FE1EC9999BEDE7CFA6A97EA2DF621711BE950FF8960965685BAAEA71FA6
36F165573A0A6A92DAEE41A9B0C97BF03419FF6BA1F44524D00FD671EACC4233
9A857680DFD27B9F1E7A760058C8277B3761DB9969241D1824A7DADF70BBFC38
89C6DB9091E3BFCB36851CB9662B365A4B7384BDBA1D385902D1E5DABA72A159
63790096B927EA49299AE03E41C7F593F3B995D1155E91C62D5F68845ED3C797
7798B56858F96C2FE2E37D812873B7801767082A6D6B60602CEB94B7F6D7A142
72814734DC584A18D1FFEA7333D4C7E2DFE5B91E9AD92EB52533CA52FA888980
C79FEEDF0FAFB3B20B497F9AB668BDAFA364B405916526D5C48E57DC30BC35B9
BF684FDFAD199D9A28541327F3899AD505FBBBBB22F419E22E0149EE5FDD2B43
AF442E2724EC16934C307FA731F90AD1C76B74569B78CDEA7C19808233C6364B
D049F3F50A68D3EC5F29F2B96BC58C44AF90FE13F244B7129F14B5DAC3F3F310
B330E67CA4EB76F895DAC8025F11EC7630EEB4826B5721348FA38F28B2AEEB1C
5F7CA413C486C94B1DD96988F07F7A08D3635E28624878E55D4FFBEB5E183CB5
93014D8A272EBCF3A09133603CFFEF43A6FF059BCE525706D3795884FB495748
C8AFB50DB464459A5C36D7CD087631BC09C693A11BDF1C6011D9864FE66EE8C0
4824A42E97D16E017C0BB73732D4537E2A5BB283B3568950E5681364DBC1D6DA
058A122862A44ED85029A7B39F2FA7C362D859D0B429E056891339626AE6091D
74F6110CA32F8F3E9507216997E6AD1A2F1FFBE8B407C9880DE230E234F6FD41
A291851178BEAE5DB9DEB22E3443807E2BCEF12A4AE8C490AA9E3D2918329F47
42314CD258A0760DE5FDAC4AF7209CEB530B8508B278952A3638CA8491C3B493
516F461610DBAF32E923ACB834B15E2D169A10F2609EC0ACDF7BDBC777DD2C19
2DB330FD557D3B06B78824D6AB237D8F2D57A7ED35F02CFA9290ED6893B41657
A2485524A3F1642FF5808FDB77015D9467EDAC4A6BBE8A175833B1225A5554F7
2C60207F7A2632A4023255E8EF1F38C1B8216C9B03319B60BEC9799E5378683F
46E698FA75F2DFD40F17C603F3335F1EC70DBA1449C7A33EDDD46CC3DE4A6557
EE67BF349AA8680FDBF415DC527129288B5879500180F75DF80394EC7CF11BC8
9EE9A4ABD64DE3076A2963F83FA333F19FF74F79ECF36A87A31D6F125FD2415B
3F6A6FC33C179F54CA164835F3C3DB62AF444BDF27AFF23098C7212477F688B8
6F48D9AD080D544D57FEDD33D3D9AED9346CBB644C97C951D4AEEB2BF6F0CB18
E2517BA7ADCFD00FE44E290E731D53E5C0D762FCBA08004562DCE6A5EF2FBB74
B3053CBED3B6E896B1C3356DD9E8FCB69691AAF6BEBA0424D62B9F266D560B40
89E20A9F35AD4A7F65A7183761ABBEE0F7EF26ED3565A25516A3A5A57143979A
1EEED8CD52A69E4E1AE4795F3EE0CA21B9F4D166783A9AF54B08B6C56703932A
310197E328C6E6A6BADAA11D66A952964F31FD690082FA02D1E2A4512A9F2742
33B203FB770A3A1C7490ED630D0FAEB3066429D0237E18818EC368D0DA72EB08
1951C70139EB0DD59EB53AF5039A7618C77F6CED9F0A066FED6FEE0C0E328351
BA39746C1224A29D191D8B86491E0A306ABA070CAA2756C3A33990EB6DDF34E8
06EAAFF94AE6686EEB06A17D6D020D1F4E59428D533DB0EDA6434E6E1A478D5C
2A0D08CB39DA7D5F5200199FFFE3F41729478D4F63AE01FC0BF3B378FF6402D1
CCF7554B0EFE63453745582F9AA32CD5AA939031EE54F8B3DCDF3F22764A2BDA
0F6C1B24C24D386507EA0A0F893D86EA4957593B1EEC56F0BC4307C6A4AA4B99
8B51C1860703100A1DDBCED18D96E7862F1A39AA382ECC9D344D5EBE14B8BCEE
2DBC9264AB4A2C6A4423F3843EAFEF1C23FC9EF53AB526D1E120C8C3C96A3D38
407F3FA517DC2C5AF84B2F1356832A58B841BEB94C8E3E5A6BFE9BC3CC7FAFE7
A78CA02026FF5FBF5ED6E8E36FFBDDE7A735E596B9F8E7B21C1C3BCEB50F0945
EDE2A264FEE294394A29FE76C19DBF77E15F3EB448F5EEBFD5F4618A682DEC70
E55DB44BBFCFAB7314DA1FEB21C496F4FDEED7C7C300EE238D99EB429C2ECAE1
2B66291A897CD4ED5CFE0D5A1D31680F75DEFFC0ABA7D2B9749C68CBB9A3DFE2
CAA0D5BBD9C8DA489AD9A9132FE75062C270C7800375401F2EE2DFE9F0BB3446
A1F67A3E64954CD78646951DDA032396FED95E09F7768F7A59320CFD6AFD2783
CF847F39EBAC6CEC9EB61D2415F1A6840A2F4A5D12FEA2CDFE72621F41CFFFA7
7673BADBA539EFDADC4C7C05714AA23F15D7A22A37E8E46572BE9B62D6433022
CF9D90C77451
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMEX10
%!PS-AdobeFont-1.0: CMEX10 003.002
%%Title: CMEX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMEX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMEX10 known{/CMEX10 findfont dup/UniqueID known{dup
/UniqueID get 5092766 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMEX10 def
/FontBBox {-24 -2960 1454 772 }readonly def
/UniqueID 5092766 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMEX10.) readonly def
/FullName (CMEX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /braceleftBigg put
dup 56 /bracelefttp put
dup 58 /braceleftbt put
dup 60 /braceleftmid put
dup 62 /braceex put
dup 80 /summationtext put
dup 88 /summationdisplay put
dup 112 /radicalbig put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23E7BC2A6E71BCF95FF3DA948
1A27320759222BD7BC7C1A533E90058824F06942F0234C68671083E0E4708398
D246C94F9C16DAB6563651BA33D86273FD2DB3C50C106F3CA95B1C79778D0BEB
B99D9CFB38E41BDCB4261A86A23E2CDEE4837D9B6F0E85ACEAA984C344A63709
EA35B61F08821338D363D172BD185A3658F43052AE1E61D879C99DED7F6D726E
FAFEBD881BDDEA91FB09DB75675FC74AA2BEA8771027C7A51BF849F8E765B870
8F7CC0871F301ADEF9B71EC3C607B2F51325AA5B3DD74A2C5426E7B329FAE84E
94A159C8C9C35E27A0FC93FB98A4D616750DAD50068A5F0EB96B8228946E5CC6
B69E93D262C92E3BC7161313156E380A2ABE27BE400A23DF95E65A4F76B3FFE4
CF3CD141B006C487EBC73A5A101466D4388FB2CF1D9439D0714720BB58537B7D
B3EE1F04AE117222CA5F0E5942F7A875D55D91D63958B1A02405D9DE08109B8C
7104F2D109EF7074852DFD74CBE02E0F3704F2BACA14E05EB1D0D9021EFAC23F
76C2389F8EA237D2E2AB6AFA83A725E16AECCAF025E05F1B1B5699D761F62A46
EC6F31B0FE4769BD0D66821592ADBAEFA9EB454CF1402FE870F5F96D09980C1B
8B6D2FE88BE56032C1959E6C3DC319B6A7353F3AC629CE5BCB947B4B235426E9
4769302817AEC1ADF50E50265AB488017634AF824D44D3C8423FC7CAD97F6D6E
6B34313637687FBDE3BDF6FC951CB41277D8EF49D14767B59656D214C9724DC4
0523EF896F4E48434FCC5D8423F07194C54D48C62AC29001B10C9C8B514B24C5
CEB60FF68D36749711E108DBB52738760FCF6571D5B04E58F24CC0247834B412
D0F6F8D7F1573F23E3E399D5A3A3A37FCFFEAFA044A5694D2458EFF2BC1F7650
8FB0A27C505A20C16776EDF94BEF9DF702F3C64DBC1939BEC0399B6AB283F832
DD8FB358F701CC075C596FA7B0ED7A9304DC73274C8169337D55124CB748CE26
A635B2704D8F65E23CC0FDA3C57ED451F8FDE7B6FBFCE2746F5AEA11B065A6DC
C3D200D962A034DD6757991BA62D8DC0408F49083D48799B6097B61343365A5B
30FB02E9CDFB5104FB751BE8A268EE55C1208DD8B29D5635014EDE9D0D94BB64
ED5643B3049027925BF2FD7EFCB631E01269B731AE12AA6226B2656F035C7E92
959C4A21BE40D7C138C8FF28C9FD4B768CF25F08859AE84FEE6EA18C033B3659
D9EE250BA5FF2568E8BF7684A93BED7852251D1ADE5DB815AF3AAC36D1A500C9
41D1BF3A1926828CD1F9E501ABE441A07B1B96612CF0728AD5FECF7480421F46
0B18E06D2FF1A5B1183459C59517976474698BCE18A728515CD489A83C001AFA
47BDA929F60D0FABCD8786AE16EE18615C37D18703571936A365D334BACA9BA3
08E2523132887B5EE95ABCE8581C78C3E858DBF35ADD56A1F6C2489AFA73D1B2
379C5064DAFD30FDA84581FDE268B470636EE35F21648955513714F6EAA08AF0
249C937721DB0E93D95C4DDDFB0948051953F39C6D2D811D3FFDC25F786E072B
2A8A1F4830F9CFC34666A1D3F13268980E9A26682CAB64817318A1E266F3D2D2
DE4EBB3EDAF0E7B526C838CBD7F37E74A35B1C3EB96DA4099DE689A53970D4CB
9AB355E93EB294B07DD09356C338BB4A61C147BEDC152E58DC92FA69846E4829
551A5330006793CD88523F7B3AF7B4475C531C67A4B66A603597EE72C4ADA491
BF13706F341125CABF37FADA554FDA0BA5534C7AC35F1829E250C885D9A9983C
5D1FE8CE24458A8B13E5C7EA22BF1608AFA96B83C700889A2A6C9C4052DCB892
6CAEEAA9E7D7F3E215019719B36A5DAFCCF2396FA0C04AD99A7C23772A7BAA64
D1FABE8E476EAE9FC1A3E08CD6D1DDC6E087934E676BDFD1528652B6B9A50A35
2029466364300AF4CA3C5883F6293A7104617D0858B3E43D43752F814654A938
A44C33410BA0E5EA7BF55D4F1D57E27921DB05C059DE29BAC1BFC9B607D2C5CB
1DDC47793984FBB18BD99E1DF7776B563A55E15DF024D6D8E6ADF62F16F602A6
7DDE1C68637672AA9C7A1250161502ADDDC1B4F6011A9BD5605B73AEDC37CE4E
4467C838B7692C4D541EF87DB41123F9DCCFFA971553A5D9B0E7EC539A28750C
8554383585CD8B93DF731A301D85BA9ADC95B4A3A237794C30230A82300B6756
AE5A46A090958109C5565EF60B0B16D6C0A16A56644B05D3371DABBB67ED9BB8
9BD3983575D371419C7568B2556649402AFB9843106729E4EA87B3F9038218A1
F820B098A1271E330708432567297CCDA332B555A40C62BAEB16330175D28AA6
13AE6939CEFA2334E3E890B66A73277F0B63B1FA59F856ABECC5FC0A50571F5B
0747FA554F5FC72A51E215304B2E44701A13E41D91397B204C66AAB3D101004C
7FEF2D87DA558EA057BD492CD6EF93601CB63F78426B502CDC5C8E9EF4FF3692
376601B1FAADD801602668370B5ACEFFDBACA8F8B3F4E850D07A20F6F47440FC
FD39504F0FDFCA35AF2ED0DA8BAB63AD42EA8CDA912CE17F5E62192DDD912333
3E9FA0884117F07221642490044A72E359D5F25D9591A8FAD568A3DEE435C354
11995C0EFCFEA21735DF44A30F79F747510E28767A4266461D1394F81344F6DB
1FA8D0B0D9E5F52FBB663C8F1E91192E5608FFEAA178B93F8298F70510A65BEE
12ECB5D675311B5B3B19205476512D92B1D16262720484049370A76F78D9BDC3
02EB96AC1E5B3CB078D2F219988FD0F36B043ABBF347B22D36CF541A8F80F791
8E4F92D900B7E7B64DFD500882EFBBF23565FA470103B2E0D2D14E3E4D7827D1
BAA0F84713A8CDE5904FFF2794850871DEADDDC53B77A502F5CA98B0744BB656
2FC40ED2AEBCC5CACE2301E983E6C18CF16AFB9FD8CA49DE51B22F4259D43076
DDC1BD4974CDF2E733EAB6334B1D5614288CC81FDCC722CEE193635D1088FB29
F80AD5CB96394AE89D920DF8E1F271585AF019190F17DB51FEC9064B54C3A53E
3FD33C3B553FC79F743BEC9674743BF0A821051261DE4527A2BEF4A04E293E97
02B181EC5F5EED3E26060F2C9EF6852B7433CA1BC1690C30424B03C522A087EE
92016EBDAC4B787133B4A22BFEF0B6CA564C6EB910E1DBF983CB4CFC3A1F8A26
45329CED7F5A8704ACE9D4233583365A5A97342A053EF403F0567E9D0A62EBCD
84B5D7145BBB11D31046BC2CF5B450CC68B85DA0E78EF8902F8D37DAAA9D4242
455288C0D73748F9BFEB1B1769D6FB84B94993D5F7C2B9CBDF75AEF2C930F277
210B3CCB8A0299F50AFE2548A4B8DF5ABB52F098ECDD56FCB8D3A406EFD95088
92D7EC39FDC7EB1824ECA24D0CBC6EC6F4C6A7F9590D593B269D2CC0BFBD961C
AA8BB4296B4E4411B54367A341A5EDA97288DAC370A015FDE6D7FB0A4CECEFBD
1A67DF3A3703E922BEF2C414FDDA42482EB35D5DBB206B44C76C412A435A0842
6845EAD204BDF87065CE2C99B05D2D4080D5D11CFC3316967472C7DA44CC1F9D
51B83B4BE9B882D6E9ECB482F9855D024ABFBA502CCD624E0F88164A6F13CED4
85F20DC01BB15C7D78B1C79FD9FF71F4B043F59DB5C297768115542BC7C8A99E
ACE39A268D32122541FB441FF1364FCBA2B7627F12C49ED038BC044B6D9D533B
A72D35317A5AB8D91A9AC56CA90D1DAE9F967605C63BC9F406FB3D5BAEB4B38F
4934EE3D2F5FE434B45CF5C2D0E5E417EC279DCEC4F16504EE40E837B11620B7
7526AFF23381ED3E9A92DA4DBF4EA2BE4FE444B9A74AB60EFC818E20DD8B852B
DF8CB659C0A3956D0DA61F49A9DD467726E57E9B32EFF540D551A67213D40273
AEAA6E319D92B4B406377D36DAB85662C755D76ADF5795C52D54ECCF0DE81E30
B84F951233A0A400CB063911837F0AACF44AD2441A7CE08818D64705E1ACF7E0
F59AEFC5DD812981C5508385274817056B2CDCCA4C9F3103C92838917EBFEC94
21D5737AC634B23B6F7F63B166D60C6BAA8F33AF44379C5A7337E737190EB3EE
14272B905D08C01EA118964D3444A03676FF3B62E7626168FA1DC6220699780A
0BD5776DDFA26BF0BB335B3C978CDD5CF1A419D4B5C562B3974FECFCF0118199
E547EB287CD92E32E881F344420FA3CD97333BFEF5D7E1BA31FD20622E5B4F95
692DD0ACAF01D413B21C8608FA87B470191C3CC5AD333263C955B4ADF4370FCE
D6667FC93495003F4B6AEE4F83603D55F19EFBF56F955FC9CC01E494804952CD
D426FE706C13D41F87C5C668D8B6BE50AE0370E07F52AC0534ECAB1C19851099
FC0BB1EC2A649795A62299F73CA606EDFB1D28183DC63ADF67294553115E8C57
7CB603CC491A6065802B925E6DFBF42917EE6E44C714228AE452851D61BF70AC
844B5D800EF029357FD659B8A648445CED0ECAE1474E443124F4B3644F54C556
A330D92EABEC7F607C6B13FACF69CA928F835056BD1A8ADA20EFE6BD5CF4A1A0
8B9E415E4A5FC6F209EF05ABF2E0C55F6E3060D1C72967E1E68791499F303C8B
3960C5A1F2DF6306710DFA98C8D0815A06B5590374554DCCDBDC4C295B3BA6B8
8BE3200CD4421A521C06BE39D4CA495BC63F3F982CAE3C82AD38DCB537E617D3
34BD96EFDA7C6A0F6D97A6BC9F084645390E194E7A11399FCE4EEB9A965909BA
6EC69D34DBA081BB3F18BD1ADB1AE1B7FBF96E4C546498667690857EB6931841
46C427A5B7C7D99FF889582C4AD11A7D267B301C5A5AAD9DA99D5BFD438238DA
62DEB899FF0F7B7997F781315B2CC328BE3572A3903A33EC901AC6BCC7F152A9
8A6865C6CB17189A4EEB699006A5F9D4482D53A76E88438E444F9302C79F0DC4
B3033D29D303B38F5959F020337EE6619DC8A8C3912101B02CF8AD113BF4BC29
8C6B9D25AF6B6A787F222C05964475B49B6751E3A3A6EBBEA03677D5B136B9DC
6D9AC20193BFB0759E89831C9E2AF68BD45ECC81175DFE80DC0879069ADFA8E5
24CF3C84121CD9739A28BACB9891945FA4E72EC07136682E18FCA81938FA6A3B
8CEFBAED60121530E33C1C0E698B5923D6AFC4E907A99B1367C3D435CAEDEF5F
878237453B8DB2FE53073CF3319FD096343F42D68F097759D051AEE17E4FCFC9
86E17099799DE82A38F22D870BF7AB90890E3B5264976700BAE594C8563A218C
C985D9A5A7D7BD959F7E4E66286833C86E89203ECECD6FC4C6FE1F04010218FA
A5714881C4C846E85F13BD68AC250CD0E488DBF60BB10B2CD7AE2E30F9C21DFA
0E84F76B4E996AA1C5C056E64BAC85622C160B56DEFD4DEF86887C1201F7C20C
076D4A27BA69572BE9C89FF3A9D3BAA5CAE0A6F2187AD01ED497798A305E3BD8
422DBFBF45E3F4AD35240B07285128B59FA9E83D9F6A2E620CAF6DB05129D930
44CB241CFF84E776315114C3AB61FBC0A8368D9154CC5066E2B162E89DA51165
F9CC075F2524F9A8624D2B56ABE64AF93B9F0407CC770C1F2C76CCDC06345D03
7B173C2FAA201D8E1F6C0315987A7A13902F4AA5ADF081C2B0A01C77E4F7A3E7
6A4AAEDDC577E855D69D38AF6A1D271B02AB496D94D81996FB078FBED17F833D
C6C0BCE141BCDE277D530951DD6574B9CB3CF0370D74211E9AC00C7CD3A67842
0B4B72ED517E4906409DEA7993D0B8E92D418139960EBC86BE63A1B1D417C451
8BA13C230DAE1EC4E466F23351D410D9FC4A7BBD477D5FA07659B71CE9921B1B
6755C67AB3D4988064004CF75948879D16174E8097C91F7544352474C2D9A1F8
A1813BC6F4BA13E952678F5707F19B4799ADB3BD186DF650821DF58CF3C78D67
84E4E1DF8DACEC50D15647C3DBBC3C4355E602D3A03171FE1CB36FEB940211EE
0A5300841DD7B7CF91C02B3FC5D89C691156BFF8A38C6C72789DF260B868AAA1
895046E405661D97FA9A0048AF114A89E3ADAEBCE541753E4FFCD902391B5372
6A97E32F0257FA9FA1DC15BD3140EC7F0CA5A68AABCEDBE73C38B35FDF195F96
0F9DB0F592C188D72D73512F4DD92D2371D1A59254BC477CA084E68184AEAB6C
266BB21DC3AAF874DE999AD2A17C79621AE322612EE4B6D5BDAC511418EDE90A
AE75066AF19662C4AD855E4200A5D67BEE4ADA9A399192C74D35E59B15FB61E7
BB167282D32D538029ED22CC5C9860C1F6B7BA7F33D5CF108D4BEEFAE7B37E67
39391F9934DE17956303532ABB011540645DB8420749C9B9A019C3CE86ACD566
1EE8D8D5E0D8D0DEAB33B5413EF10D4EE650F82417002E436E0B3B628A657F84
074098C2E9F897D9AB692E0FB9F268E6728F94A79CF4D6B0A07C8DFDC1D67FD5
EDD5863EA8949D180B1596D0009D662FC429449D76BF13D83F0D0CF165982443
E9CC288CF7C5F2E17EB7F3736D1FB814196CCEAB8C833720E3733BF594E1B536
BC0063080BC751F9DA1741522B2967D07DDDA169E7D3417B4A39EFAC15EA5E8E
DE3473CC9DF991FAD2A971F44B09635085DB02D692F149F144F3DCDB69B72C53
A2AF34C65DF0D5F35E82102E67B733750646EC03A4FF47138F7998607BD93AB2
B63A0B82E8E225FFAD5DC468077FBE8C8C8E5B4BB10A8FE836B07367D742BD6B
D36DF5304B9DF363120504C279453452EB177FBCDAA6F6FB78A24848F4A1D94D
1E49F6C46CB36796F3F4C9739346381F28AF085C5EBDB2A02DC0570C7A21E097
77522D4947B51182431BCBF3E55CCDDE93A916AA40CEB577277FA512380816DF
9111C56F36341381D62368E70462577D0C135BB3CB4462B269AA8E0F03245BFA
D01DB8E23F2DFD5DAA88FCAFDD51D48E562EC649DB1FFDA0FD8CC8C48E6A9207
260ABE35733D75630053CC74A07E5AF6FE87BD5FEA69CB6AA20122276AD92853
6B225BC9E3350D1B1362E04C7795D473F1266852B02C83D02D938C55D8F0C671
7A9205F8CD058304DFA034D99A6BC16C582F02484A089602D42DF30D7A5716C1
D42A4CE56C19E40C01DC7DED931FA13679CFD2700B3826A1E6539AAC12293DA8
664DE251C5D1761BB45FE364CE3F7F7E9B67F86EB31D9626CCACE4DCE03EF3C1
0D2FD1B12B5774510D46C5C5CBF0A34847418B9A1DF0C67789422D0EC2D49576
9DDE72D63A4A98613461A6F730A05336C691583F96C3CAD2AF7C4BFD3AEB3814
D909858B6598FE19397006C8C4D549AA1635968F47144E7861A2BCE8AB4CA7F0
4D253949AA0127559FAE3161C810A8CE22A3079602E747C9398F9C8B2A868F23
D77D7AD6B980FEB038E0557E58E1D7AE471036CBB96B83595D9C96A4895971CD
C2A810651A045F876A1F5AE470BEF39F856808B1F8D736030A722E1576BDB3B4
4DF06F73D38D313C8A0D3504EFBC774750C9F6E687ABCB1927FA1BB3882AABC1
2306A030CEBB259AECAA646C6497712F6C1E9DB7E1365A60EEC5AEDD5147A77B
1E3A10D73C477876D54FEE853D953EE75F7EDFB287550B93CFA8250D1FE2FE7D
D34441F1224F3DB1D355188819EBB98A94DB193B9CA23803869DD10776647BF5
5BB42031AC44A7339DC036AD0292AB9B732E6FB79BEE852A103C3788BB0F4B72
EF37BB62356F9B2DF7F5899A26F1FE0A3D6469C1034B8AB14F52555EBF6DC592
3F24D6DB395A3A182ED4B8ECEE8254661C19CC942F236CA40BAABE818EC312D8
7F5762C210FCE8A3CB9A23A24D0A751A09F4FCFB72DD0FB3AAE0575CF97D126E
1669203BE1C8F8FF626F49E8AFA7B29EF26618C6D8336D4471314D5D009BEC8C
D914E74D0BE7D7C3A2511C0DDEB6FE04360D54FB3283AD67D9DCDE211FAFD19C
449E201F2913232DDAFB2043F674EA73C9F043EB73CC9A96289B3CF819DB3E56
5FE403D8C387C99979ED9F8EB2FEFA88C45210713F3A1DF60D3B651856EC89C4
0832B10DFC919C30AF8038C03C574183F7F343D56C4B7FD45209470A3B4FD7D2
777921B3C8F4419C2A9163423DD2C022E514178529C773F474DF4C22D35CD6C6
4A95008F2B1CC757E1A8ACC68AB99E9D8D034E274E9D7EF4BC191E8A16C6241E
FBEF31F560A4E7D3E42A1FF50936D0E9342542B55BBE89D7EFE672086E9F44F6
4A3808C90B3E2F978BFE9A0C3D678F60F7487A5BD807C4136BF1A51C0155C03E
3BA5E4E66E165B8B66424C9FD512AF0C56AA80B165996ED405AF362469B11D3E
5BC30723E9C631E096EEA4C3AE22367592D5E462D293249103EFAC789E3677E8
74DB75CCCC08A26211D4F52D7A5DE807C3859098498929A4A69D602D93E93504
B5077F610C735141320F1BC615E42AE3BAF04A81DD98DF4F3DA6C7C3CB9C3723
A05D17326EAEFA718166D92384949B87AD008E5588DE9FCFE28882DABF72FB1A
511076D6440B142BD70409941B74DE4B211B9301821F9A5371161347B124BBC5
9A215A4048920535CF7A543BC804C1C8059928586EB3477787544CF9A910A184
E74548E05EDC2EC1327680EBEBC49EFF1C123C07C1E756F92D567FE1162A8A37
CBDDA7A553FF77FD3120A69EC36018F6550A7AA8E83EC74A9440C93E3BE797BD
7A5C741982CB88015F274C64982C5B86E057818E02D8096E1F56D8759534C134
519AAB848994821E08CE3E2A76F66F02D7A2E75637530B5D49CB5B2383AE538B
C9EE6A57305265B8AF1E46DB945C26B7E3E1A65B5BBBF9D5213A6827EC0266C4
8B135CCCFE2D08F11CE893A6CD4846BA57ED1548F3AF4E1769236288743D61AC
E4FDA7CBCD3BF97C4B1158A7183994D0AFD9CB3CA534CDFE4B1C545718655236
84B95FF75E3FDCAD1944BDDAE1FB609F91A4175C01AC54F47B3DA21057BAA30B
2AAD12FE62DA2541D93D6578F56836F3FB76552913EC0B61721785FB4590DA34
2826B5500888CEE77BAA94D498C95F0B5948FE3A00510F6B547540264F9CD061
4DA121B83FC46D3A0D23EAFE17D995F2BF38BB67A91A72154FA300FD26464AB9
1302B52AF6F11CBC19EDEFB27B933B15162A14FA441518DBB79213A61197E14B
92036B2F79539EE1818BF9D1E6F51303AF2B44C34830AEC9314FF802D326FF1F
907D93339506D6A0462B28A4BC53C30FA3A5098E4855BCD108CE2063439ED02C
8A9D82794E43E3091E2E8C92B729F0F68CA637FCD52429E5A20DD4727FF5454F
ECA36810DD8B9586A52815E19A09DB5BA63C427E9DEAFD098F72A080BED9BF2D
5822799A4E9687B8A79AE76FE984D53C96440D9F1DCD1256688E3ED91BC5E106
B08EECB19C444E7C0801C083DB42F509DFDCC91D19B0FF5465817B86C9B8D50E
902813289540CF89D6FFD6D3FEBD171E62CCF5783DEF6CCF82E1D98049752D1B
26505532BD3CDC6F9B59EB4C625413D5D2626F379641AE6ED7E9101033E49AA6
C62D9E1691CB2D04BF410EBCE7045416F7A281162A2289C4242FE21D31AACD1F
F29AC54A6A27EAB0CECAD3048C7ACE1604DBE20CCA3FE89D8F4B49C4FDD69853
B8856C4D7BEB876C71DB37BD215444D0530C077CAEC3690F59D6D181F3E33F01
1D63D07E046AD1C4F9A7A3EA05E42CB8CD715FE50162F093516802ACE833E11B
399874CF0232C2CACD8E9BA8C02698838CE71E737AF2D21A7BF65FA505AEBADD
B06D1A7E1985CA994046A859C5B21B3E39
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/UniqueID 5096651 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 6 /plusminus put
dup 33 /arrowright put
dup 49 /infinity put
dup 50 /element put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70EB02A
60651FC2E263002D3986B7B20CC2AA08330B9FC2E26765CD52266969A86EE30E
71E0B41B6C1C6DA423D3A7E1553D2FAF26EF40DC183099322D362E4965695C52
9FC3E5BD7ABD743CDCB717DB10372A722A39CE53FABB454EADE2179C4CBFC016
A8E893C28EF549CA1692C8D8ADFC471DCCDE266FB4E97A1F3035801F3F034D44
AA30F4195FDFF64E5149810C51399C995C41F638C0159BA0273665F073BEE169
9F55E98C04ADA341905B2783813BD1091D7C5C97486F8C06F00A26631DAA7900
2373737F68044F28DA2CAAA7C622633467D05487681106FC98E79B4CA0258E41
04C7AC3790B7A329ABCBF4B4C3DBE9D1C6A55507AF68C2C75E37D993CCC2992E
44FDAF3C986E8DCCB7FABB75E98A621798C1E87BD7C8C41D397AB04B4CB4BD42
BA2713BC2C3D5E1F70CD1516D9E312FA5D73C690D0992366F2C69B2A03C253ED
0732F8B8F0282EEFF298A0D2BEFC088232C91879F95219AA943D9B69F9D4004C
2E75C6F98E34004B8AA8E0B165A5E607350080E8CD541A44E25DF8B8D4FC49A9
7F439393AC4B605C23B031E2F53BC76393EF2EEFD624C269AABE30F2E054E412
51BA3610098679D40E1DD639DB1974BC877296EB6359852ED0E413BED24DCD4F
6A554037ED39EF1D22BC85244DE93A50825A5251B7245F0268A4E348FB853143
758EE97BBC2D74D07494F33A8B76615E411B0C074252EF7ACBF8400F7FCDFA07
D47918D82D2A77C26AB5037FE312A5EEDC407E3B3A16992FE2C6845644161994
DDDD3D586BCC6F5CE3512E14A4E27EFE9A6CF147156ED2EBA201CF569EC4814A
CD8F52AE1138A704300D3F7551E0526076F9D432C71358CFA6F775A541897C7F
BA11604E76574DFF04381B4BA0E82D1AB72C8D503B7C70635A29EA94FA4A5E61
FD6B04546BE26C647AFD75B7F488259FA4F6F54AF90FF4096018A0E0B96D337B
AB0E44F16801CC2610DB5202BAA400FB4067B537CB59707DA066D2967483B564
7EAA9CC3048E255B5614D34D08BF5C089C8B7304AFDDF88F35E12104F7147B34
3A96525969FAD088E0E49984386C37724FFD1BF16D4EE7342B30F7493FD84C52
096A7A75C3BC20FBFCFA3BD60C8BEA70C7ABA0033C35AD8E2203BE800DB246DF
C2A5B72D4B314BEB9A82F7838684F313511273ECAACF78FCB61D21CF686E6C44
A82C7F468B581364133035588EDEE36A54751116E64BB9AC17E91D8ACF36161B
FB30F06E69D1AEEB2A89A0C5327ED24846C993DDFE0F9520A79A7EF35507B23B
ED162653BAD7052C59818F84F5AF6679AFE951CD2002CBDB9693EC6FBFB6ED49
E37E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI8
%!PS-AdobeFont-1.0: CMMI8 003.002
%%Title: CMMI8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI8 known{/CMMI8 findfont dup/UniqueID known{dup
/UniqueID get 5087383 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI8 def
/FontBBox {-24 -250 1110 750 }readonly def
/UniqueID 5087383 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI8.) readonly def
/FullName (CMMI8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 68 /D put
dup 69 /E put
dup 97 /a put
dup 98 /b put
dup 101 /e put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 110 /n put
dup 113 /q put
dup 116 /t put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBA9B440A6DD72BF8
97084C906B05FAD969086ED21AF0AA1471613182B26117D7494DD9F9270EF3ED
8DA4D957225F75D060237B6DAAD5A0AE3E702B3D1C437835B93B8AF1F9E7D966
E739CF3AD5E256F90286A34069E5BB4122F94F18F3485658D0D25B938522A879
8215A417CA2CBD20F71C5C5FCDE21EEA7BB27876D93BA667868A419287FE59BC
F538980597DBBA743DBBDBEBC61E3286DA7977833DC8BFC5E52FF5DF5EFD9A92
D070EB769E31E760A50FDE012DC0057835E8B9B046FCC83F1A0C40326AFB4E3A
0CC3BFA35FCC64E32854F32EB7DF10A19F95830136BBB8139DE1663B7FD790CE
464EA431AC109FCA0E03F3E0D355FAE20AC8774D6B1CE233C27680C77DDA7356
560A27C75993E8C980CD1E3B0683F7E8A05119B3AD567DAB4851B66E418687B7
F9B21B3BEF607918D5973421B68E65DFD8B6C8DFDCF1CAFE2637D365148EBCE3
FA4CC00052A2A522205EA3AE3461CEE02042E1A3F11467CB6C8C849B200CCE3D
0BC188EC7B934CBBC0AE2BF5DEA228181DBF0F774119F313516E7D97FF532621
9278F856C166CA6547504F34991D588A0631A5CD06363F3FEE9FA0772C783447
ECD0A200929CB58EBFB6B72008E4082B5D14AA560C24915B9463A92F38237886
C35CBB2D4DD6D0CA8C1D4EC46093041C6181C2F6586EE3E7D4E647A107B6DB23
DAD9AB5A0C2905455FE58075EFF6B48597078BFCCDD84812B98986F34987CE49
7EFB19814F2A58B0233A59331F6F8EB66401F04EE7B1ECAD9BC90A2BCEBE213D
DDDB1F75C83609ED6A669A0CED58B2E269E76ECF73616D94F13CF827C9BF354A
E82202988DCFE856786B8AE569AFF3105B55C72C58D310FFC0E10B2ABAC8DB06
40D5F72E54770E9DED1AF4616008595B8481E3D9AF4191CC9A5BFD9DDD01C9F1
FE7165D21E488DB40879E863D470CB31CA06E5B5F1F8C3CCE04B697CEB0F3557
ECAA358D2EC2B370519CE06138FA702314BA01F1F33881825EAE1230098BB3C9
59666983275CA4E8D9DB34979F86535577E79393A72F84B0F768FE8C92692907
15E9FE9894E98A0EBEA490CBC8C7E5A9F3E43B24C2C5A4BCD71DAAD3CC0B8B82
AC13933543E295C163F61C9FD18371CB514493F90BF7FB460C029B8DD2E2BF05
FD66B451DF277864DE1EE42100BF29E01A50258C2758F3EDE211BB3457B8243C
20BE72983FD6FA2581C5A953D94381E32E80D6D6095F2E93A5455C101BA71E8C
E560D4694E4C167EFA25FB1E9D214AEA745CE34CAA5468FAEF8F6BDB6C6BE8F4
3D58836C26A2392E4C4DECE284A90DDB3858A16D6135FED655A600929DE71605
6CA32F6851A2A6F71A9DF3D5D657593BB729CBCA2F4B059365B7263DC08AB211
9C547096E6427F6AA53CB2EB87DF0AFE2ABCDBD15D7EF228D3396413B83C6B4A
79E41F9BA55A2688F62A10472675E5658F151F9FD6634EC94EC0682C17448024
CC1633077C07A93E4DA8749D974FB8F4332B5DECF97D749C10DB60D4C90ACBFA
E65AE928C88BAE19234690EEABDB30BEDCEF2660D7464D5071058C30C572A2BC
7DEE5384BD7614A4BEC4C84E18CF7EC81C810256E8CE6520466C033E2A36D3D3
5D6074B3857415011D8D9D49A474D994571CDBB89AF92BEA879BEBAF67663F5C
17ACAE809C2231EDD0A76641BA52FA7B19A2798D54A4A9B62C42F9905851229F
2CEE0191C8AA5AC12BB0CE9E5E3E862683AB57DBB4AAD6AC0FA8BA4F408D41E0
755F72B82B7C18EC6B13995BF7AFD66AF4BA0EA7523DA8B75EE751744EBA9CA4
4E8BC1FB37734503A5B24FB9F2C2D07A47CFC477F02413D55BD7DC180B0344E8
50248801FA6BE26C97F397797F5F9DF762967E7CD92CCB8B2E587C92177619A4
BF8046CBC72C6E69DC78B8CB6B7381A290080EF59F5B9F29C1167B261C932E9D
010D2D14BB425D157F22BC0305770AECC5BC80000F8CCFB9930255A68F299ED9
D3B5B83A2CC00E3305EB281E1A7054734661B175C6CA0AF168790985F173DF03
A8693B677BAFE23C3CF833FF6463B136FC370E4F0C29E322DBEF637F62C33CD9
B0A8338FD67EC628E3BF2FCBF7CF0347D5CBA1DBE6DE878DD670176B85F69EF2
3C5CCA1BD2B8A385F113EF1CE522F5A6AE053B9C1E39408C9459DE3E7FE2C4ED
77F026B0081BB80D40185458139C16333EA27F43EF1204BFBF80BC5301B2A3AD
B10F7EFBB4F5B7E04DA1167F68BB6D4049440B0F57385FF0A95E72760C6A12F8
1335BB31CB74081FBAA319180DC00113CF50CC5A41D2E751E055DA1429CD75BB
0060C21CED634FDA106C49A12B356129D010E29F2919301AA7F80222AF3905ED
672FF85C9897A70241E8DDB9A53034B6BB44E140D9E739848E7A782F24B98AC8
00DA09EBE4532787E5CF3ED815705F659D8E52DC2C2D4949374A3BF192BEEB99
1D9A90A4F3250BF8A1FD40D91F5B34AF2CC561FD02FED712500B24330D87DA9E
4AA46B6E34BCB40B1F73A1DDE07E002B9478E9651D2BF85E67585B6ED812BE03
A594874A235B1C1840C4BF4BA6D863583D8C12DB49EF7F8CC24DCBB6B21FBCA9
378F3E2DC406291AB324571F76E0805DF8826090F0E8B50599CA58D124653D16
16C782B01C91A6F3DA6346482E3163D28D95EA49866360147296838A3FD0CC53
920F91D895F839CB61FFD2FBA296CA4C6304EEE579782AE5FD33D0FA652BA7E2
CEC7C01DD0D3E0D56E6177EE5F609A396F7FC8EADABB465DBA7F384E215C4DCB
E64F807A50A461545107F9C3F7D7CC7D33E6EBD6D9228B1DCBFEF160703E6129
0DCED8D45DD54E2A36E698A616E7906A50901E453BDB2A363EB77144E9EA6F2B
6BD927495EB0EBA5755165707CCFBF8759CE5856881117C7F3EF6D494EDDA7EF
E499BCA56C86467AC573DA9C2724FCC74BEB331E736FB093DCB67DAD42296655
415D110F2729BD1D55E5C9CCE2E724116F45FB2E66AE0F790258851A5C808762
68B8A110BD326F8D3EC45004E7CC08DA42F6CB80A6B6E7C286F139534A275BCD
2F812993DD9C9A1AEB5E7E4BDB4805DFF3A7030263AB060C9B74F0C25C5B9005
965284884450CC2815DF28D5F9B0496DC7A3AA85E1E42741E1538797175C28D9
FD904699C771FB066397FFDEE8E8DD1ABBDF67E6BFEF95BB700A7C1BA91354C5
42EC3864F6E19B379E79A1CC3C786C0DA146C6B0B8E507ED58DBB1F12F613A98
0E1F8967991427A22ED323901C4B83336CD343212131E8B59C2F5D232702ACC5
7891BFD4EBA5D0FA35AEF9F3520CA82D121BF6885BBDAF15248A9E4649ADB94D
0735CC4D14E1D7275427D00C8E709579612F7F74DB6FC218C10C278CC63E2AE2
37EC996B10C0229D687F0DB5E38A8C4DAFB3DD8A9E7ED37186FEFC97790A1EA6
636A88FA9FB4D282234BAAD301A1F3AD33F252C5EEC49410562FC52809CEC466
A0F6D148E9AF19D6DA2337C8283FBFF6005C37AAEB0B7F7217A8DC6F949B9984
72DEF163E4D5ECE4288404448C96A7FF0AC76F732D50AD63A1D286C9180E80E7
C218B1F48E3034FCABA6BF262CEECC284AC29E9F3CA1CFC1639A681ED66C1FBA
666F073D45C84A286E05FF809D4764FE819B6A330E73695CCF2F448B4D4EB4B3
F63E94EC289807A2F9A1159CF328C002B467B19D6E9454CCE36FC19E0A214190
B251818DD456EF658B0398E275514B72D9C1DA5F806EABCF1DD56BC025D69FC8
A0C2FAAC1892B64D2AF79EA2F57F103CA623E440307600D50E783FAA998EBD40
51D23A0CEFF8D8649B48B982DC38D613F882DCCAE5F51233A641B3CFD783F830
D984F116DEA3ED8F0D3369AE629A006BAD4523F8E3C7C6B39A6C972508B67AE9
32613F28CCFFC4BBC86CF31A0C25C786554F7A1F3DE97F5CFD1A941F775067A4
784385E2D02EE1FF886701B1E87D966D3F500E15591A5012E645837FE2DBE3E6
A3D375C6CA0ADBF96B33EC3FCFFFD888D7344B31D40427B8A8BED0FEC6FBE038
1FB5F0714C4B5A0E607E215B5B7F76ACF0FEAA4C9790EB7E13C0E3933B7C63FE
5B934EA34F4B741C3667BF1735C685CECA63507E6FB9EB06AA010311F12AC1AB
4CE3FE8D1EA1EDB3C700BEBA516FC71D740B1CA1A60D4578003973CC3EE21DB1
58FB1CF7E2EAEB2A4A6C742EBC3575EE6378531C6EFA6E6986E68B8E25CEEA67
A59623FC1ED2ADDA9D72DBA627D179E47DC7F5551E07EA4D54ADB6CC8109D340
7279F288E552EFD79C17DA3431E53EED66D16F24BF86468C2FE7EFF421560500
12FB048D6CE2F370BE4E560F8B4AA12362ACFEBC839351C1D5100C625B14CFDC
747B66082D4AD5474A63EA0054E9C3E6295AF6B133348487B0471395857F4B73
4BF8337DCE2FE2E1A4EAD7E7BEDC822BDDCE42B79B308C11897C98E3ADE253CD
09CEEEC0CB1DB66AB072E36E1E04911F40B535B0FD85982C21B8A587D65C38D2
DBC5A07A0A26DFFF7460F10781069490AC1B611CF7312A14B4AA6005A4582C5D
336BCC30EB47749193BE8D457A43F54204B070DF5AC2057B6437E23705C7FE8F
7BB150560F7044BE3E48EFDDA539FEEFB0D2A7856CD4E405FCE0F5EB190D91AE
578E2EDEB9ECA218573BB1A8EF116043A27DD17A4047BCCC7C5F3C563A910778
45ABCA32C7347E6180ACC86F9D665FF025DD8AF514FC3724B5C3510F3C37E0AC
5101D1667C6ED4E8F37F06CC2BDF66CB5A9FB7C52CAD26344FD1557571336A1E
1E340EBA149B4EB99016D1A411FB874914AAB2A415CE3F5FDFBBF5AFD7959B9F
CB127BDC68D2A2F3F07FF3D4FF32046C0371CD2E68A6471E46B08413FC3C7A80
A107EEE57979DB387B2206D2810DB310B7232B2DAA385256C8A58964B512003F
A0C24ED21809E2576229627278118107B9C32345C1EE8C0CFB452CA362379369
31320DEB5371037AFAD093B61E8AC7A6DCF7D49C7F8EC32DC0ECEAFD7E892810
039570D2956289B15E078C2545911BF535F72F7DAC619BBDEEFA855BBAA81704
18F7D351B0936357085A32157AD8E27438A58B2397D69264E748B0B8D01B33F4
D04DC59326A7DED39E247A1C1A1AE49382BDBDE9478A1CB48F88BDF14A268B40
A40B9FBFC4C87FD3DF1EB2464C3C14E36CA41E09EE0A9B75FEB0769F9ECEB1BA
EBF73B818427FACDBC33BB95B9654F31C59A766E931C698A8608F15290FCDBD3
5C535D9036A19CB7B55BF54E96F9B2206DC71624E2E55FE632FDFDEC8757AEA3
1D83D190ABED5E7A7AAE2F41FCEBC7C18626BF58F9E9F02FBAE0C8AA85E9DB21
A3D8907522DCBAE4923C6A2A09FD2F08FE32215C544AB577B337D929E625E704
E041C2381AFCFEA37F3133B6CA20093EFD457C772E428325E56C9CBCC447EF9A
05A8C3F28017DD4FFACC51B38E4896C5044266EAB4EB7C13FE855E790DCF8A17
B61B1D30DD866BC57397EF6297C4891451FD6A5C6AD6D7446F58F56A68650908
224D9F4C31C6906FD29BB51DC947465B808438E6260325752808963C808A4AAD
60422ADD62CAF315F6AE92FACEC55D5B682089AC0BC051CE1E2C06A3874736CF
0DB5F7C8F178479E4F11665402781D80397C75456F5CDF0A4F382A19EC6AD64F
71A9275264800E178F212269154DD8352167C57EBC0A38BE794AAD1601C8E541
7E1AB8E969A76E1EB4092644958FEA2AD29635E70C4DFE2EB0D9B3E1644FAAD9
B27AD5466EFAC724718962B62E7B8C32F412B69DFFEB792587D571FB5C591D95
4CD441662CD1B07595E245FA537FA9EB5A20A97E5C9251EED22C9961B48B25ED
85BB7524F635F9CBA3714C6D60A6BF920C45A64F4C366C1F9D22F53084997C9A
EFE2D79FBE3347111F5093E271DB7E3770B35D253DAF93653F6A23FA145AD775
AF11E188EA0428137D9A14542E3EDA6F7B2E5AA86C9F3D3649A85ED2F020C696
01A339FE6D7E42BC548C8F92A4E3809C67A986C99418772403D16D0E8662595A
1F37563671D6DA0F36CAC99DAA8FEA215DF7D45E61314915A30A22FCA86A50D5
2FF2EF08E240F9FAC030D92BDFBE40F1972DF413E6B452024CD11792BFDAA2D7
C82716528AD4B3D637BB43E748336DCC86A952BE96F1EA423E31340FCACDC1EB
02EE932F58734AF3A5B2279361B63F1D824EE3BA9F4D2EC7B33A300A1CE8CA43
24616444176DB8099D85AC68329B1F85E4B5B16F3B396FE2AE7774F3065D0203
AA140DC128D6F935C44733EF585F89E8639A2096A225A2E5E49D447D8AF9FD44
CF6C1BAD5C5E5262AECC5543EC8199B00B72BE32A0F110F64A1D0D5CCEF38FD1
155D6198E9A343702F8ECF5052333272CAC2FE016681E12745CBE14E1065EFD5
407DA3686080989F6F6D650A9F1EB3A813B070C30C0D3B4A1E9C206E2E4DFD51
D8DCBE9AECF956640A2E79F1B4FD0EB8E0449AE1B8FFEBC43275743B4D7F6605
0673B61EB3189E74F51F3780A91E6A5C6464C8CF7D563D9958D46F39B1A12087
6BBD4898BA9ABA468AE1F24115891FD3CBC2195F75958E26DF8BF1B93F7B521A
C12112237AB23A8E5A7B7D0DC4C53692B35F3CD813EB463C0BD3A6486B0476C6
3B36DA71FE512E5745D097FD4AF5D056E434DEE2AF926B2EE79F7FC4FEFD4130
BB4B4BE01E5C720325A4884507CB51CBA4FFB615B78A4182444F0ECBE4161A58
E86FE1DA2E39C2BECBCF1F1D7B9B776A26078FC252128FA8108CB83F673CFD37
CCDA493234FB93E1550EF8D2DC049ED95B00A8A57834B024B277D3DF062E748C
B61F183F2D72AD075474F8165528CE75E4F40B38B0FAAE45751C1907F8D31619
E88EAB02EEED415F3EE3BC5BECC6AF565D34E0BA2958FF337A2B06012DD1858E
C53DE52C108BD5AAB76C882198C72CDCC958D68EA8FD26F76F04EC1A08B2AC3F
A6D0E8724D2656555DBC0C8C42A3E22ACA7E1BC8E9F897D9AB692E0FB9EC32EC
59E31CCA4516A3C3BFD5411BAC3DEDCE374D48681CE7D67DEAB93F5B5C5290AC
FEB29C5EA2C98095692873D36C7DA24847B66F31E4CA4C7AE5C79D7CE4F0532B
78620582E3731A2A6533A03E7155B33E7CD142FE79F72721862EDB24959B9783
F834CB616FFCB2A23497BA6D99AE34DC459A2F7B3E4DA2B54BED118ADCD92178
66C40F4E60F6E1327D5DBCA645A2A7C770807E6D7E47E1265C753F8793BD2D1E
BDCD749CC24D4AF9315A93F01180A0F9A7F420DA1B87664DA5FD967131273271
9DCC45C3D57EB9B8AF14771E8E751D88B98D2FFDC72F5011D402EC34FD010ACF
D3B0660304725191D64FEE106253FCB3470F1A16EB7B45C1489D3534BF94F740
C2781DAFA5E8A9E7B25A85BD7935DF3ADDE08C960E283D8FC3976FDB4085DBB4
B6B35FB239C28C785B18BE4FC98F3A5F410F562DB5FCA04E8074E4E790F4265E
F88117B3D0833AFAE6E8B8A71D7731BA6F14FD6F217EDA3F8CC687A494FC3914
B84FDC37C8C335AB1E7E0BEC7FB6B7A595C50CF8F0080C8D461BCB8B579A5155
F963B6587873FA31C3A6572740C63EFBE58A2EBB723B7517D2A243F6CB08A038
54F4DF0F6692022B2EE8C6F6B73735ED3166BAC58D9216A06EA6FC7B63B20031
D0F0F99D83D9030B413C2360DD2C553E34BD67851B743C3FDA676AD63C5BD759
9131358C6BCDF05FCC048F4EBB9005899ACDD8E9EC9BB8C5A08E83485047D263
0ED69B4D1869A38068FDA03524022A1D32FA2AE0BF7785FCA8F089152A57EB8D
5467C28AD44E890380CEA0B0E0CD0F6427F2C3BC1A5257BF03D902BE94A449C5
EB8F33DD607BB4E0A1A7A24431E1DC2F03596EB2039CC1A9D524E10B374E34A6
4DFE6694F9E158DD6678BCB0B56BFF435FC4F5EC442E14391B45178DDA235B7A
07AB6EA76230B60456344BDB08C929F9453553452C97E016C26C11B68186024C
D1AF6C638EF54E26AA88856FAF1FA9A0DC5A9EFB7130EE72EB3313510EDB1DF4
8D8E512036A986387D8E96689E912149A342974F559E7CA4621E84351914EACF
7810F41CC0BDCAD6165182C7040F052C34D073FFEE489549EFEF83111310B3E5
F67EA5449D3D81DF1FFD64AE0F1A760922FC629FDCC6AB0DA66CC29665BE386A
4DC43CFEF3C5904356B7B2EC0AF36BB4FF6A994C8158790674A8EFF54A36B7AD
8C8B833C1D1FDFEBD7D39122BA602A67ECD2EDE9D35C2628EF1FE34B2CDDE154
2247242DB2541C5FD49EB8348536B83A67E718DF66A627D7C7622F22B5D3A3FA
5149B224F82B72E4F2A1B22BD6FA7018B45A404E66E2C6B96476A39E5D330AB2
ED04E2A7FE38D3A88B439E804F390F4B7893506FDB87F16DE8E2A0E5C3E71753
63255A9FC1B2C1734066515DA9C0C834427B24FADC2B17AD8194090616F5A9EA
A881E9D299E6AF933CAAD62190D6A9CF339FBFD6BB14AF2EDFF4589FE67757D8
A7D3E5966814C24FD82C5E4A0F0087466B3D8D4207590BED21C9A9D57E493C5B
6C1F6FA2CA37FE612ED2C99B9325BEE19E7447745C70E320C71AA0F3FFD0168C
103252C3811BF6033BA5107B0D628647676BFFFF54A950F062D448AA37B9E101
5A81173D926B1BDAD2C7C24D0737FC70D9B88F85AA0EBADBE69EB375EF5515EE
4AE55C975CF75029C5582417693B2263463736E840602E8E21618250AE71E5BB
F90AB92E4BE4FB34A6ECFCF1D9B3EE71E27B10D2A1C87897CA75FC770DEB33AE
C92AABA192E06616CAF1F73B8A39766C7D5DEFB684FF560405E6E20F69FC3F51
0C3904C5D1E07BB532A5605A6EC0E426740124740194F1C68701F7C9497C8E75
C2F508262A2530BF8F8634AFFCB7D7AA3C1D22AF98EF4F0DA065AC5F7EF04B81
285A16CB54577A3B96F6737495FEA903027764F963E5614A74B1A01267A58618
69A853CB26AFC993114491A5AC6091425A76CBFDB9E816B345319B0C8FA5F5F2
1EE9C0E2046E6AD6A5AC4A2C7D7F710B7EC61E0C5D115C73C10B0AD24586BC43
7119FDD332C0E8D4429D98F6E8844AB41C461E7DE81CF88EF1B4ABF12EEEE83B
CC98C51C0F291782B0AD42AEC73CBB7461433444865466305016D678184B6589
494AE8674BFB9638FA5F2643951E8A841D73308D25EF6E692FA2B832B8BC8770
9BE3F3E398745D77522BDF6F8AEAEE5A312631D6CC6E5912C816D7413479D18A
913DCA5E8C2F5030104A8F59D3B7B82978378E9166C9D777EC3A6220169DFA9C
7372B8C23B7512268AB7343B490FA560A1C2900D93C76FC41F52BD788EBB4065
319FD186E47216D3D35DB495A10E50556749712328F971446E9E7A9A395D7DC0
6EE4DF346EBB92ADD0F60D49966CE0E3F26E964BEC11E273DE64BC38E6354CEB
89D17A8C0729AA5BE6BF7D4BEF51CE3EFDEC136CBAD5FF550CF127FCBB8304C8
74FE5EC521246998F64E124BA54C1978656E323B99AD2217946BDEBE1014B46F
FED8F931DF9929614A3E8FBBC5EFEF14EE7D5AC5F1FA4D833B2B3FDB602E9B73
E8DB3884737B716A8E8CFEAA802AA756D22275843E572A30951412E5C453741C
0AA52E912EE47A147317E1C74523CF0B4F6E4D964B7A7766699CECC9C3FCD79D
2A73D7BC19A548BF981F21803351182C8B1771CBC9E00FD5ABE8DAA92517C5BA
4436451054C99968D7084FB92C83927BF4F39CFACC85D0F83BCF435FB7819E63
4FE6E01CEE0F51FD5EF93AC4A302851B8EED4124BEA3E8E4DF661329FC27DF18
456A4F07EE5B2FC954CE90E4F592D48278C39595C6408DADDE67DC19B6673CC6
D62F44F36C207A00AD9860A2394411E2B65799C3FE81AF2E26860026C3A8ACC1
362599BD0E5E3D06ED0BA9F483CFF5BB425D720541515128739F54C44B344BAA
484202571264751164830EE2AF4D52AE4F504AFE4E9CC61CF080B6B03C70F8BB
5A67BF13600A8CB61CA4A11CBEDC25EB5E74A62E329A4A732A6202361728F6EB
D0ABB4F72CE04553A29DDC5FCD9796F13690F6BEE35DD7D49F894282003AFB1D
8F86E231FE5EB36309924155E9686676CAA7A79233F8CACA1CCEDEED2DFAE6D7
CBDB0C2F847FBBBFAC7D50EC84658C2D29A1F35CB3B2B5FA15D7AFC3109AF917
B6A39018EC6F8FC55CAC2CAA7B1015067028077860315D1D36A548490C515F8C
8E6A69F2A7127947C49168E23A668B808F9D48C4178C38C9B4268BBD83FD80C3
490E4958994B85474C6A55FB60D46AEFC11E0714267DB8D19D3E7BCB78D61A55
22D86D6A10B63ACA51A733DFED08C5FCC6A2D0C253E2E250A9B61222DA1D6444
4C84D0E6295245A0F581C2DB9B158020DE1BD99352780382899BB8B05DC08358
B85DB040ECDBF08FDA3AFFBDDD72DC8ED85F05F606BB76F1A10B79E79ACF9A0E
37D0CD9137C1148DB87C961E6113912AFD182C06C1EF79E4802C8C8BA5D2F572
4BDFD6D0B7A7FB24A4780CDCDE490EE879FB1AB10681AEDA3396CA1DF8A7940F
708DC5243F3BFD98AB725D431B13310419F3F6491E6E688DE4A2DE76686F4A61
83EB6C3AA99F20BCCE1C72601932A8007629150933439370EDEBF45170714A38
E5CA8370E4882B58D41ABF9CA23FEFB4881D808DCD838842D60164210698B01C
A2BDDB265C08EFA2E4B376BF29FD8461F326CF946B877941B85D04DEB70F4860
92875135A76FA33A1C11DCF5A1430DC2254D1F438D85DFFE460D7B25C25682FF
336DC5A5CF68C2FEC391B0B2DB383B545A2C9B66E26962CAF2D7EA9A7EE53024
FAD277A3F23FE2A9863DBFA63D1E2B003B3F4F8938D00A19D6E30B85EB2B51B5
2B3B9D3F19A0978479F44E2401CD6114A7CB21ABE5FBBF320FDFBBB48E54A6C6
AB01FF45AF5EE7E474814CDB8E46A4D535628885D0034514E97BFFA44D87A247
44929B260C507FDDF319FC300851F8BF1EC7C13A9DC47B4C3425A95AB8EEAB78
C9B99EE13B642C4B0B732C07FB2AFB871763FF0D11AC60B8AB4DEF969437F586
B058FFDA94813D67BB492CBD7B76CB1048C6AE0F7A914ABC04B65664490A979A
59FC6747F6AF6C63E256A6EAFB1C765C4DEC0FAE51A9494C1A93E695284FFC7F
6FD5CE8B90041B14CE6D09EF186D9814B98C41ADD9798BF42744029D7D0FBE82
6DA0DBF8FE393C849A27724C6B0C2864016CED4FFC7F8ABCAD4AB3F138CE702E
EBC0B361F3835A665989DDFF4353EA8E186CD373644CF55455E6B5E9C3126A6D
35B231E6011AD45EEA664CF5D755882D14811EDDABF9DD67DE1665860F8B53B1
7968AB5B9D3A626D49FB43BA0AA5AF13062DB9DDEF3ED240CDF16BB6897B5082
86C0B3A27347EEF8BDEC5321CC89C3D805C7533DA0952421D386DFFB49C27EDE
034DCC447400BF78227253D6F907C48B06EAFBCC8F3D92F30DC5F6FC6A838A00
E930E454D49B605C085C8CBFDD7E6FE84D7F2531EA89ECC6DE9DF07015974E27
4C65DDDE3F43B6246FC5028777A056FDCDD2BD18C7C5C6C9678305C084800CC7
B27EB5E810751B2E6460A6AD4D7D02F855BF636709D0E4A0CF9B17522A21E5B1
1F347DB43DE175FEDE90BCAF00F64BE6B66F14E35D8A3AFF78DA9E7FDF389BCD
D925499AAA60C0D5F3124AD520CFF5BD62CBCE2200017F587D740A1304D3E845
AEDADF89A9ED96CB1CF6562F86B2E79436ACFEEA4EC5208123FD90E70C775E50
07B0F7E69655042B3422E01A2678E273F87845A3E0EF7C7F8160C354E5C399E8
00F0F2C4D53BCD1064E951F8A4C02E28BBAFDA400DFBA8A4C2B07C099BCDE407
7F68BA535677A5EA683F7A1E787AB02F67DE5E127D7E934BBB1BA9506B722344
1CB712A1F664B60D40A1A3F8E21EE237302AF6C4F6D25E30CBEA070E9213FC59
7E4BE7476E72C29873BCAB881E3209A3BE598738744D87BFA504D5C6B49D0ADA
781B5BDBAB0CD2EC732C6959F202E9B601092488A3383D4AE78B1812174E09C9
FCE16305F4136FB1422BF5F388C8A0A155BE5F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI12
%!PS-AdobeFont-1.0: CMMI12 003.002
%%Title: CMMI12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI12 known{/CMMI12 findfont dup/UniqueID known{dup
/UniqueID get 5087386 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI12 def
/FontBBox {-31 -250 1026 750 }readonly def
/UniqueID 5087386 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI12.) readonly def
/FullName (CMMI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /period put
dup 59 /comma put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 73 /I put
dup 77 /M put
dup 82 /R put
dup 97 /a put
dup 98 /b put
dup 100 /d put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 114 /r put
dup 116 /t put
dup 120 /x put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBFE3573BF464E2BE
882A715BE109B49A15C32F62CF5C10257E5EA12C24F72137EB63297C28625AC3
2274038691582D6D75FE8F895A0813982793297E49CC9B54053BA2ABD429156A
7FFCD7B19DAA44E2107720921B74185AE507AC33141819511A6AC20BC20FB541
0B5AAEC5743673E9E39C1976D5E6EB4E4D8E2B31BEA302E5AF1B2FBCEC6D9E69
987970648B9276232093695D55A806D87648B1749CB537E78BB08AA83A5001F7
609CD1D17FFA1043EB3807AF0B596AF38C91A9675E2A53196FEF45849C95F7DC
182A5EC0EC4435A8A4B6E1CDBF9A5AF457564EA72BF85228EB6FD244F2511F5A
CA9B71A65D53CC06EF5F7EC3A85106139A4D312378BC22183C09A229577B793A
1B7422611C03E84BF809F46C62CE52D3AE29CE01C32B202ACDAA5B72733EB0AE
C31D7EF7BA88D2D14F85313F7A8B9B7A5B124B03AB923744D336C969E5CE304D
3AD977A46664479EDEFB69F113024E761C05FA48A54072DF9E12C2F352ACB3E6
D04F6EEFFDE209E7FA3DA22E5B1D1409461F4286B7F4F8251B44E5CB7805762E
E129FF4A06A7458F3191926B1CAF70E32C6571AD2DC07C34FF62840896F4D200
761B1A7FA356526D1E3AB4C542AF13623BAEB9F61B1BEEF79A9205B1FEFDAE24
8799D516A9ACC30BC0139C63C9A0523E9D5439213B67D490C96F902958779B8F
68BD8E9FDDCE8A3A2E35877DB6C94B7612382ED8F218EB1157D2ADD090A2448D
10B99FBC9211C5629ED1C61C74FE93041E5AA03EA4AC3FFDA00C2B6E719CFAA4
262FE17F66804A6B54D3669836EE4367D2A2991580C5564463C973CA0DA38AC6
922716E13B4A807B50304B8826CEFEAA47C305FC07EB2AF25FA7945797237B16
56CDE17AB0834F5C97E0CC5741B061C6FF3A8DD1A79B9A173B66A6A750538E26
32FBC92E75BA15CFFE22A7302F47908547007402569158F62C29BA2956534FEA
7DACF1E507AC309DAE8C325F2A6023D2FBD81EF42146BFCE6A16A6310A650460
7B07BB7647C8760FADDF0DBBCD3DA6CC4645D1732DB3A22D8B76E1D2D48E4D4A
46F4BEB80CE65F3517283A1AE08391FD1C10ED452133706BC6725AABC80107FD
754A8BA47B0281D479F052CE26A723EFFACB79B213041A536542AB334769A2BF
88505D82C498ABDD5A73EB539530F47CAC52825D16A969C8BB56D4A7F2830B8F
CB63B92B576E7BD922A4B25E634751F8A3B7C4EBAFCB373EDC8B8281B1D1371A
7844E9AD990CFF09F0D7ED73A5CF873D2D5C9E8A9923CFA31E1A4B4CCCC40760
8B3AC8FC3C88BC08BD7407725281BB879A1A822D94997826418F1B89D303F2C0
BE7A0102E6F529630CBF1BC5BF3E4578C164A3DDE45E62A957EF3FB7F0FBBA6B
CA1E79A1ED195B6A11CFB345B663C5E72FA55D80476F604F6C4257B51686AE25
8F7D159FE605DDA0AC74BAA5034F29FFFD403070013C6E2D8EF6A0990D91173B
D5A3AEB98B64E412991505C3CB7C2CDE13C091FEB3DFBCAF30C4C19511102300
135BD5D444BB55692013F52056908DFAB2ABFACE81A58423ACEC59344CEF7D4A
C5A3EFFFFF70759BC3E593D878281225060B97D1BEE6B26EED90571FEAFA1812
1115C0EEC892F5DE6FDD68321A0B3F10A2D771B79BD85476AF6018472A499A86
07D64CFF4550866AFE590C471C80EB12CB3A989A60BC7BED39097C12D9286E39
14C7952C4C64820B4DE44A1827B7B0B535244E93FDB80036D6332F90F95B472D
7031E7E3819E881BD0313CFA112EB3AAE943C99C47635CCA7E34DC0306C04E5D
2E9F60FF037EB11602BE74E8E6B711392E866E3E55D988F7C856417A2B9C186D
639819B4786D039B77F8578EF63C088FF28BD08D8353031445C8498A8F445BC3
D08923D32AC04BF3CAFEFCCC1E77EA894F4E846F47EF62D6841B8D8576FEAE8F
90044626869D04D61D64D56E8C51AF8C18D6CC3FEF3B6C4F7D56FE3260354948
10104F69B117FB8269292579A7D52FED688C663B643D8D99F13956612271073E
1A337AED059B7A93819A28CDF01569CBEB51069D22ADAE25C47355560F402B2E
8C9900DA82B79C64497C8494F42FABE5AC41791C2010D98FB7E593C744F250DC
D837DB0EAA4F75D0016970F3AE8359878A08CF9A697A06C5EA945819151265B9
1A12122B98F79185DF852257BB4798E7DC03712EA6ED34F6E6AE1476788DBC33
9229FADB8D581BE1A63F596698DBD6DB98A092F67197A4FD4A50B648F2691875
EE2495D6BB310078F516785A0CEC7EB6E8305FDBAEB1D15690409FE32DD9CFAE
DBD3866FB63EBCAAB73E3E4BE5D7F3AA44793938AAF3F8341683F0790F1D46A3
60CE083F9BEDDA22E0639A92393960F86602216FA51E2754BC2F4CD0BDECE3D8
FFAB7E0E49613DD4956C9A10AEA798BDA1F756C755BEC12147ADECAB0FB73B7D
203A11D84DD2AB5AA98FD38C1C2573570FD49A4924A94A106D2A7D850E793608
FB135853E8C4204441CDBE697FD0CB330B1C3596F32D2BCBF263237EAB362D09
DA6F531B40384DC91F30674760CA7B64BA1968F6A7FC9EBEF431A1AFC5E76D7F
2D44DCB7F61C7F6B16196B3E8B47343F572DBA8B8B21B43E35BB6B2DD5C7982D
244FD4304D254D6CCB5E8CF70E77F50812F41A988EEB3B26BF0F6F69BBA18077
31134B5A5823D10FEF6201D045AEE7A24E0F25376E9FC66340C56C05F6CD810B
724D85CC4BB8D789834A447CBBA159565D08BA5793D8599035BB5063271518E8
F6C50E7DCE71B1D186270DDC860C6DC0CD506010EB5B1FDF6BE47A9A18CC15D7
D657E58BED9EECAD5CE5D49F63139A39BC52C6584BB2C3264D51BD584B40F8EA
AFCD8B83F548594386EB2B05CE803105E84931DC6E7A1398073D48E130E0D907
CD0F1ECC3254EDF5D4DDBF44415DC9BA66C673820CDB0FDF033D59BE2B5EFCEF
01FF9D33EDC88F8D522E07F1689D024DBCD09A16A63519E1764C8630FF36058D
CFC07027E0ECDA01E0E85B166C613B22F587B4D355EB018BA93E92A36007B4DA
287FF5A91F7D8A0EDF5554ACCF45AC8066E88865C5692E63EB99CAC81367B605
8E6C19EB98EBFE0D2D161B447B9A70CDD1122C7B78A413369016E6D8481E2AE9
9AA97B5DD0ACC9B0820F7742CEB2F46F89F3E2092621969A88DC0156B4F941A1
6BF1546D4B136657C47B082A8A35FE96016BAF3D9679B8C32EDDD6AE6DF3BFB5
7854074FA019707FC22BFA82299E72ADF9A980AE29A8E2434277E58B01F6B03C
192E1E25DADD49F6E3F69799AE62B56E00B60A031BF8721DB8B2CB6D4A4C15CA
AB1FDE010AB7DC0DDED977389B101B8E53A949222FAA126656E02817DD32B0D4
A49516CEC2B97EA7C78FD66229B044EB92F502384BCC6CCDFFF995EABE3BB7A9
50D5D1AED861E7D3BA8D333026C673C5762712E763E59261426044583D789C67
A606B96F97663F92BF104CE02FBFDFC521EC0D6670B7D4F85A229F51426DE912
3B729C4A535FB7C88D0A5E78074751B58885DD6BDD2DD9E9C83F105E8CF63DDF
CA7DB39D0319CA7CC2E73F42747F007574DE25AE1538B4D493D22D0D5F0F80C6
5F6FA3937C8391DE2F0116F81DB2DB0EF751EC838A7F85F163A6F48804E84B96
8D715EF25B7E2A5CAECC558D80F421052A1D698F3B8452AC27E30A4E6226E3CE
084C8A83ADA0818A110923CF7AC7AD4CB92AE4ABBE0A9EC1FF935FD02774C1F7
92A278E513012AD17722A23C55EF82E18F8847B5CCE47F4FE3EC508BA563F7B2
AE56C94285A18DED4D432FB0CEFC05A20BC17DDF9FF919C724810A8ED7358A27
97EC93C1A13C443A91947FE1F6F528EA7B628917FA7E554A1D7B31ED46C5ABCF
92BA57961C8876DB4041305EBB029B03D8351D5E2819FF87E97ED214D8F1CEF5
7F7668DDE223721C0B810F4A4AC81CA4EAC86EAE546E1B15D91E626FB9A31824
5BFF17C4E79FD56ADBF6DBF01BAF6453A81EBDCB38A5FC0FD0FF0646B3B0D199
13E2E59A1B5CAB6DE5329BE389BA0E2A2AB55CA40B711ED746C24F1E48892E76
6DACF7DA163CDC90CF076763008E7A899870CDED5A80758E6177BE6B93B07EB1
5800A3BF7B9AAC3FA825CE594EF5B7546B181375FA8F37608DF17856D2F8EBD5
6030A9E6F6BEAF224AD2AEF76D03B023E2FCB922CB8E3C6816AABB61FE6E4F83
F21B4935102C860ECA03DBEFCA461F0E5B93E5A8D18440BCF7D1D6252A24CB6E
A64FDAC8B67C4888519AA368D9C4A8C08C7155DF5BACD75C5196C571C3C456C4
7CE8D90215FA6EE8CDD72C48740F7F5930EC3632DB63A9C8D2DA125088C0F05A
9FC83D16B7F53163F4EB6FF372C6C3115F1E68EB35967D11126EDEDF0BF80817
E68A698183B3EB0A207DB43786E1B9D289359D75AD5E465328CAA90E712C2962
AE2A466173F2FF30EB535A6054BB0B875DC8552C16B49DF17CF84D98D35497BD
F55E273FCBB0C735899529A69990E09149FBD2DDE64B7FA8D50AE83925DF03C8
0B63EA158FBABB12A028803DA4B9DD6C48C0FEC469C4E730729F4BB420D5B003
1918B4AE9CF35CFD31E8E62A44C0484E3D00143BF1D330235E821E5CFEAB4D31
7CB4604DB1F310457FCF9075A3527279644D908DE847CCD00B6F50DBDEF91D3E
38238CAF550FDCABA2C3A46237218DCC5A09AFAF69997E1EBDA7EFE6FC99ECC8
5D4AFD5EE35FE2346BE79B499EC8EC436868154A947D13BC02C780EBA4B9E64F
3026F1BF5DC1F8D64FEA1281EA40B4BC355638A3A59BD9055BCBB232FA45EA0B
B405131B64F105814019BC55466EE78E9E9ABB62DB30EA452F7EFD7196C76A85
15B2CFCD89922CADC0F392B0C54A231F3999AEFB53C24EB0C63B0C8A1A1ABB6B
AAB2F93E5ECC7AB90EADA320E918106BAAFC1F8C425C617639984629018BA674
6FF4F338AC43E23BC3740542911C058D43A49A11CB3A0CC8E3088BB5BA6048D6
CC2AD250DE956BFBE83BB24C945C20D9C22E7105983F284EF478F9B68BFB0322
EEB7D62802CBAAEFF1C2332159DCC7243EA40CE15C734EA905E04C476B178B82
A08ABCB0B86A7330C75E62EE7844C9E22DDB013ADDF20AFE08122EE1B930A81D
806A0F8CC584CB7FF5F56F9B35E5FF78FD93E7E4A40C64537464EAA275FE88F4
461FC6A467C8A69B9A9FBC10D44AC1B753D313A8E7D97F5FAEB60F82855658D1
4DCEE043C8FCDFD8A29DD091F3BA55874A458B2B8989F35055C72FC411382361
9AADC717E602B48D7C9521D3971A6F7EB19D539445DDE9EFBC5B58FA9E5E426C
172C45CDA24985FC4632287FC3B15849DEB56F5A061993AB10A6BC59868534E6
69888175053108B77E4978D971B4EC57224C0F93EEA4C15AE92254140A94704E
ED5666FC06C5341F643F779CC88A9E81891565C63B6F7F6286E664F4E0A48690
356DC96F1B98026C563700772485B83BFA06435D4E0793EF822F423C93FBACA0
E5D889D2B76771C6F0EE997A5DB43C2F6921132890406E3C33F6F159B14C5D78
7C151BDFFDD02B697315F191B5490073EB418A4FF2A398C68D44F0CD1B87CF9C
B52F12728B72F94D752D23151196A256908135C87991E508B8906CE2539DCA8A
31F86809C8C6C18A09F6129BD7CDC6B37E76B648788056851F22BD3E3B5772FF
EC01D822B57FFDB3BAE624F05531292641FD6A7E3666152D18F6C653048DD7D7
98A942C840C4A0FA662F260B21C64214152BB86F03662A330109C5AC0A5EBA30
C6201F558858130703DF76AF4FBBEE069BDE45C0D9467077D85FFED4F9BA9C61
AED87D67CDCA453A6528AC5BA153E1039D9CCC556CEA5CBB542265FF54A1B208
E0E13740E7E7C26AA00AEE909F8F3ADC2726081A744D8EF6BB711BF5F611A900
76F91C26A338DA13A7160A9F42410CCEB3190000D963D036FDA05A29F598EF40
8FAE6F8E7E6F50C99C3304A573501C13A00023085F057DF331E3354CBE65D573
CAE73BF15B3B96B502E0AAF2B4A86237E98A997AAEFFF4227D5A26E8972C48E7
761F430733E6EF8AB2D903C17FAFBFA21C25F8A0AC157D397BF3CC1AE7598F0A
2BE4FB46B29443CE57F41FD5F91122E9D86F903E94D5B55E2BB95949C156D138
89883BEFD634311F9280C7F028DCA6408D3A682DF5B55B9F7ABF08F019190F60
D39E4F0E80F0594235B09A5320109638B938633A2C196E4ED2B43DCD8643C3CF
C6123B076B7F73352F906D96FDE0FBF50CCCA432712C574D5857838BAC30B485
D25024EB254A7EFE57D1DF0892C275CDB3DF77602F0FED0FAEBC644BCACA04B8
B424DB125E487794CAB36E01B5E1A26F5E1E97A739AA36D77A12F5B45338EB39
AF36CEBDED55DCBFCF497FD475FC6BAB5530AD6153C6BD982564EE8712185F1F
D5EA7ADF4104661168A01994C1FD773A50C8AD6A3E4D332E4D59521BB8BBC6C3
866EB4AC3EA4532477E6CBF6BBF0860031C3B916AA25E3492670EA67F55CF4FD
207C684A0DDB6F4AD21B2909CBA71BCE2E762012B0927BA72367A6AE0AF87F73
756C9BC85E4EDE35317E2CCCD138C02C7A8013AFDC1A48C3A4BB8EF257BDEEA7
60E012F54D12D31D18DC59D5E526F12567B8688B4B67E16B56713870300016BD
A3B9DA87FDC865246AF8E94316799110D86B1DDADB8A673402D4226C519C058A
1D1E5A5778584FC28AF12819B1924060BC4F54B1054EA6AB0149E04B8C4302D4
A56D8A347EB5D3D2A0E12CF7E35059BDB53D9FF6BD25F6D9619BC4669CFC1048
C6C9978B8751B840F27D82A69075832BE59F55C1737CBB1220FB8FF691FDBDF3
03BD7D225A9372AC221C38245E48320E1CCF898D9EEDD678E5B8C65B7F588321
1A3953EEB9B39EA9A8CB72DB08C3E9234DFFF5FDF9DF804C021D57E97DA7622B
97F4CB6E0EB640E0DC9EA15C5193F92A3A7565F4C7A4C9CC327F7CD2C44900AE
D9E76FFE62FC37FA376E77131B566AE67C3E09DA80F198BBB995EE8FA47EEDB8
4B467C6C7DB8AEA745CF8C56B8BE56534E9C56FCB2B7006426DFE93D728FA4CF
94F131C549814E54ECE7C914C5FE8E4961D3437CE7475D03534B62650F551D97
201C794AA877445DBEB11C85ADF6119B05360700F8CEDE4766E3A1D7A35CDDC7
9ABF7C619E3868A39D1852DBE1EEAF5D7898C78323873AC005542B68C43C5000
CC58F675EB595F87C879694751494676465891E8A897158B481F11A171CCBBD7
29603F00210CFD7FF31FE3D273933ECC34AFBCC4108D9B76D9ECE63EA06CF939
4799092A54A749DACB82C1424E9879672C8BC084C360014C9C1B6D5D65C68AED
66CE329C3AD712C0A36BE7EF03FDF339CAA2E0336D387A693B1DFAB5D5164E31
14755A158168962C9B399F8F1DF3FF5060D7464D5071058C30C572A2BC7DEE53
84BD7614A4BEC4C84E18CF7EC81C811724463BD46CECA5FB57B0F55EAE20CC74
6AD815D1897B037C197D2456797B992C20C70B663BF99FE28C513B4E221C8E12
49779F8C0AE8517048ADDF7CDF0D698E3EFE60071C4997B7F5EF12B6CB65390C
224F13FBB99FFC034C0710F05019899689B6D3350BBA65C7CE7C2AB03D81B9A5
5F3D65E4D462DAB189006669F7390A78A1B8908A4C913B15DB8827DFF15BB9A4
A6037DDB643103B937257A7DAB025F09D53FBBC2BCB6B0BCD8D56B2B2784E498
1F6CF8470DCC892AD0CFE11578718948BABF9C142709006B68486B326967A28D
41E878EF9CDFFA015BFD11310CB2305640182A131B96D73348B7ED8D31A29D7F
2D889D8EC4F6C7A55DD179594ABED611CE4DE790CDDCB68CC677A362B879F4A7
F4F84113A561F6D170454B0DC4DB2F973E21176E5B00D0774F0BDB3F0E22D753
FDC635611AC85411D57FCE2CC85BB5DAE17BC41F3C1E5CA1BE272ECDEC1C574E
E68E33D269E90877555B1E9AF694D44B85295968D0CCDAC4B5EEFD6E6F284597
DC1016F2D7502E91FD71BA624C499BC62FE7B4734070F8C123A633E51596A0ED
00F273E0DD044A7DF055D633040BF5853FE171E3442C0A00DD938476920CF678
69A9DDF5A29AACE82231873F15E4EA92B37F9045EB711B4939EBC0785F347643
5792033AB924266D8734301BA52C5192F8B32AE780CC9D48C832833999E78819
CC4FEBEAAAD11210EA3D220AC1798A5781DFBE3E47C31D0B5A0B87147FFD44C2
0F4FEF9B7C06072E0398F740D8BBD3FB1B9920AE84C085461C1F5C08F4251173
001AC878E423340D008E73A1F49B6058DBD668C43C513C35AE8144FD672DF548
C439A883086F14F419820F312F3127097B59ECB9ED4D16EFFBCCFF0CF648981B
B0F888C510C0CB3C45918E92417F6CC39A8288A88398390816BB3FAC62D2051C
CCC0A389D730EAD6B05AD28D4311178DFBFE442372B08A31D416B78B71520456
64620D9D0A3FA3E8BA66A32F7839E4410B48557459EB0918274A879B02E0392E
5AF97B16F09D2B8A3B514BC1BB5467D359020C43A00570AAEBD3DBF637154F71
9A636A9700C081553E214361B2B57EDA19BBCCF098E1870D0846736F0649DCA8
FCCCB124E1FADDFAF3D5925CEF54EFE72CD0D2BDB735D18B4103C1DBDCD8EACB
15EA2822AC4D8AFF79F1746B14ACDB6FC83D45B9D3E972710DEF408694402960
947DA3B6BF54DA82FFEBC510725C300BA2FB19A603ECB41DC86E8ACD2DA44C5D
157E7B53ABA05461DA40B675F081053377364DEE80EF4EDC65A99750A337D1FC
360908DDFDA1D097729126AE06EE723A37E6B0AC10F2D31DFCF9E2B1FCDE1E3B
8B9659D7801E8E456B952F3A503F4AAE7A878CD75F948199CA27C1838AD62C53
8CA12E091DD7659A4DE4549DD50FDF1A091CB67F6E491FA1E2CAD1DD3B14B692
36D8AA3911F84BD0F89D7775B3BAAC41D523ADD4296BC0A01336474EF0AEDBDC
63E52A8313DBED53355A9128B523E2DFE4AF1A5646EA8EEC99E2089846AB571C
B1AAFF7D49756A20BD84B70334512ED2457151E57BD4586C793B4E798EFF9076
A37AB2E70077E9FAEBD1679F47750C910D311804686C70EB4BAFDC09D75EDC4A
13F5C3591CFACA236F61E9486FF13CB298A0E58F4A632B81D1349A499AF95392
6BD79B95B45483E7C3EA372CB4B05FAB87087285E0519FB0B6C5BDEEBB9554D3
4547816955434CCD4D416B911DE781563E26C08538E038DD8EF924370153F1E0
02F576583BF8FF1FEE3ED0DB577DA27E426C3653CBBED7FC04BC28FCF7316605
0117C783D9EE37A2E11DB263AB0AC36D1291BB3B71E040BF06E5264B1A481201
D19F2A70D8EDC02EA78526A80A3E2D12790BD1BC3F4E65A4FE2BC28F1495C6BE
640BAFFAC1CD89FD9024AAC0B8B6A023886FCFCAF1C3215B3631A44391CC91AC
0ABAE5608930E599D101B7ECAFC15DE481AE4B4F153183391C83DA77AF0D6C18
318591C7B05524EB6045D4BD546E95B0DC702E8F840292DFF59DD70C303D946C
141100367968CFBC2DCF90282DE60336370D870F02D282D9102715D8715A3AA9
E7C83CDB2F442A42BA7D73919CAAF5FB59386E247E1B9EA8209165084FE650DE
CD44A37D54A9BA88112799769EBE684B749A1ACB97A0EBF4B78C18DA0320065A
9632088F0A59142943E5FBB4D5AE7DA35A71437BE710468EA58499FD71335EFB
6DBD3370E3A72410A23C0BB9CCB51AE09821D79073581576418ED6A89A5957B3
132A314583FD81B0D46E36F8C70335CB9A400D3FDDCB7FADE8C4AD0F9159438C
254AC0161F81B5777062BF50DB8B05E31F55ED6EDF831FB00505FE6DD35A0C69
33C5C2D775460FC7082260E3A1A865D9F5A518F7B94F97795C3B804EC64238B2
8133984BAC1D5FB8AEBC648129FD8A87CF65810E941C15C06CD787C088ABFF78
D86334C0ECC06D470C795A3B0DFEAF8009CAF6FCB69842BE2CC6229D9DDCA485
C6F092D808803A614A4167A66E460ED0D4148A38609D012168C2C33A1025FD6B
3B8F5154702EF95EA67B5EDA270F3F4E6B29C67899BB36F0CD6DDB283334D65C
6F43657B994652432C64B3C1DA04DE6388B58C7A497B4DB952E784F762664219
2E327A03E5F3C481113B39106BC70A36C01077C314B4DB037801038F92981250
6511C137917FD479EEDB400688BF43070EE0532F5882FA408ADED6B37085E4F1
F7849BA8C944F2BC1569AF35A08242B3B975F11F631AC5365D6F93ED5A1415B5
054BCCF0EB98C1D948B8E53C9477D99ABE606EBB6550FDE1B3562084935935A0
9772CA300529C96C0DB53010649C9D605734EEF348F72AC9E5B1B6F3CEA08A5B
E44D39D969EE627A37250A8F765D85909A57F5F4EDFB6BD9FFB924A45F68E051
B9C1CD19B93FC79D11D5575D11E91842BFD89759F3CB86FD459039DD9DD6A35F
766A405467A5F78494CCA8B6BBFA23310BEF2E6BE3196733A978CC2377ACA523
68523E0FA5EC09BA8F9D0C2E4F4506C4AA183969F9DF51A59A8DC80216154939
862ECD1C7CFDADA947EA3642FAE65BF3481912305C98D834A78B378B2724AB7D
F8C44736B077A9160AEADC9D74D63F46111FF57BEEE790CD3C32AFBA8A54265D
CA87001A94B2431C23BA5B901A4509D20A3CA1793568D7A47CB72F425178BD57
423E37A36222B00A9AAF899F22BED2FD2D20066EAF7289DD207626451CF3649E
E603F83A671676A3CDDA0AE2697BDDCB58D16FB804940F2783BA009418ED86F1
35A76B29B7FA10CA72133471E315DCFA43E51D0760F7330DFE1981808C1781A3
C32E78026218445EEDA0E2B3AFE414D08C6651DE7E8C5D0639EA7FB40796213D
BD45B9AB144567EB1215F6447EE2099031AC0AB82C946CADACE6D74D8B2A10B7
B3C878088CC6EFD5C109074D9B85481460311EB8C14D9ED3F7CDEC1B680A1ECC
4F394AFE5E5B3CF831122E4DB5D506D2313DC7B095DF9A3FD110A7791012596F
8A9944F51DC5F7F319DB82D425C5913E693D10E812187719C73ABB7B29F4DABE
DEABEB72896E64B25588A186ECCC0FAD63720160C6751D2D5E732D29695E4DA2
532A12AA98F15542900F740F50C9668B08A345F099F11FA86DA054A740CDE009
6C72C946DA6DDF7B29B852AB9A1F3FDF6869CE28779F4F39A0123F062472BA4A
A4982DF0058C6B86BD9498672F1F32E13C40070D9B42CC1A4F7AAA156B277361
C33B17DF530B3F2D2A59FED48BEE52842C6A6BDD0D848BA429D4E66D6D32B895
712116DF8A6CC4136B08C02041E16473A418E1F658418E94FB6EEA9BE0C4A958
0DABA7509863B75A9C64E86EEF380C0476C03241B77C4C39D1E02325B6125AFB
E54B459087E38A9EFC26CFE4B72FA2860FD51BDDE826F5DBBFD31F51020C9FA0
E522F3765B6B3BB0142573733C4AA0C463A57B301A67D67407B99FF3C8A70387
BC680C89E93E36FD21833CAEB8B0469BBBF84420B1AC48A560D273B19A47E3B7
81360EBADDA0181608EAC5A228DE322F79810B2B2F155893FECFC5A501FB0657
F0BC09B4B1A5F889356A2C8E48F34638AA7FD350CC175A3E72C489608A9A4A1F
0D4CC533E4C5B899E1F0B393458F716D97A8C57CE0C6399462CBFF1F2DE03F05
86B1EE0C63104ADF58F034B8771DAB031773E821DBECBC27F98FBD9A567FA453
818028A5BB56AAF49EBCAE4641998EF78EBA4185CEB3218D80F2666EFF3DAE2F
92D9A9099F7986D8EFBDD9CF482EA8179B820B26CEDBCFA7095108F95A2D284E
F37DEAE9E81398B4BA2088EED9243A71C622F535F8C733FE3CD0C9822430DCE1
31FBFA0CD1844E31D3A678FD33790CE581C6D0A97FD71E3B851203A4624752D0
2E5D2AD7A0E84132440BA808DF9661BE42AA359FFB00BFD780F8904E6E17C730
F4B9B16EB0B16B2D1F74F4EC5772F9E351ECF4D483A22979973649DE427DF4F3
D49363CF0EF0CB4CFF3D088C89F556FD2D77EB5F0B9B7FC3D40024DC5A11D695
3BF8B87E9372943D9D858B486E35547C4BE62F13B60FA68253DC7EBBB2E2472A
58CED6DFB1D150AE8A60655FFA6D13713025071075E6764C1C01CADE6E5DFF69
E98884903011274096F0560B1274B5F31D3EC44204437481B14A327DCA8881F8
68C1F8F26DF32E4A6DCBA5E3169E4C647A159DFC0EA9FEAC736F7480CC16ACB3
443716787F9F327E3AF2A10CD8E278894EC5F4315254CC886EB1C9AEE4432DFC
87580C3A3F27325B27DBC1DE374573AA385CFDE8DCC56D887D3712705244915A
DD216457DBEB6A1884D545E42261549948C1032D01C3AE81585E293C1F1853EF
A46ACC9D770A7608759285E76809A51AD7C1FF48617243234A3220BA8F1A392B
F4D8A4B3C3A292DB22AB2C3EDB1660EFE75DB9EEEA51ABE4C587CAD0357FED86
5E05F058BE9106C5CA17136BDE7624440FD38464E1D2F8AA693C56B322875F7A
EA43665818A3A31CC1F9E52FC7D68E840F3CB35BECC2D01101F10647D1553684
9FDACE5E47379DF05B4A8644C3CDD103052A6D24AAB0E20B293BF808804A9960
2EE7D42C0534A87A7D1F7C11F73CB1AE4D50A2A0E270D52724B23583E2A9AB79
68C6FF4196FFD4B6706436BBFE27657E4F5EFD2674ADBFA9EED61BA8CFB71B3C
FAB5CFB9EE983D88BB5D5CDE461A038631561D7D49A80497C21BAC7322ED2A98
83BBA47717FC65CD6A7A7313A8BCD1065578CDB56440DBAA3C295E86A8579E98
FCDB7D8B4F8DA787D1A2115AD0E80AFD0C1C308CFD327018099D54EFC034C40D
9E1B6DD2FC8D1CBC0910DE9C40A8B14027EEAEC83325354027C038A7A88C33C0
C191EEA4816A6B89C8D349D1D30C55A6A7AEEB25C9AB2A72560E4B566A78E41D
EDB806870DC065FAE353AA84733CAC908227FF96FE05694005F3F050FCB77778
5FC90467A96F149FF32F67FB91220D35CB7131DC86FE535B622BE2C97AB00724
73C58A00DB9F2AF8E4A0A4CDCE7114C20B9EEA1C3A25F709E704975227092C69
82158080BFE4CE375DD41E6E6DDF2AE97D9B2F7D1943FBBA3607951F42A70A0F
DE24B642A012CE9CD1F9DE6C6B9749A4163284C5EC85D39D88F595EE23A6CABD
D62ED75EFD38656DB8834D7C71D405AD60B980CA18FACEA251DA8E3641AB5931
D861F3F0C066222826158326532AE7144D3BA8F679702ACA737F861ACB62E2C2
51F29096FE627D50024F3CD3B178FBC87414522589BCF54D93E0CCFC0E4AAD22
EA890A1C05ED0CF63478D66F9CD00212CA714FA1ED6231B4EA49D4B205C89A17
DF059467C3EB5F03AA0679253959A65DF2F42FBBFE828B54C20A9A19C16BD126
983E9F63D6274452F4CB8186E171FA955041DF4C5FDC6E44E6A1CD6CFACCD999
22354EFB0163B08853BE1D5B9C952FB36B390D5209BA4EE70C642FDC31135486
470B79F5E0AD18A51B962CE9C90F273BB0A48F7299E3F643CE8858F6F2178671
BA0C56CED589A148342E52B55A3C2B4729B377959D368DF17E061D682F2452BB
F59642DD8FC8D7AA052BC817F403076BC8897ED99C8556AC7FE6CBCA5B027781
8F69BC2A44D219A899746272C55A8274C8F953102DD06F650BFBC990791C0D8A
41F1A766144D15BC543B90DF6F6D28FB17B143D11F920020317CEE054131AC8B
949DFF349358CFB83053B584D8D31F174C62473FE3B168BF48BDEEA2150E0FB2
AC813428D9B7593F2E55642D3C6A6E6F9EDAA5DE4D33CFC6710BFEF2049AFD3A
586315176404F288E5CD20E34E3B2777FBDAA1DEC15F50D0160D32FEA6031F7A
652D9D172522F5FBCBE334CA32952BD67B6EF005DA670FA710F94CA57F740F46
3E8445FD048E756156A47495102046B5E3BE50A24DE935147594AE77F1C3B1E5
BC776F692B33EB64F3D3C2E41343791760438D198F33433BFA742EEC19237F64
F6A6C696CD65714BEDC67F043094972C6594C161E5436765205B9C58996D87E0
63B6A7CDB7B2A02006D61F9716980AAD019E86826061A9A9E6EAD7457777ACB3
C94417118168059DB2F3EB90BA320FE3886F361B73F0A10262AAE60CED858D67
C8FD06A5119832853C664B53C45FFF586CEA6B87173EC51E76835E218EA8F31E
88C72AAFF1FFE3C1E6976FFE1EF0EBC6AB8C76063942408F2EF79888B84C5FE4
8CBD0B522AAF862C94E3DE891387FD6EDEBD23A26E03A6E23993B4A808CA8A1A
79E2E80E92945AAF3729B57D2B75976FC3823585062B384F80A6A17D7F909947
A1A4E70810EA4A2484B45CCA8BE99E6A94AC62BB8D3E288EE7645F8E7FF896E9
1F39BEEB5874A32776DE6DEBC00CE994970B3A365B8CDA947084B2B2DFF5788D
567EA91615304EA84CB121F9CBB656BB32CB7BE7697002836877A44014BA4FB1
5733D269A1ED72DB8E5C80E9AA15B89DABBDC36958BD0A1CE83F96261162B014
2F340C7CC7218D2BBC1D353D658C70A93654D7FB1075D8FD7975AF3B26FB695E
BE87E43DE0BC4D0876A54DC2A8FC4F4F4BE0D2C7FCE942F5A2863AFD5E0E5294
1E3312CFF793B8214EEE68F9F227D8C4089D3429B9BBE6A663C6F51F9B827A41
9C437A18708A41B051F3B76F0388CFC093D831432FBD0A6AFCA5BB4E7D5DF6CD
D024241824FFF4F0A2DDA4837448FBB2643C154EC08B44791EE2A50E467C3781
BCE0E638DFA8169586C16D47859790EC7F30F5A97C6905B1601B09B79CD1139B
215CEF9E6D36F7712713D856D17E5134FB98540AD7CC28F70073A040761DA3E4
CAE47A7A9C455DF39D2E2A205D827FA1D6CD54854EC983FCF2694A9ED7DF34E9
79E4F4967B024BBE43367A21CBD9C3B0B1AAE47F999ED82B1309992084ECA69B
C390F02EE4EF4AB456CA66064CD6194836708C450C004E3365982A131BFEB6AC
422D9C57386B863D35BE8A59D365B16F65F311E4CDCFD237E06FF936CB5011E3
E5CBA68CBFE9DA42C35F6ABF12CAA68F113A0C1F2C709BAED22E83B81FF3FAD6
10298844489446C13AF8C7D554BF83E6CD653647271CEAFB8023734C2550E0E9
1C5FC6FFCAF3F786A0A2A60CBDC7BAE9F871345DC6316EEFA2016329BFAB8EEE
698851B5747DCF21BC8643CD2D213044396A2DC7FA769D9599B1E3B0A44481B2
866445FAD5D009C13C1A831EA2B7547D1D58740E9600FEFFA14B852DA088F6A2
16A83D9B0FE071432F7E516855BC6AEC93D3C0B88AE4C6BE54C410DD23CDF760
81F433288A2BC6BD0812528C6D38E0110BED432B0CC8095197317083A94DD595
31F14469C66106581BE6B45736B5AAB1106AC8DB89AC38FE8CE8659AE0AF3AF3
6309CB0019410C85B68BCCBC4DC4EAAC05F668F4557BBDB8104DFC0F4228F77F
FCCA825ED777ABF99D322BF12C146100AD4718FE26EEB695D36E216D7202BEC2
5BAE47617399151F6E061DF22D0BC0B68EBDA7ED9899420CA590E8418C2A05EA
453E4C9984B40D5F58AB8EC3D249D39E4C2CBC47675BBCE8E09CB6FDE301B72B
089FBD50E1DED2F76ECDFEE5610CD1B71B40A8DDE29DF185E33B169A9DACACD1
6057E5776550FB008503D3FE141178D431AB5C4052BC5CFF77A0B895A0827980
4D15AA79D4C6F2E3C19F66A5CBF3081E1A6BFF211B823897DC13CB40E022D0B7
C55A7A22B978D0D24A03FAF6568A2C091F42677C8229CF3F471DF70B9FCCE4ED
3C320D715B346EC4CDCB10CAF6F4E765C6E55359D87797AE47D7CD858E161FBE
D841D4F3F7BD0D29E0C9CB19F27E5F7823F0099A9733CE93550D9F9496E93131
75449F9B09315DEF15CA7DC5E1B72A340370CD776852CEBAEE171920E34F498D
96CF67A2878C6B92E057399FB01EDE7149E6A11CF66DA92104937C529EF74B43
3341DFF1A3C4A6E985EC0824C6AB913E8362298E8D3D9EBDFED7904F72E5E11C
3056E98EE87BDFB2F73ABBE198EE9D5B25378256D641937C49E98F048A242033
11AB68C9F3B873C2B0EC7346BA624547B915D0120F19A7A9B0E8D8C97A2DBE2B
17DD54A962BD2999A5E542CFC3B273E5F66E48E1C51F180FDC294C12CD1D8512
3E5B96738A0EAD076811C69DC9521E404A5F9219D74FD04C66AD039F537F1C98
E317C82F89565A6727DD77CD394A650851D244D05867C128EBC66301AE59BBBF
E5C683B62E2C81F64B1BCD40A8375FFBBD2BFCE3D9EAC96E8DF2945752C2668B
CD4F76F1428FEBB9DEC2EA6E16EC73D0112190E1A51ED9113FAAFAD9178FBEA7
77104996B4494442BD26AE140F7E6836D1985784D9A569F6A79DAF8FAECC0E24
04B25450E48C7956029BCFBA67B241F7B5B9DB9B8259F5AE127EAFC3F26D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.0: CMR12 003.002
%%Title: CMR12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR12 known{/CMR12 findfont dup/UniqueID known{dup
/UniqueID get 5000794 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR12 def
/FontBBox {-34 -251 988 750 }readonly def
/UniqueID 5000794 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR12.) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 13 /fl put
dup 34 /quotedblright put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 61 /equal put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 75 /K put
dup 76 /L put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 91 /bracketleft put
dup 92 /quotedblleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9C535A5E57376651
F6823308463DC4E0339C78699AC82C769542FD3B410E236AF8AF68CF124D9224
FD6EE92A38075CAAF82447C7AF41EF96F3ADF62F76FB425BEDE4C4124E7B1E0B
8BF254D91912D3A99557F5427907A56514C5A3EB961B94112077FE9417B70DA0
B2E1C1FA3E1D6F01D11F640CF848E45BE3E205258E64FE36AFBD4DF4E93F6B1A
966C8E7FBE2CC8FF43C1F67BF6C361678B5E90F4BA524FE8A4CAD6AB28183E6E
CA6C9636E884845105595A2E40CDBE8D4807A81AF4DB77B31873FEB221BCADD4
2C4669459704CB58A7BC230FC59F867EEADE660E49AEEDEEB042BA9A7DD8193E
56C3A36A1F639F7EA512EE4BC6992F52C2FC82A890EFDA730105B0AF7B819295
EE00B48F64C2B5BCB275B1DD62F289CDAD4AD9B7EF057684642FA6FA6322C277
E779CAC36D78F7779CB6DE12638B3C65B70C6B5F8A8C6421A379719B8DD44973
5F52856A4A29B2ED37F2B1FBE6EF4B79B7C0CD6395C756A00FACD763C235914F
847D1D99831023CE1FD89EFEC83AA7E313131C0C197248605EF5BA773D0A4000
72F607551A8EA6F0FF19441ACA179177D1FF7B423FEBDF58B0C19CAE3C10EEF6
3538D8FC4762B77C5AA023A8186C40D0365A4487DC3564265B3DF908572DEAA2
57E29EC669DD72974F806EFF5ECAFA9ADF1F9D2A63087FB7BBD100F0F81C6FFB
B1EA1C9DD46548AEDD147EE64B1B4894972DAE1DC3E8569D6A3CEF9F9E46DEB7
547E10BB2959D374A33E47C58F1B20419920AB485F166062FCCC08EB5CC9AC88
F388F0C0155027B727729488E44CCABB7064A1432E179189C4627453C5231535
47D1F2B8BA43069696830CBB6E5F9A135CF22D3D1FE490A3A63C088EA32FF444
24A2427BBA63033DFE2E06DF8CE67949B6AB02F26335A376B57376814D2A7DE7
64A4347577EBE9A6E33DD2FC214A09C6D889C8FFBF1D567032548851B8F97204
49E215CC7D222F593E1EF1439ED60AD922D41E0E9EFB5CA48F2FEFF75AC5FEE7
FB6676D8B8D4DB6885FBE8B61B586313E4DAFB09D94CEDC0507E93000104F3DD
F83865A2C6F6A7DA8562BF86F5DB233CC9B53391273A1462E40876A8AC2B098A
DBADD5A160DEAC061F86A5FCCAB495EF8A9D121AF07928EAFD56F618E4EAEA97
CF89A3AFD406FC9DE1E9769C1E1EB83BB883786BC075EB5DA2692CD59C4DD7C1
7FD2FF9B18AC740A390C1DB38670DEB18C67721A1DCD502FE7368F47DB4281D5
459B3F020595FA3B10544AAE9EF786A0645FB7C9BB29D091E1432CD878A05918
1665643005BFD9A4B0FFD347ADC84CE22D6F9AD4EDC05E8C7179DCB360AB57D1
6ABCD200A4B4AD56825DC345984D9A3DE11CDA5E9EC1E5006EE4181E4EFE0846
67D8C27BEE8F84A1E01947E945BBE988702DEB2240C4BED952E433E5305484E5
71965D3DE95C4115FF78CE9EC18E323C599727C8B93CDFBCD1CCA780DB8C81ED
C4B5E596E1603624308972FFAE9A57B0EDB51FDDB6E23EDE2946F61BEB241345
2A192D8CAD53E823D687F9C64A70A4B4B703291FA6317C051DC6A44BCCE0288E
3839D726A8F2E39BFF429865E95C726E808E02CD06F36C1CC9AC77999F8E28BF
CE9D74B699CA982479E9D0DD98EAB24D29C981EF0349721D6819549A39413801
F80182D567EE316E2F0AB208068E15693E4C399A381BF9BBA625E597E6E109B8
16F3A84C8EC92F2ADE288821092A421A8D3B907048FE947230810F0777EE2542
29A3485223FEA079B359034F70464DAD2F0E420271A4E0CCF57A0ABBC20AB327
0CA71B292126D395E0D083B19BEC6B48A9DE2BF470C3D01A8C3F52075BD4BE02
A0C518355814478202FD4762EC542F8E7B9B1F7824F0554660CEB83E35635E1E
DF0D03C94C903ECB36B4948ED98B6324E0094EB1DF70863142D4ED3A932D7346
39D69F8F044B6084482D7748C27328AFD24A3A70B99D1F7D32CB984488672254
28B6A9E9DCA2C9FF6A1B311D72413404B3CE5428BDB7FF3C36357D7975184F56
FA6B32AD54C37D0AF7576663AB1397B80D4E998F0B4C4F6D90B483029EF2EDA9
D4C4204C1546EFF3100629453EAE01918D09FE104E626ABA38646F17B6A94CE8
116BC7A8D9C319434CA5B830859B4164DFADF1D7C3ECA5C78D8DEA930EA4AC3F
59DBBF3148C91A2E807FB934E3439D4F67C6DBBA9972854E6E3688E1E0A34B74
482217CFE031CD7B5DFEF727C3EF8DAEEEDA08F4C90289E62FB2AF2357EB2E45
4BC547980FD479101FFEEE477AAC6268DD659E8DD9E244676FD3C6909713B71A
323B211E571BE711D103FA23B5B9AF077D84E2D20FEE805E81D20C03501F0F17
C3B081946CD0FD577F00E50B76CC37CFA97A61B89C25DD43911B28857284BEBB
5BEC61FFE3A14C64BC5425A7A82326617F6F1FA4FEAE56071C9F559F91568179
46369B394A5CE96FB7420FF8AB7C61CB83492FA5AE4A4B0799578594C9EA67E1
E54498AA5CD6ABA34AD3417F04F5D8D664A7EB39D41E2D17643CAEBBCCD9C38C
C5C9541641A09335EFBCE0D276A54253EFD68141807A66F1DFEB4BEA5889FFA3
4D20BD52012206A9F8D3E0F6AFC03FDBBDF3E51506EC6336E249CEFB571AB84C
BDF8E471E3795C04E38A5306BA6D450D72E50910D1AC385BB06CCD4B8E433A32
5A4B7FACC976BB31FCAA1E62DB2C4FE06DDDE7367930E336B49F47DAD91C8735
9A35D80CA2E117E86B52E41E9278046ED923454989E48610ACB3B1663F197117
52659A9D7BFA561C7ACE0771794FC778675F83C5EDCB132AF124C7E6540A140B
E0A268836C73A3C746DC964E482E63C56C0D396515283970FBFF182F9F684FE2
655FD8F5D057D22246DDC3FD11B77552DB4D90ADBAB77BBB1FB1592129DE0AEC
F822D7D36E52BCDABBD560B403A5C56C5E1BE789C3AC049318C7FAC5E5861E42
FD66C3C0F46361078D7E036281682BCE9BBF77983C93ECBBEBA9B359769CA442
87FCA1B98F4EEC4935CC93B08AAADDF355C99816453587310F08C50B9BA3D107
5388A1F3AED2AE32BEFADF0285DA90436D1D7EA85D7B9B6DF2AC4B778CFADFF6
6EEE54D1A1C5DEE3CCA7EFF57A7C2931933CEED90CA26DAAB45E4388EC4DC366
B9E88518D6CF094861D2A59282044CC06E63EFB390A6DF4BA5EAC7CE39E1EE03
3D84099F5BE96612789AF3EDED07266EF10A0FC23EA1EA97040B6BAA63138B1A
A9CB8F5DED781260962D7618EDB200C3ED976033E8967A8CC676E9C11F74BE34
343A7ECE7EE97E8F76F7E95517A6D6163527406EF5A669535CB2BF4031F29046
BB2D0FFFB47A576F5EAB1D00A582965C56F28C00B3BB7BE2CC8D8391F789070D
775EB775437F0CD53DA840BB3575104B63E4B0BF14E3F14B320EDEF65FD4CAF5
8596DA491BBCF3153DED3B718F833D106432DF8DB8B8E6B34D5308C9010A5DD0
7E0E53260BB84BAB3EA748E8D72F75901604F80F4416920D69B4B983DCDB72C5
E9928F01A4A85954FD74578AE336C782CDF81D1EB7EBCEBFBAE7ED8AB4862584
397928F502D65139CCD582CF0723C5262EE54B9D2B8C39614652A8A90E1C3B65
7D26B99DA298FE4B9A7E98848F619C9BB4FF9FD215B72F99506F06355B332689
37D80AFD9F9ACD8172CDC51FCD3A759ACA0F7D4EBB07840840EE42C2D5B8B257
2C6DB3A7657B75F2F0B9730A20112745703E2D0FE709436CA6A5F36F59E64D9E
37C0A23D6D289E1AC1DA273872F5FC5C3DA2B127F078A4D7AB3FD7E124455817
DDC796D54EF26A1FBFD539D3A21B86DD4477DA49213259ABB3FF241424F2BE5F
89151E02FF87E0BEE26E85C0E518D8BE7CC9214B8E9A9EA1DBB49C6C212CCF08
90C0F23E9858947EE344062EBD9C574979087439975EAD4E85CD7BFAD3C91CF1
EFF577843AF1427D06CB2F3BB519ED1591974218C43F0D2038665F9E2E3960B7
FE68CD3CB2DB6B36C7997C6B21EC11CF1DE049541001FFF26D14C255E3AE862C
5A5701292FD2FB3D04523D6E2F3547923BB117718DFB6E6520F0D0B5450C695B
8C9242CC8671B7284CB2E1E9EB097A3DB1B4D5E8EEB93B4DC7E38C0A10474665
54DDCBAF079B92EA494F6FA75A84C5AAFE280284D0823D7C22249A21044BB0E6
4062074ECD17B62E03EDF4945A294BFEFB51F5FD870D9D7230FC91B83C1D85A8
86CDDF326FC90E04362145D6E8630C50594484FB829DA18F5C078F2EE67D2F2B
08DFF39AE2E8C9741FA989AE494C7166F122D2C5F71B97C973B7CE8500E9F87E
D59C30F2E99CC4D34713DAB680598F41955FBDC26A14CF1E73D6BD6B9AAC8D3B
B998F2D0D647356CD236DEAD6561389ED3A6746221B0CF15D6648412B35A6B54
6A0EF5BBB34AA376D9BAF025BFC650C1B74333CE85413D0EBB2F4D082A26A5BC
3C0A25D2B12CB159F140E00E262F1CFECCB2C802FF94CD34DA0CE9B4B3830FB1
DA85B9B670D5169928990A2E9CC869891CA2FFAD9774E6B92549644DAA5FE00C
A5BE4F5FF91A0B6D2FD8F96121D766391EC4ED3E73DADD476B7DAE1A50AFCD98
DB7E27E44D30416088D9BC07D4661D9ECEC0806830ABF14CE55AA3CA2DF66E8E
748B8ED46466F1EEB072AC0674FE6FED231E0DDA59ED7C42BC05EF00E176050A
C4834D893DE42474EA20DB1E25059E84BD137EF65A02CC295B0FFDE4CDE95879
0FE88BDF2519ABAE7F8CC3E6386ED35E04A14F1E3861922645E3A3F43B48A5AA
1999A5EFE192515FCC625C829FF5A7B337AA422F5E920545F9BB269C869A821D
6C4C26DD2AE746EF0F0B4C1E7E9871ADB5270E1CA9BE28225F7A0370D4C52422
E25263EE101C4EC1C7811B05AD42F364844A56BB91EE72FC8ED53CC6954D2BD6
F945D739BE4C61E36143CE890FC0CBF2F610018D678ECF7CEAB18FF5A0E48F76
FDE2463D40A99380D679B3B76D39C664F4992D23E5988B0D1AF33DFB04894016
E852EFD1EFFE586153C0F31ADBDBDE3F73FB49C5EE64D0D02E1504248FAFAC3D
903FD44679BB09C30288139B41B1E90A10139CA3172677250B16535A1F3E5E4B
6F4264DE58896E66051FC677030A121C5A285C47B6129CB5A3998830CE070D21
2F093FC1B44089F603A21F45F60960F134A47226874C737EF6C085634B0A4A66
139420501351F737A73F39D960EC38420BE46E5B09D298E7C16B8E32F01507D4
0141FC52DA1DE718D634AD9C8B00E46EEEF84356759324D2B9A3473C5DA38DE9
E30182B87F91B6A7F7BACF29A93B44C879CCDEDB063F9D2E51E0F1FC9F018FE1
2433D85AF24B55DE3A61C4D0A2DA4FDE933F5F6FDF17E9FA9932BFC46E2D71F6
585EEF5B2E4E89E797A24B799D7F064DD1A817A53677FC9EB8CC3E7F93FE50E8
D50E3191052943FD6C98B573BDD1F6D70349E1F8011599E3F8FDF1D6E80A710E
51E434E85801617C6FD8ACCF1B77B4BFCCDD35CB4C0367F4EB4D8D9DE8284D5E
B4F43E2F8320C2C5A9AE90ECBA7E65D377E91DB69FEF27069235366AD3E126C3
A73CE97F4C90BA00D206FA012C327FD69EE59AF4470A315B1799CDC0539BF90E
512C8FC3BEFE4D1B01D969EA9E3FEF976CD6E0FA4C9ECEC955B265CFD58AB8E5
F7371E479279EE14B689269205C5B506940606CF3E24A1E7EFF3CA96ED30AD6D
E243DE57690C3D69A401AB3315FA49E4BF4ACD4DD1CA39272533E82EFDD508E5
1C2CD286CCC5DE1202C7C7F654521750632EB637F918667E2233A43DF75239EB
F28F3129EB5DEE2FC5BFC331FF709B0FE9B327CBBCE98BCA2C861C6547E50407
1218CEBE6EB5F9BABA4F2E11BCC6FB553A544A567B459E06375102C69F8018DF
BA6A227CFB13E2D74E6A521E01B74F2963E9A0A1C9FD87A88EE6356E3BFABF55
BABC751D2BF85E6712E8EF57914920775906662E4BA68FFA21AD422D34E15578
43CA0568B431101A1194F8AB1EF25E886BFCDFC10F4A5EBD9530816548BC298E
AE4A0B6B52B8B59C644C409B4191B6F4203F52314F2675F02AEB65A72C66E92A
2AC703E15D8D381522C0AC30C165B822A9B8D18CAECC094EDE020756018DCF51
D0701B507519C4270B70D8CE94B436F640C15872F9B5B77892AA3D110E4D6A65
8F0815C61A5127BA25815378683F46E69E54A391A8675977E7DF9C2D4E6FA991
9F029E50CC2F266B31EE9F9F24452D5838905F330CB7E416B8AF836C5AC26AB8
BE2ECC6EA4BDAA08C30995709E225C21D35DB6369167602CBFA8DB2697635925
969002CD1BEE745DA2E56C17EF3F0C05E3847147F86963C37A221C8827195A8A
3D38993E4939AC915BFD9A212F5FF3F826F742B952018986F9FBDDB69C3AC65A
845F7F33C55D4BE60A1817EBBCA7E1538E8087E1BD5C083A320D52953BE65F31
E8339C612A510B59CE48D2EF7061560C4AD258E7DC59694493E3AC878246F37D
6DE89253EBC8830C6B209E818213C4AC4CF1F391AD91D57BE76FB0E2924A1407
E4A949C905E44F54EAED6419F13D59942C8079336A172D4758BEB5D3E786FB93
3CBE4FD2EB53E4E1DAC34E821EB30FD44BC6CB4298242C38F848FC23AEDC9733
52BE6F32E31E25F18301370F8936810B0566B664B042C7AE0D78ACF0A87E5BF6
F9B66E358168B2CEA30DCD940074F3ADB793CDB136161FE2522905E87B8E463F
95D4DAB7E14A3DF7BCCE8141C5A08FCFA2BCE9F2D1B05A7642E75877EB840149
AAB007CD239AE47AD115929427717F219B0A8907F0EC79ADE1B901DAEE87A2F8
39361DAB43DFFF69650F601B24061A9353CFD619FF9626F63275FD09A5B13BB4
8B3379EC4D147C41197E8387FC04DA7BE409524CEF74EA91DC066808A7FD0EF3
957A44E2503EDA67B1C61827479486134E922E560A673BF314D601C66003CD07
55569085AFC8428389A140EB976CCFB8F29E27587E46C413ABE2EFB51AF5913F
53EEB74063162E0BA1E24CEDCA320377D3E11BD374F0B44E132A5C35835B6E2C
D32948EF9DC7931D104C1385709DA882DED6458319F21C2329938396BC074106
CB9CFB9E0A915F8DBC8435F386917AC87A2BA45D857EC30ECA66FB4044F5439E
CDD556B82A0E43418D179AD883C85AC276E1190CEC242E3E1D86E725ADC39E46
BB6C47FE9E17E29F8EA81E870302A00D91434F3B7A05F243176E6EF1082541A1
B9052191EE5C2B8E94A2E02DB65FC769653CA8D1C07A13CB853544AEC7FC35C5
218DE3128AA31952DCE19C55C23FD69BCEA2C661F57B11B8F9E86BFA718D1521
3346E78C701A5E51923D6D937E62FDE3669B214D240538F069A100A542720A86
31DE88116DE775F7ACC2A49EA6C02A24408271A846990669F2AF60AFAB4C16F9
7F4E88E917F0FFDCE68F22998AC0AF2A60A73258C3A4BBC42A2F918123128195
196D0E150D79AC3CF4628503D1F3FC528265ED8324E56849A47B3B07C29940B9
1BC270071E221D355EA51E9942D3BD7F99816304FFFC8F5B036C953B38759341
ED5D7B9C8E6B70C409DD8362FD291201CC385E4A98D73E8518A4C0E544152563
82032FBD2FCB6E403D34B85ED4053A8CB619BDD4DE001F4C3007B1F317579651
E6D6662189CC2D95AB85D7473F65C5D7B4AC63B0FE928F3400035D5A9D443D0D
F3532B99F3AC26CB25EA3CD64C341159061E02EFBC7C033C05CD919BBD827A6A
BAD3B056228B0610EBA812C50D0AEE0431279F61DA43B1A2A54A6254107AF331
5696B8EC664ADABB2B6DDD4DCAF3A6A95D76089B8C6D8CB191F542E12588B3F4
77531712CEBEC3D22B7733708CCBE7D8BB7283312EA0AF63D45D80F3C0FE8E49
CE8378C8581DE74B89104356DE0C04E64FE0030656C55146644AB4081DD79066
87B7E22B3EF75C879222847F855960CC952649426FBD46FBB01BA78335CFAFB9
E1AB382D2E56E5EFFB1B3DB784CD0EA9B2F6F8510242AF91423BD98CB7FC9DEA
5CF5EEB2E4ED539BA6CCF79C86ED1B7A35DF9AC9D2B3F7DA69BE09418B22FA22
45364CCA166433495142A90E615D06A805EFA90961D22CADADBC43A3F20CC651
E364ACB6A56AC69B58B9CF91B051D7F79BA1FEC641DCB5AE8E303A9B48CAB014
5612FACE4FFC6CC073645ADE3D9B7F9C284DFBE0AE16560BFF5C897A1477441B
037218C4BF3522C421F3FBF6C63C2901CE80DC58A88BDB111B93D07083B0BF8E
4F105108D3621CDEEDAB353DAD46B7B59C9B42F7A7D42C472FF3127671C78DE7
638B1A00CAEDA5480EACA609E4C5EA116F0C8DA36B7D906398A8469EEE44BC13
94E6CA729BC34475FBCF26ADBC8578AB8F4526E2C2838982303318B9B9193ED1
9466F1B88FFEF315A2786B6328C8DD4BB2B91E783A8FD4DB0D0BB7647FAB73C4
3C947D18D85F750E926C97044E93B39E61761EFEF5B0B2163552242D77CFEDB4
BC581D69F08C9AAF536B01FB749E9CF04B8CF32414B5AF442019C89A57C83C59
47D1789C7531ABCA8AEA4B2E2C79A6ADBC2A639D4C90BA2B34D9120F4D178FBD
46C115744233CCAC13ED3C5A1E5A1CF750ACCD724892A9A491E4DFAA7803D21E
950FD69CF356E150701B23F7A25228A8F1104EDAEE4445B2F31F328B27FD79B7
3973A97852B68585CF441D8222327341780884481732AF7CF85D0C2CCE30ABE8
35E5ABA9E5E7BEB85FE83C05A9FFEB66279CFFAB2DEF01CF79E33AD8851A83D1
63061D04472A6C3FC6098F799E9369AFA92E3E6A963C37FC0DC422181C50B5BA
2DD4169FBF09AB137C619958881BE214519C45B08F72F35B9F9D79A50397D1C6
2717BBCAB77C710AFA906AF8884E1D9DD6194A234642469EEFD09B39E724A1C5
2AC772171847E53D8A64D07574410116BD67684D7DA569A529BE6848DAEEF7E9
D7A24B07D4A81BBB740C9F7F8FBEB25F69F8C3232F97E49C4D6C125F01EEA840
7E7BA97695E6D0ED19C81A37D6219FB131479AAE0C9547B69C800592C934FF2A
C5B6F7F4C5CA797883BF430B36F1E904197314D52F32DC6131D3F32353FB5C02
673894301FD6510138B3896285C9EAA7930AF702AD0E1E8649687A98CD4C31CD
8AF03C9655D7DEB566A2A44179A5A694B98F7B74B4DFC7229B52DE419B5B26E3
4390F5F5707C6838C8E3E8AF9236FC0B67416E102094F21E5CC832DA1D517CE4
2736577B30A5DED4F69CE939FDBEA91986B99CB604238BDF04CB1A0DBE2CC5C0
15A4B05D96BAA0E66FFEC67F58C2A48E07FA41A9B52CCD2DFCB0C22B59E709C4
8D3DBCFF33C4BC065909526E53F386CFF549EE29373334BDD18AA3DA9817EBF2
F765F2D84B59487DA80B8920100ADEFE5C9EB8B249314F444458EC7A47856EDD
81BDBED927D651E8231BB161CA7B45399BD630BEC73A791C7D9E0DB72AF670F2
44AE8085CE29D8A871D80CC3B3629F3844D1000334F667929FF8BFCF439DEBD9
D1FE892EDA9ED40CEC4DCD7E351FC5EA8221215A4D76185361A0F535C8DFA5CE
895B3D6828C547E57438D81B1E526D57BCC19D345DD4E0ECCE9EB8B9D0DAFFE7
169B810B3CB61F07826E3F540BC4C19102CBD1391A0385BF542EADD5A18F8A53
064D9CF5A815D3AED796E7D5917D4AEA754B9EF837270A36D4C9181607AD93E8
BB1827C665EE6CE908FAD0B79934B4B0A2668F1383582A24AA754F3F0B00E97D
2E49D1449CC0474465E2DE6685F7BD440FEC071581BE218991238103530A2428
391BA228211C06AAB7CD2F868579B812DEB46E960957BFF7CF5383F12C2A0527
EE955D787FDC9AFDA0E5F2C0B3768F0995F55EAEA5348517DD2304679D9680B7
C46B899C5A3A31981E1F2A100ABEF23BA2AFA19BF5BEF4B97777ACA7F5AD89BE
F70094CDF35D0644C7678DF44F20E71854BABD1CFC9954C2BDE68CA56A191E4C
14C8D2E44871C6848E87FD107EBAADE04B8EC48427BDC6AA4C3CFDC5D1CBFF59
5B76418CB335F1AB586B1B5EB53BE6D9ABAEF5B0B923ED2B3B5F51D8849EBCF4
CC67F3BB1BA6EB3B73A016BD965C9CD948736FABEF4DE093EE4B698D0727B2FE
595EEEC42477843CB580B537138F3AD71A2A92D04179228804D55878173A3D9A
CCBF6A3879792C4BFD55F371F8DFF56CFE2693E4E772DA469B66CC7CF261B151
9B136F8E0B2D8A6887C6D9E8C6E3D8A8E0AB844E8D2B2C51F4E7F83148A6EC86
F129D898F8879C761AB59C3752F28E7023B907DAAC26057B7A6B83046899D80E
14D8E02C1DF620B57A1105DD899C84FEA5FB4C8B428D314B96DFE953BB457081
ABCB3C23B1ECD6EA9C59029F369E113DAAFCACA6DD2A00EF5EDEE29990BBE491
6640700F4562ADD50C4CD910DB8B4E6BCFF4E1A91675B2217901A978F91D6279
2E198300313F73418E9BE3326266B2D5D41C944D3E3047C86ECD40F299099BE4
69642D592861FE46661D8E878A74C7E949EB7028B623A2811C99D7A90900C0D8
4B79B036B00C4B1DCACDD1EAF93F8E0329B969B218DC546A0E30CA84104227F0
4C56E78DF5EBE96027ECCD1BF58C0B7DBD8AD9FF3BE67526E10DC5EBE137B010
EF8D1FF0037E879D0B38B009D75E87995688B4AB2A9EC77340B373D4170168FE
58641B7B82D2012613F1B9871E25FBD7CD66BFC2208769B4604C2E183C1A3F92
2161EFE994A0738957714543F6199AF07E3B31037CF3725E940FD3450FC6DE8B
AAFA9E10AE6157BA352D02A40A0736B2BE80E9F68C40C043A43AEA84B542210D
DC3412612D63C2717B700A6BBB43E9356BC8DE9F5D8DD3CAF8D449E981A371E3
7F5454D061C9591892CA6A16CD28E895A6447F51A3CA5B1FF777703590020974
A0C98E6B8C46CB7138EE42DED8F27DDCB5D34CD36FA0D82C7AA45996C510A38B
C14757BC27F73C857AA05192D111DCCEE32E7E1A4C99A1246142E88558CCF86C
B13EAE65D578F0B633F9FC56F1B56B5DB3CA3099947FDF637BACA970C9DC0D71
55802A9B182AD764D321168E6BBADB59A1573D686437BE3A73345324A4D80EA5
1DF0F0EB0AD4AA77CC3D1B8D01AE8B54D40DD552745FB3725AC299CFF2C0EB2B
0EF16350F70F1B7ED0D12F094EBC2859A4E01DFEE5F15EC774A4DFB503DFE297
8B9F2B2A8B0DE0793C3B03AFE4248891899A733FD341C3C9A41882B685D19E5A
0919F48FCEF618D102EFA4070E1BA44546914017CCFB469992BC682AAEA25F80
BEB4869807291EB70F6D30ED4DE72FCD54E32769C57F9EEFD8C0224CF1FE85CE
3FACC7366681C8FB5DEC2E95ACDFB00DEFB367045B52808887A7C46F0C0F8B43
A4F9D021477DF32E3FA4F3278865B78A172FACAAAD171987F211BF67A6D0E993
6598D1C1FB19D75EACD03F4334E20D429C4BA0E9026171351367A840E0696764
D9C342A4D1EF38123A64F10A61AB94F7FB7144777C84B62CFA47A1E5E681A21B
A242E9E0551170D5662823F0D49E347706A2C5EC2310D1DEE05C1D81DC41E8EC
3FB1347B4FE4335CFFB7198C7EE7D7737D7C9EFBE8FE46DD11CFFD4154D27191
E49424CC7EDBD3DF6153DE297BC09828E4D726D28E489C457E854E9A5B2B8088
90A49009D431B6BD406310B24EEB19B4D32D9654FABF80F6F2F583337C4962FF
A3CC3E5E1AA138F48536F61A5BE5C5F01D93CA5F660A6486C856F7902DD970C7
1FB25BD3B5FEC3CA93F737060CB80DD53572589E3476779FFAC148C16CB3214C
02AB7392524AB5B79B4FF7D8CC9602B1F5EFD2D86E83A95F7D8D09246E800F39
3A670841B280FB323E96DF058BC79E4A32918B644276D106E3707E24FE6EF98A
C13C38C8F93BC60568C8DBE73FB88D7337E6E47DF6614F8FF8C0564FA5465962
A32C9E0A20C32EA7C7BE0EF310AABD5BAF72BDB84F0EDF5F8064D013607A394C
ABD76691763F0162D69F2FD7BFD2D29B3221D74C86A348DF8CCF4CD41EA1444F
8832ACB560B739A3ED08D3A44C293BAB1AD0FD8BF89819DAB3B1702D4DD3CEE8
49A46D1360FD56FB8822F7DB71EAAEED57CD8A2CC6DAC082B45DB874C02CE3C6
6F6066CF4EFBF403AF4ABBB4375519400C1EF9F1A37E07A7F5D39F125B816EEA
66B7E73B8172F5CC9B9D0B17C5A240706A9C658908CDB5E8FA8D0511FBA380F2
D7409824FAF5BFCBB4025B13D63932308C5D82B7BA997605996411DE8F65D07C
F8E709C14C6BDEF1A09532ABE555A0CDC743E0FAFD88D3E35833E1012C05AF01
4CAD6E685AAEFCCA1D64E258087A3213A1770A69FA078B905168C5854013E6C3
D1A0FE87991D3F288DA77D04B55986690E7512542CD45BB1272A54918320B746
E9591803A9AE4C02863FC958F4301FA3BEFEF164F8E5EDBCEF94344ACE8D6AC5
702D25F7C3AD129BEA596AA25481C098775A6ADCBBA32088AEA981F4F976799B
31D2D979FA4EE294EA9318CB77C20A9C9F1F8244FD2A8DF944ADA533CEFD82A5
D2F3B700281E6339BCEBD1B6BE77E663EC6C2BBAD15DB999459DFB59EA5C2C7D
3E30CB31B045D59C6D70DABDF9FF0E6B547540264F9CD016F4C53B47008D8B41
91A473FEAF6D82D3140E894E4C78B5146C5423ADB7CB76DE19240724FE6102C8
329433077A7F2D2645D21E7982F15CD3C5228F9DAEECCC94F588E8ECCC8C9166
6ACCF349D0666368F038664EBADD90BDCB3E70AB99EFBA5AA553D25452B99EBD
9D90206E4D7F998A79E2E2C4957B93BFE86651ECDE189C56D744F230E3ACEC5D
7A5A772E577D0131F0F7C6CC5BAD92CAC6D5387351F1326287860F6C838C139A
F105CE95043E0B99EBF9B031E1394951ECDE171808BC634E3CE47A740D84AD8E
69F8FD8AF64A1CA059BBE88CFD283F6BCB47F36DEAEF54D6C063F2CEBCFDAC52
0EA754584E6236E1D9924AAA378BDC913A8C402AC0F26F3314706B60F2603549
318E716307DEC24E2EAFD4224988C0DB8A9491F06434C4A08C7C1233E19976CE
18B3D5D48E6AB75E640ACF2BC741B7CEC14D10391217EC5A57DA9E33B02103A9
F2603C4DF81D7791BE55A3D2DD716CC3C7D089E393BB58EED8AE513178CAF816
A9FD1CFD0DC00DD60DC9AD3623E88CDA176B718735464D7704AD5892D7F2E668
D11FDC83D2006C0C41D5D94B067B7A63A3E767A906A8CE4ECA707F999E31DB19
FE8FD4CF76A08EE1082CC6CBE321A538B8354C1B17C7BC0753E8A3B2307E70BD
D528BFF540C628E19AEB83942521D525E7AD956C3DE16E2EC829F1D03D211175
AB52D7C653BBBF28646B9258508801ECC9941B6ADE0192D6E952501FE39E42C8
F88689A7E5ACD461A02AE905C518E634F6769C050BA8A7B35541A7EA0A422CD1
26DE776A28D37504D4D3F3A67DC8F38484D9D07E8AADE3AD7FB77AA6BCB57765
5D00A2C4933E8C737BA12909FBF844B9A2A86689636944D16544DBD923480A65
A0594E0F810CFC7DAC7180D261EC7E0E0CA536E4D51B2EF42C71A60BFD57687A
CE4D692689E897826C027A5275F6FAE2FE79C87DE21B2DB00AFC0CDDF5D8C2FB
BFD70AF9700CFE3F3B8E777063D406569596999193A961241D0A374E235C331D
2B18CA8A480E2BB1B740DC8A356654BEECC3153603298A106BF59D1522CD0D83
7682EB121455F3530F8334C2116B56E17134885286D2F85E52617593A20DB60D
848E089DCB51526816AD507ACCCADE9A478ADA4E701FD4DC814010B60A17C809
F47F3039F82FA80AAC95EB3921949DD10DC2392BE94E6405B64D2920FFCC28FB
39506A38ED33B436A3859CB7D776CC101C6BB8F7A4DC5902BDB9BC1E6F796EE1
F006ED3CB694E4CFFB05BB53727D8AF6E0DC18D165C8E881DB70C4C441D0C9D7
94B990E6F07EF07A054F1C5012DFE639F7E41A624BBA4B35494E7250E213E369
284957AC3AF1DA948B87D0A4216F197AB4578CABEA194FF229A80BDD8BC13B65
E8CE31E147B223E64DD1B7D2AE1F4AA30EE79E4C3ABF77969622CB094C79B5F8
36F85744856FB7B83F7DE9757DC91215AB86406817DEDD329834BD4E307EE035
94A671641E4A19CB0E5A282B6668089F50930387E37BEEAD4A6E8C7D7141C89D
111957E6616D7584B544650318E8E6B09BB2A7EAB43626FA2C76F9EDEBBE5A2A
CE775ADA3372C6F0DA8D1C3A098FCE5239E3A83F1E80EB15E14F3EE7421C17DD
4E08534C8DFF24D91E2711ECF9288E025D3F88CFDC804C215F8457CEA9E531A4
0E761BCF6425F9D07CF2DF30A07A226B00C684371EBCE5091CF7A98F69305EF5
3B8F4EC008D2C12E3BFE79509793BFB067F48096AE849821B0317A59E5906A4C
1FC80C5D546FA21C6FDEEB3B43014AD63B1CF89EB4D327C8FE576B4DF3E54384
DC3578CFC21C3567A78F040291CE5B1767CD896D04036BB2B8A729C540A8EF37
F5AB97BD1014E62968A68BDFD37F1DE772B332A8CDDE7BC80C6B41E85051CAAD
BA8B761A80F2CB756601A1D60B10DDF033FDEC9C3C85BF94591E2E8FB0D17159
B13CBB74F9FF6AA609C54E26150D241A75B8817C357C831D8C793F5DDA83813F
5247FEA214324F3CC066E90E11E36A0131FFBCCB91E954806A85AB54BEBEF374
6C4B93E5EECFC8A4D2A06AC5F4AF880DC523202F79D989F6A755CE56E3B0A269
5A5856E771329E46AB174A93B8302B478D950DF1041E866FFE53BE42258B54EF
01A072D29F28EBB4C0EE085FE29BFBDDCE7D3BA49E3F3BF8992EB765ADDAA565
2704557189E4512D6EDB999F6ECCFE4CF55C6B84F2076B8F95D3ECEB4D249583
A7483CD6D12BC4B4E9B13F872FC3543D72EDA0CB5443583CAAC84F9D3FE4E7D7
4D007D1F0ED8F1F1F610CD79E18191D44A4B5DB205A383FBAF7664BE634CAE22
6BF2521948767BC47A4E18ECBEB3BCC90F434F04C999353DDD13E0FC12B1784B
9091A909217D7CF25B9474E0F08C1903B2144700B8DADB66CD3CF893AAFB5CF8
D63BB6EFFB3DA3A779D260AA4D679FDEFF7C93AFB7DAE9145070C91911711EB9
FB452612213449DCD23160692F220531DBB1B5B1EEE5611484AEEF127131F2DF
556D9A5C3739ADD3CF4D7C4CA2783CB41D5866018F9A90076020CF30651E1779
C1A1F31DB45781518BA2A7FEBA4A7AE9F1DA44CADB9DA363FF4414DF20DC63FC
E720D4FD6210599E42C5ABA450E8989E00E4E410B0C352D43BAA55ABCE91A212
EC59A28DE17073D2B4740C0BF2B04E8ABCEA0393B02BB5CF240FC267B67B23FE
FCD4C9C16E459231FDEA58C14BF535C7C57D720730A217C15884387EDA65D64F
FA8AC272B140EF8A6F59B1249B71E1F92CF765062502B6E617EA713994CC398B
57928CCDF8DACE81BB5F2C001364275A448133C228201D7174C93A528F2AF124
F2EECAFD5CB7A97BA95E4241B287ECE9BCC9621A76E452F7DCB8365FD790A22C
C0ECB38AFCC24AC65FFB40DC19E422843A836DD638198AE91F0376BA7727260F
573BC9B20F509677FC9B26966C3569308AA53B022D444A9ACA6D433E064CF168
64A38750D0B54F6600652975813933A75E10E74D314CE2A1009B2722319714C1
ADEA15A5EEE7243B67E3DCA6D588005D7E87F55BDD7E973BC654E927E51114EB
5D99C18AFE14B30717A27F99A475E6E7CD489C1B9DAE1236A84FC42D141DDA40
2A7AED153D2FBE53FCF09A18D7BE1754E17F28377D1FCF928997E2A60CFC2CE7
57DBCA67DB562B26B3ACC46EC1873E025B1A673622EA6B3F3E817642517EF9DF
CEF7D3E04250298450FF50CA5C6FA08046D323936366BEDA09E790D6C11165C7
AE791A8B2F3780A15D7C7C73885F60719311235E7C8DA68AA6F86B9654DEB069
357E326F73BC1E15156D38175722AB02E936BBC798FDDFF5F7A83E3C05D22C19
29DC06D34F1954B704BB11A1F23B7A08D450700D4E1E941A27EF0E68C5896820
C85CD90A43598BDDC9A77A1D89C867FBE7365274795ADE3D82018CEBE368AAFC
6C99FDBF55121ECA94D1953CFBD3F2ABC85C3EAD06F3F32E24728E42C11F1748
F57923EF3605E467E37F82344F4DCA8C0CB406E3D063DDDEC82A0CB40040900F
22BB3D29C0BE7941EE7FA7884A26DD8BFA6FD221D3A26BF210F3E999FC48AD69
3653204457DC148743E7ED59394C44323F632BC608657D59F29464980626682B
3EFE28E9333D6846B87236B36BAAFB71287C18CC525EC86870A44D231A9C9C2A
CAAA7EA77F442C42F806BA5F32A8B056E364661F672ABCD45D52F0C767C2A1AE
1C29E9F8004E8230A60F3A4331D6445310E0B5146E9BC9453C4128BC4D83884E
879D4DB72756439D1159EA157A1E155FC6665E524010E3E8ED235BA05F5D7248
9EE29811BE28C0A321BD426771BB7A0E5A6AB49DFAA80BFCC6EEB21C9C54EB7C
CA7B297112E0608D42D7B8882F5D5EBFE74DC3C85F924A172D0E2D880C8DF7A9
1B4F91793F05541927D48859F9C37B10A7E95882CD9102BA8B93527FA0B4913E
05F656DA99176EFC2CCAEB2DE0C92BE9ED8FAEB2C84E7DD0762382DDE7341A7E
ED2529C2E5169322D9B5B9262B127F0070C1294E1EE41578A2C70F3CEAA5F4B4
5396DF68C2F67121475DE4B97FE4FD5158A9C4518671B8D6440A28960ACAF92C
67088949C41CFC0ACC86AC8556AF98669EAD2EA4DF09AD47C77C5FFB7E67BDD8
A604798D78A4FA31E23770939D3FBB0A9AA149C5065E45A0959885734964543E
EE5E35088B690BC90A7633E3ADD6D40E841C6C461857B372EB1D37B16A2615FD
8AD5A51B7A23CA17358F2D8B1229D23DF6C2BBD0E5420B076940864C7145E0E0
B5D2F1A2C243033A9CB9DC8438FF436D681FC49ECD2DA5FBC64C757378E3C4AF
5B2A59F3D670D5FEE46CF6FEC1229C8E641A8FBFC5F53588E0ADF39065CA23E9
EB74C0CA4DC56462FEE412C42224066D8FEBB582CB121C873BEB97993DF527E7
1418B69A952A74A81A71FF9DEA0914F5C6C64C62733A42C08F6C9E332D988835
2EBE45F222443A367C5A8BC82541559C9C579323775621EB198FE5833C3BD278
9D35201630C3C0383B77E3B19696CD75655DACD08944A2E107624B5E908EFE24
838BE3C69DD34AF43194DB4D062695585BF3E35AB5430AE78F16D49488D0E6D2
3D198C4DCBC34CB72B9DDF46678D51AD69D3E3BB194DBED30DB8736703D9E282
905339DDC22CA3B8D3648C872ED3A8B02ADD9F731E8189998160BE853E877674
BB0D3FEDB7A7C6DA08E6EC50B444E7BE8F4458A393053EB14E5E6913BDB65353
955DB8B95339B0F8530017AC287567D649805F6C138E62743246A3BC803855A0
B268664E5110419AEB9C5EA35509BB77A0F39BEFC3ED61CE87151D9877378F2D
2FDCBDFCB210ED338DF813649AE5D62A254C369C5D4F8843DD1B4D6269BEE694
DCC64C5D24442C88E1876CDF2867733FF3AD4DC41E194D45AA19FD70BC3F9CB0
63F3E1169FF4BB92CBF5913A2CEC2D2514C12274131BB8298B5CB1411D16A2DB
2FE842E5B67A72FC8F4BDFE76C5C75087F4EC75C1A6CF03ED94F054DB09F6178
1756E8D567AFE76F96EE18DF5D44FA05D0354941FFC9679484A3686865E98476
DABAB059968C758736E7AFEEBB3646E23EEDA575B17A822EC21EE4FFD110CB19
7577C1450EBDC3CA4C29A94800093630B47D00EE22DD29BA63B1486E320B3D34
9DC90BBF8B15624C5A43DFD1992DA87620F97DDF1B223378EA0BD4BCA546B3B1
87188EF1C6388C6EE9E8AF678D0BC6948C5D85A6485CEEFDBC5CB5DC80014866
86CC4C57447A0F8B4B4675E598639F89AE28E1C81FE81A717DA5ACE944656CCF
F28F54E2E9DF610599E171B38FF5FD02A13280549DE1281AA9C57142A2C192EC
F061D6BEB914A8770635F257FAB11BF1759EB90AD6A6F14314053459106BBF2A
113170D42ABBAF2DA87D0004230DE46B6F5F05C810D70AA09E3326B1D26DCB10
F1B183FE3CB9E4259C8905993E57BC9E79E63C849462A0C11D9FD6D7B3FC0996
0F8C8A216613A6C75BDD5963710DBD38E8A26453CA311EEA2A45EA40D8E7DBD4
F870919F76F58BEBE3E1996EBE465A8B323BDB08283F495512127AE8D3275725
72DD05B10ABFE1CD9B4C46C18D7A83D4D5647F09E5531A75F7EF63B859BA01FA
49333B1B9B7BE14B425B4AF8487C78035EC806A5EC09D10B789459A715D95B24
6C0F4C61D4E28B9851037412964282E0508A81075DE1165C2780FCE366814324
5173E5CD1DB2DF2515DB198F13F6752484F5DA2DB7F1D39B087AB1CA502CCE64
4EF2B313D9661880398581E9AC574652C20466AE6CC51FB582F6A7F4DCA995C6
29924D13DB8703C530E9DAE9BF2097BA520E686CAE8E6F70B06E12246645929F
E99770FD56FC7BD755C36D406C1A25F298A8DD525DD48BAF92428F7641D78C02
7B6F1C2CB9B7CA927A4DFFF87BC43B7676E739A3E410E69132759F715348F167
16F81C5A4A6E25CBA7BC3FECADE42D2E7F24193E1558A24E22D862D107B23A7E
CC9949D9FD2FC1FC8C4F06E80484A84581EBA01DDCC42F0132CB299CD9B44083
64143B19CB4EE513D6568ABFA235A6C6893242B91DCE09FFE2153D84A5441180
6F98EABD74CC0207007616BDF476D667B2F7C0C5FA346C5445092CF6BABA63B8
8363F71F1CFADD2C998543DCD51486A9ECE4AD5000FDA3227739D7D9CD6AF1D6
5C6653860C45B1D7BF77CD66F65D048DF33A101D864BFD4872C8AC716B0FB1B2
C93BD4BCE811AF8534BCF5A81EF1C50631CE3B50F0179B0131FC9F26821A1841
15A7B51DE4DDDE0A5F8D05A7B1A2F289202860E8A2AC75E6FDB9E77A7EC9475F
8953518BE166CBB74C079FEC73831BB3C277435295E050F060B4715B0D9C7CA5
33ACC72788B52028428E9A6B618927A3AF3A947DF3184D0BD0E747AC1BBE8599
003C4C824A830F26E81679E7080EA37F81E72F5A109E7926C304E77405933737
41C91AF34BA6239247B1EC843A51C12AF2689D8834131C268F7184C36CBF5E4E
82F300DB388E0DED74D251563085848E96716E99D57215AB849A5C5B8EC3768D
C6D132666F3EF9B290DC7FB38B8FEF87B226783643D0E0339621F834DC746E87
D1AE89269A54D5CE1346B02D1A3EF86D45B8690A71C6500379879616A896F694
932EFD30596F86C4640222DC39E906A1DC7567B577CB6B30C11FC2B2C00B3956
9893044C16E94CAF2BE94C802C933706CCC046A706BBA30816C8119EC2064E3B
17B18C81389DA4C19504051942F5B4AF80C3547821F5F259EA7D3D72A277A53F
9C6CED072C70CA8CCD16F08EAB4DA185C81FAEC955AD2F73D587DF7338BC42C5
4EA30064B99C6CB7BAE9EF34A04A48CD4C7342D4E2C223EC0619EA9D384B82AA
83318B32C62B5C7B7326F130494E5375986DFC8635C7DE5670805BA9B0317ECC
365F08D41FC4694AFFD537FB40FE5D84800011EBC7E974B0954CE2BE47566B39
94B84F27EFDC287BE49859CE1DAAB80045B3E49CFDFB23EA77D85638FCA69875
D804FE1C2BB3426733156AFB31B5AD98005AF968F4AA2136DF1FA714FDEC2739
2CF8E73C07D5A343FD2C2C96C2C7A141D182955B9EA29039DA1B5247A46C1D46
F4AFEF5F347689EF7F36561002F6424E621D231E6AC3471A46273F3B0BC51A43
91125C140B41D75FE9A97EB316168B20D4FC0B2FF6DF357588835163894E8B5B
FDA61A66DE8498FA7FE8D7B51633D215FE9F2863DD8F6311DC5B07AB6DDF10D5
6353F385CAE186EEA311435591C0537FC6B4F400FB26F21044846AA6F051ED6F
F454E03A01FF5BDD5FF4A21DF1D7B0043E6ED932C83C480F4CA0C4727FD943FB
EBA5BB3D75C626F08C1057ED907B0FB28E0AF5DC23D6913D58E330301B3C78E9
BC319B3121FB78A86FA186CC1F0F690E872BFFBB2CF52A47AFC6E95A3D8DDEB9
6E037D48FD38BD455F5648CB536D5F8FF64800C5DDDA258728B87BA2F90416B0
79CD8D7DD03CAA295C397FA6492E918F57D20D710C818FF1FBA573D1B9559E1F
46667B26A4445B17D79AA490CB66A0E279747BC28551D6E725DE61445F411232
48A9C5F74451FF297866183F2D6A8EF981D50AE6FD93F24A747261F7F2E3EA78
93A02DC887F0240345711A583BCE69B5DBA9114654D28A1D90F6C2079919F5E3
63E6B7625B542C0968185B8463C12B4E2955C10441559D3582C02C4910928337
A6DBDCA5FC26040ED6A3D9720F5C209E4EEF7AC3BCDF84DE3FACBBC6578EC73F
77B9CC832A723106F2A74A65EBD4562B1A97EE8ADD037948FA2BBF0D1BBBD259
656852D37B649C6D57012DE0E85A3942B26C12BEAE826F1ECFA953204BBCF8B7
1FA8A92494F7F15C31AD214CA87351D76A480597BBDEAAC476D38375054DD403
1416614C9266F80BFAA2A9FABBF497E9D419766543FF8DCB75CB4F23B0DDCF95
9B7204611DF362228868C85EEC0DB2E9D8DF5A187D996FD2FD0C60CAF32C0882
B89C0CB4C7BDA228504986352C046DE76C5712D205F61472B181AC6AB43F1810
091ED5738301E448E97D9AEA79BE7A7BCB708A7B4607446E1D09F65048DB2C01
29DADA06F84A3A8F14C8DC19326421E55F3E5729DA3429AB38A06EE6E29857EF
1D569066F5312672EEB530DB8CDE500630A495EBAE7480BCB3DC736335A0C880
BAA075E26502894F9C1C4DB273662689216F3D224B0C184C97E8B08D8E4E69A1
3DB0D0C7C66C11DCD8F0D33CFE773406296F02DD79F4ADD0F38F5730C1803F4D
1E56AE7D3E489F7B6DB157F997C3979F1E524C7E38FF60BA0B1364A1652393BF
A43A3E4C1ACA0450C898CA35EF0AB8F5C4DCA29A0519CAE6246953AC32F73F0A
5A352B40D27A74742E48EA69C9272D61361BF51326A6E001BA7C0E4B903284F1
2F38E8C8DCE98DCEBC19F1D794304C39DBA5F39C4D9C1323397361E0E9583A62
7E1CC21DA89D091A2B62A371469780EED7E317C599FDA58F56F1E23231CCFD33
629E4A826DFD41BA9802BE6DE22D7931DBF851D1B630F4D3E037DE4FC49E210C
2A4883DC21E835375032D64421ADA0EAF4CE17C85CDD5C9C8ED80C068BBCED50
B122E5EC9B491778F599EEEF110DE56CF9E6127C7A576C4DCBC6B989528D56A6
FBE9F300894BB8234A85C1CEA36FEFA52480A1E491342F10D5C406604695EC72
5AC9C833180E12DF3DA3C733247ABF1828A346399A825A9D4F17F12F00AC48E2
70D8765089C68002A9BE97E7C95CBBA1F78DEB8EAFF5F2F5B515CA44F77907A8
885ADF6090AD14C779C9772CB5742104AAF756145635C0B00C2C8B7C5BD3F944
63AB01FEDE9920FAD17E14A6B8CFE019F134E9C289BEA6737D26168E24B067CF
DBE3AF0E3FE436BD6B5EAB9629B534B5F49E123D45D5A55B7CA1112327748E74
5AFC1CF8F787519461B29571921C3EB22C64862DB6EB6F140B8F75C07FC70959
D4BF127ABCDB2C7D7F0032757297960FB9BC9F34C44A677587FD22FBFB889549
C451FD9CC6AB807373992AA9D49BCE306386EAEFF96EBAD32C4A697F8A8DDE17
FFAACEE485AD5AF71D1A90D33D0D99EE82E552AD152E8E9193E5F19B453C29ED
A2872C2D674F2F3E9ABB642E4D810CA11B18FD852714D69B8CF478E79A259EB2
E2F2AC40784DF0694BB3BEADC20E12C1528D2D7B7BD9EBF1DAF5B230C52AEDC5
1AD835F8970E2A671C00533C7CE7CDDFE13433979960811109D1ED656B0CF9FB
E043EF7C2E4754F02D36D51D83E07C4FE80516BA04C498EC2E8C0B410E59D893
F16BDBABA59E9F6E06232AC6DB27AF087D944317447D51FD167E89EB034C95E9
0FF1E6DC53E7EC36D1AE14CDA678CD4554D6E41D6F1060888A6B850F0244981C
50896AB0F2C7E57E8CAFE64D6AD5453F28A0EECA5B3C92BB9D6191AA70F1A4AC
C6F8C74B007C2CAF085A973D0DBACB67FE9F91F152C9B6AF4B9E394D5B4D488A
5666897187EE28F30BA1C9AC578E7FF55F594E5C8845667374F4AA81E3445B6C
4BD3A2E654A5CAF2219858AA05C993D0E28AF7C0A327ACFD99EAD434BC6056A0
26E283A9B55DB73072712A21889C875C0D7A3C47D8315004B7E294FD6C0DD7EF
37DB5E121D30824F0A6AF81CC10AD784245D64FB98F1472F48DF1C4DD21B9FBB
C1451DEAD9FF20BF567B1D7D608DBF32CC6FC581C5FFDC9D18D81C4899EC1E17
CD98E2F109F75CA5853A8B112288D9F81B7111CBCC5A0FDC44A6FBAAD9E2323E
AA0BDFE5EF72BEF344FF4C277504EB8C50AB34A629CFF9CE96B39241182A3064
83D7A52C0E4465C3FCEE3E902888987592590E473728449049EE2AA3C0B18E6D
AD311048A6C39E2C358AE0E71107C16E7BCBE4D8FA4628F1D2A6A28B8513B2FC
F4251DF0F0C609327432141CC9BE53DBBBDF6559D45EA1FFC159D0BEBC0FBC31
0FBCE74949658461836E527B2EF8243DB45A4A504CE98B6762E21ECDFC08EFC8
59503436BE1BED74D5A114941F7C6185BDAFDA6261B38ADCC8B8349DB171A91F
29A4CA724B98ACA2EADC112D3B8DDAF74AC48C18D71A8940FDB0F7C13D2FC0C2
5B12390AF1FFD42AC66BAAA91485CBB27C6565B5BE1D8A0DDC53F1F98D9B18AA
F66D257B73CCF0F054FC52F218C08F50F70822F69D4A7ED318AB0A0DD5C544FB
0DDCBCB24F95BE00F0B42FE856079ED577F0237AC65E1C2584DD937102692B91
74C39CF60615FB43E0855D6F5D77935E1789E0FB192C5EF0689F321662EDA14F
F7688E791722842562FF237540106FCBD7F17D962490AF813C30208BDA830B9A
B4181A31F77412BDFD22002760984537C41A9156DD80D2DC35494F477E87AAF9
20F5FCF0356568BFF2E9B1FB0007AE2F523A3C5374271B91F9F20CD6620E4690
7A0D0F3BA00EEACC7634F3235AF2807EA1047CCDD88E1BC85A71925D79617C98
CE9C445899BAE3C25C28248CD83C2F5C0B629582E782DDE289875FDAE2E9D4B3
30B6B36E4E0F12ECCC62C82345D9169780F65C422493C3E2B5187E01F58528BC
A5B8B9F1DA04F49192D41B9A5C39955722D98DB11BC59E72DC0CDA56B9B9308A
BA2BFD81D55048769AAA2242C320F2206B631C3A6038E4DA05BC3D44389040F5
3FF713FA4BBFAE20477E34F22C008EF75FB76B325FCD2607D7639851060B8D14
268E5C2EC6F041707ECB94BCD10626519547A9FA1BCA023CF92588E75D3B91EC
D5D85D3E813BF6E5B1FD4263C701BF902D1620361633B32B250BCDA3CDF43B35
775DF6F738CBC5EAB9568605A716AD63EDD0AAEC45EDF97C8D33FB6B9D7C0B43
03F6E31EF557FDFA2AE58C2C2863814EAF048C0B07C14FF814626DE9037D9D12
7174F2D13ECE04F1AA1C4F093EAA5AA5E14A4010B1F5904C143A22E31558FFC0
BA6684D88B62D1653A8B2454647C61BE1E59CD75180B2EF2F70149FAC9FBD424
8211DBED2BA2C67A2462C77EC0EDBE61A281AD7419801AFBD82FA8AC4AD7E78E
553E9833E94F6D00275054DC46F83A6CC7EB5EB8FF42D55017E14DC3B7291D7D
421A75961060A1CD4EB5FAA739B96343014A7639515B0A7E0CD680B7ADD4E26B
2D1054F99D9D4600303ACCF65FB68A56A349F298801AE28A1EDA189E9DBD8957
6FE0FC2FD37984B6B44A43D9835A65C3C51D81157101ED8F638BAE83B75F3058
944458B9164C249D5CC9E67EF452571FBA07963FE34D33819B8D5DE53FB0A498
3E3E7F7BD7C97F1A047ECA72BA8AF40EFB8B5F1F0AC6B57514965008A341ABDC
FED621D2F217672C5EC171731E2878F1C0DB50C6C9BAF5BB2174C771484A74ED
33879CCD6B653580E70F8FE4079BB21BB54F145229C941C8A67DB4D3C4658707
D0CBAA294EF71AE5470FBBBBFE5D51F9B1597163C7752A9829233363BADB775C
DA861CBB4A0AFF5FF6E30A5D246068B03655C718ABC7FC47900053E38840F939
020559EABBE142135F45D875C460BDEECD862BB5F3FD60C19B27E60CE81BC88A
3E2F23F5EBA3F0BA702861FA9AFA316687AEAAA434BEF2B9B19B743B055A6F8E
B695B05F34F8DF3F948CB75411DE93BA9C97880368B80E788CA1E017C844ACBD
D396E6E129C1BC740732CC0F35163FB9C0A6E0D8E9E3A0A3E40409D50B1CDCC4
F9316F3BA80F749BAF5AD619F435B79683D44E33588096360B4210D707601D55
34AC2949401B4AA7DBCF68457C0D2E955AB6CCEF5474C712027A66A0E9D3CE41
6E21098CC27B4E1AD4B0E905F383833D96FC115914E5E17EA0D7E408ED501296
2A02EB909FE6CC4CFCA171EAFCD125F28F74BA2DCCC9CB3EE2A0DE9404AE7D3D
F06BD2BEF98AE1AC47EC715E0987C96F34CE8AE6576A94C0317E0B4DC377A4ED
127FEDDC4387DD2CE0452496BA03AB903159DB6ABE7E4829122960EB5A1607F0
39E5AF356F6213FB5FD323C5603FD9C2BB7D477ECAB4A8FACCE3E32ECD2DAD8F
DB0BA376CF0FE5D4F7FD09253D7DF05685CCCEDC97194832F03DE3A6CBAF34EF
C4EA3F13F16F9E1E8AC528241805445738C40F74D2BE8745A9C534ED57767E18
ACFD6D066E12D03E89DE86B2A0AFFB23B9721AB6D85FCEDA707F17E4AD527CEE
2F45C7ED4623EFDBC9374731BB7C50542CEA8F5D6B3A9EFE93D9AF65B36A6305
8BDE3B13FA520417E93E182245E07C8003471C02294BF5D3D7C644C9BA647EA1
0DEAA066CE4B78E986182080AEAE8966C39BF83ABED4D675FD9296EF9C762AA4
C6D8AE732DBE30D515A13357A3748859C76868720129A916BAE1EB836AD6A01E
03CBD62D1DA677B79963BBC53BC13BF30B57C07B81944329A85D79DECECD220B
122A0C0BF4648251981EB81F8EAFEBCDC69D2AB8FFE563D7AD7F017F1C7B3970
8B02D75FF0EBAF9195672155DF83CDCEB28327C7C6506F3D44C5EC5946C5369F
6528B0435DA4C6BAEF8ADB87BC0BAC26BC5B19E4BF6FDFBBD053858EAAAC8B45
F21530DE60F534459EA7F62821ED6365D2A112BBC1A11E7EB759FCF8F49A34A1
E9492E318A2103E6E2DC86556D527224B2EE44270D2316E51FC62B5BE9684D30
8DF2B657B004BAB58C7AA287B08B863C9321B801301E1C834390E3453CD840E9
5862027D3F3ED2DECDEA12A17370D6565155F9F56506AC9D302E8DD372A23755
428E5F7DB640014C10D081314EA9423AC875A76022498C2AE464702F2D4665C2
480A67C639A341354A3D1B160C3AE232EBD103E038CAC43049BB3AA7AC379483
5E4863EBA6FF01FA1C0E9785307F85579E3097B1CFBB12FD99F3EAD3418AC306
66412D9F90BF0485CB5D532A5BB61042BE85EB1D968340E4B6ECD538B8FCF68D
F08992132FD2C234B143499E4D0B2A08EB71F949B68470D17932F1873E0BC21E
9C67F5668D4225FB9058C2DA505EE918E0A07F0104E3B11939529209F091FA56
E3ECD9C8ED1C28CEB2664E460804678ACFDF511558DA23FCD01EDEAC90F5B165
C5D124EFCEF73F8001C5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMBX12
%!PS-AdobeFont-1.0: CMBX12 003.002
%%Title: CMBX12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX12 known{/CMBX12 findfont dup/UniqueID known{dup
/UniqueID get 5000769 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX12 def
/FontBBox {-53 -251 1139 750 }readonly def
/UniqueID 5000769 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX12.) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 35 /numbersign put
dup 45 /hyphen put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 52 /four put
dup 53 /five put
dup 58 /colon put
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 74 /J put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 83 /S put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D43A151FEE81296FBE
0CF37DF6A338C826464BA5198991445EC4BE80971DB687336AE8F74B516E333D
2D8AB74D362C559AAE6ACFAE49AEEF4F52E28C869222C1301D041E7A0BC1B608
1BF728EF9E98F3A12EB2714E7F16B14E055FE1FA0EEFB058860ACADEDA9D0E4C
42E3C6F1E4869471BFAA3760175F3FBD842755A9D7847EBF605F18293B42F557
FBE2715002669091BB033E1AAD657532F34F7C66E4F04D63ABB07E6CB9D9AEAE
78EDE8B79DD9BC87A1FF445EAA05B5572BB880E69F4DE1F82D7F0E9980AB0C18
22C448B0B1722D3CC33C56FF287CECB80658B3AF5E7675BE82CEFF3DAD5942EE
A03C955FF979E41E54BCFB5316A9AB8945C403A73180D0961416EC9C92F49811
4B91BC4C788392994587517718521E416D469F69952149FF7F9224377EBA1065
4A727BF806A112A7B45B0A1BA1D5A23683960575368D9EAC8C04753BF7465AF7
95F25C258C63E4FDFFD0B412FD381946AA38C0B961652BCEC30322C47BF4755D
9F91880688AF066E32FFB22E1A52DE741307AD3ED830D6BAA1D1F562919666DC
5E8FD9862AC8600B0AE0BC7FC779252AAC57248744ACC8A8AAFA836BCF09B0DF
9253DFBB1CB77EA8A59D42D1B18FF25E9AED72FA62FEC3F126F030F5D7DED9C3
CF60FE890BA4A48E39E687BFFAEAB96AE542A6387F6624486037C8924002A511
BEE5FBFD780AC1D4BEC3FBC47A930BAD0280D444259528B6C565DE11DE36BB65
9BADC55C1EDA1A80458E98896D782DFB5C137897419602809F9BF8CA39F00C68
EFB9E076FB324C2963F23CBFED28B9EF70EAA4E4B903225D1F199A7162AB239A
D92D71C18B1B682D04C6A48926275BCB16D413B2A0E953E1257E0B12D8B717CE
2EC84CFBC046A4338A69F454A469B12118E562B4F56C5FFB3CA5D357513E6FFE
947A564B229C7FD873057D5C7CDF03E958294A1003B37D8DF565A70A00A3734B
0138AE5277D383D10C2BD853EF806D3CCDC47739F0E374A3DF3B63638B949ED6
4EC25869DC1C0B1F4DBDFFCC97382841D8F10F3635C792139A1EC462FDBA379C
BE0990CA2E70FE73137AFBBF30CA54954D7E7377CC50BDD780DDD4C7FDC77AD2
F3EB1169F14A0041F18160F43C24FAF556DB5D621709FBC544CE55424F7446D4
6AC07A51C8CD5161AB0AD5084A96FB35D77F1CA155147DEF8D7A590EA6939514
D4A226588295CE0007BA8A550895511C8D80BBE5CDFB8A50D249C3BDCA974415
F5557914A9B805782F399E4078DDB6264F1A49A9A5BA45E284A5196E9828EBA8
481D357B8D9E6ECA631A6204439FDFACE7D7E6A2392726107CB7D2517CD19A24
FBE592C119626DB221BBB635B6EB84845C16A9585282E34958B961F4A543AF9D
419B6A9105BF185FC767712D923437BE08A9C0EB92AB6792DBDC671029B6FCA6
7F717FCE379C0F3B51C6CF042A762ED04898FBB4B0105C3C4ADDDC18C51BAA3B
70A93666669547081D9246732CFF74C83EE90DA17F5B4F8BAF47FE4D81590988
2858C9B96071341FA0A0D23BDD4947FC9BC2297913CFBD4FD6CA4303AB3179AE
0203F1BD502065F90CE9BEA3B52DAFE4A29446082EA0E6B1D7AF1F31D0AD02CC
9A7FACE2CA86E5FE0F6A425B28A5940ECA306891CECDB3CFC7A5BBC76B5D9E8A
C754379ADE80B4D72CE493010317BF21A0CF4A0A55C1246218839DCA3F4D626D
1F4161D38F54AD5142C1CEE95C61D8BB10FAD4B772F4955777AFDE8AE5A837C2
A2BBB11D0BF5DA2E63D0B75ED421DBA9C789B281B01846B65DC572BA69591969
21265DB722AE86BD8CAA3D887C975A617ACEDDFB7AAB341F47532AC0F354A530
7662C089DA3939588774FFA16FC4A52555DED6D6F51DE718BF5F345C23C90198
17B77CB8B5D53A5CE7A79F3E286B6A59F3F6178AC8BF15C0A15C1A8A95D03B60
30EBE53DE328CE085CD9A1D49C69AA299C5B58B24334A546F6E274C1B534DC8F
3289553F560C2F81E413ADB92FA0E7DD1C2F39D5FD268EBA97AB7335ECF28257
96B4EADB7D0778706CB41C7E9C882760E7670936774A1088FFB2011115FDADB3
B69EBD5108760762521C25C968C3E282DC3400001AC8FB1EA27FF643E3025950
1D617BB8BB321281708E496277E11DD3AE0023DA9F25AD06B39C7CF527FED27B
57397E88D3DF70EE4FCCEFC8A0927D6B05517E571B3E70ECC99F3CBA32CCD4DE
B8BF22626B6C94FE65598A88AB90D238461EBD9A098DADEA4091AF1CDD7560EC
8E1B9BC2321686E1759E6B8A270C8CB4A254F7368039602EAEAB86ED21CDED91
8F2DB9889F46981C494C7EAF5E819B91C129F0740B8002B510014985E5791F59
B16879CC6521D8E9F1C4C1890AC85A78022BE614BEFF318AB2616F0C3F02405E
BB425D1555472A2642BA7686E431DC3FB8A1688B76660D9957C3FDE8D58109AC
21B1234C9DDF3F0FAF93BCF7B2F88A001F23162E1A13E5E9118D51B485B70A91
D0CBC39CF44413FD8686D9030782DAB58064F5B987E0402AF5B264B17BD31BD4
FDF63951BECD73ACA6138854EF35B062D01F33073850D9C09A818828C581241F
A625AB3638081DD0F00F946BE5450D38489CECEA4E66B4D85CC8AE0157E2AEE4
A22A9313829F24D573101D84CC1784D1CED7DFAD5DD966601370C6CCBB723082
A86BBAF0A5D867D0D2E3CA16E14E5109A29EF02649C47E12E88B3B397D65CACA
DEB9940B92100744D686066F8250FF30E5F13D81428EE238A2E4E07ACE0F5C38
7D79D4A336D0D26AF9C2B84088ED8ECDF94A1E3FADB45AFDAB46CAD6FF950B0F
07AA2CDF82374DA76C56D29C80138841EB13F0D02ADD32F88B23E282ECC845F9
BB9AAECE9CDC644AC2D49577A92307A83A99434F6493156DF25DBF0FCF2EC21E
8C50A312C3D19E0609C0038554CF4FEF3ACEB7A833FD54B06EF0D617C2971C89
E4C06075B09B84A4F78A82152B9A9C540B1D881313C2C74F20ED064A9606EC2C
B56D7BB4797F1EEF4A9B13579CCF311FA4A4DFA62D80FDB7F535CC6526D1AAE5
45C008EAF024B48C377522F74D939A475970533E645B1BFA81997549AFF26F67
2AAE6C2EFA357DB3B525276EF330905688777057F4E4CBF584520A534A8587E5
5A8360891E75A15205E8ADAC4A4E5A6E27D0C4A7D492216E4BC023AB027F37AF
A8DC7579BA50204D5F45A51460C5BD8A5A7F87668CA6451137F2F59E117BBE28
5C40820882A5546FA76F0CF49F8A6EC445F0647CC3227C400F56E7E9B84A6975
E85E243CC1666DBAFF4E07EEAF3AF71BDACB30DAEA792F2B8504CAB071544F01
5D66243D529C479D276FE22F7E275D9E7FA9C6EECA18716B2F213916E32C1D94
6E32397B41AC6779543218E506569E3544803BBF9B404A983EBA62A494187B30
8D3DFA4E1237A2E5E08224A60492C09ADAD8775B7CDB830520829BA164209ACB
BCDEB2D574CEBFB7AE4BE72DF4EB1945FEF2458761AD8DCC0D378AEB7DA002C6
9C14A665DAAA532B0ABA98D7BFB5A6151FF6703385AF7AE8FD315A492FCCDBCB
B825707F9566B3B4943A3C61C3DEFDC31A843A2D67AB06891F3E110DD8C73D3B
B5E4151B51D9F13905D7D94DB9ABBFCAF35F43B6EEE256B1A80ED6D1739D8D5E
8C767F6F0E8704C5345D028A2A6DAFD9BB7AA048B8B895FE9423A7ACE858BADD
595CB074A128DAFE08FDFFD6BDAC0114159A702FDCBF8013804B0CAEAD7AF38E
FAF086A3248AD4FCA1401A85AE2F72E3E6956DC0996FE8ADB18F89B14A208A15
13F81AF73D0DB72F78C4DA634ADE3C73756CAE6AF2E149C26316DFD93370BE1A
FB4A79F77A67C07CB0A53C78367F21661D4AFE9E27328E077B522B50FD9AE2E3
DA087BE481515B5DD7BF894A96A84A6C78874100505B7DDE1D22EFCE8D58B3AB
313AB5495F72E2CA4E6AE22C0CB854302B9990372F1661D9F0A517F90686F248
C5643008B3D29F7296E5C8FD4049886662EFDD4106E17C879F5D41CE84F87E89
F6A3117C968B95A35940CC29C43E1E0DEF51C1E46B676301F40D59615C3F73DD
DE37B72FF7105DB84227DA5241583272AB1C3CD97AE11C1EE98FFDB5E5F44844
8FC41BEA5C54B26341AFF6830D9D0A5A2901B0653D8BD0746838194D240FF753
E99750D3383373F453723D86BE97B571B8B84D8696089B5CFDD53E6C562A2197
A8C4FB0CC690C27761A816B441029D3D306245052E0C41B53025D8CB7267CFE3
C17FDFE348E765326F91AEB700CC49162DF748171214252CBC821493DD01AA20
417D66DF47EBEFFF3E9BB2B0A2BE7D9B8C68BD570FC2EB0FA54CECC318F04C43
19598BDE93F2F13DC7847354C99059AB20593EE51E94F9D4E9241869D605AAF4
9D9B5FD88C3798A039A67993C5EC68B6326B132E647F67EACCA7F7AE7F718D85
12666E90D7C73EF210E344964A38228B236679A2B18F5E081234CAA2458F8D83
3F0CA308D19663CB12EB904076EF88E556407C33C9380A6A3D68A9EFE65387C1
A1BCD2D26DFD2AC0881EC30E81C0A4E76C244A2BD822EE88C4A60B480D107E68
90E419A1F512E865BA922A7830909BC2611A80931CB2E9344529586726614D94
3AC5200FB9FF68AD9686506C5EFA8788C0AD0251AFE7F95E84683380CDB421C5
B1A783B6D5F3A6BD1BC1C14B363DB01C87C0796DCDD5BECF41A1A9F43183CF6B
82C2AE49F0BFDC5DEF7729F2E638EE6EA9E4D059EB9BB1B992AD8C82D501A550
1BF73CBBFE740179B54E193E84A55DCD61B343C1852780FFB44248FC9426AC94
AA2B3FE20FBA30F6C4D1E0FF3EDCDD8C0F57CCB50CDB0EFE2E04A8927E239C1D
9B026C7929BB48461D4D695FFC766C8A0E545B1BCC2AA068D1865333108E7985
2D93F9B00EA0A90939D0D3840D59B6CC0CE2C147B2E1A9A4F14270FE3ACF51D5
99F7349106165AD627CBBB0ABA01ECC6D3A14C1DC1ED23A9DB9865BB4396C51A
31ECD001EAC94B33C34E29C5611148EF3E55DD61813470B8F3CE32564C749414
3C93C77EA5A3538A0B5AE3FC4DA32813B06772E0E48E25BB39F3F6FDCC077E86
F86FA50E18FD19EB2F37311CE87F18F3BC85CE7FD71CA92D5C3264E34E04A2E5
70C79D99F54D6C6D9D527AE45EBB48411221134587D2253E7C8ED7658EDCA34E
5E768DD14E0200470F73C44D006CE8CB35DE1CA3EC10ADC668B0662A7774C891
84EC95A31DD872F0728D9F65CA80940080E04630BE4DEC77A2C49E3913C39978
BF145F8832AF2C4385EBCDB15F9D32C22CBA0CF950877717D6F1591D7C0B8047
8C9BFCB16AF7124ED83137695F3D69228DB633053208C29E0ABA1B06A7FB3EE7
5625CB44927E2DA6E038A6E62DEBDA2D96A03177982D8FA33BAAF4426E05F4B7
9C1748B3FF7691F9888E7FF864A10B9DF761A41E6B5CFAD2BDD7E1C4924AC97B
F4B352705316DD1A58637CC12D71C18A5CA691AB2AA8F171590EC24582B1123E
94D4DC587D8F99E18A711776BF4013C96446BFECFEE4C809EA94B169088024DE
0CBD20199A915AA406F0BD5F3D63D1467C49B4691AEBBB35ED6624F2D7BB74BC
E80FD92B9FD04DD9C2BE9B6FD29EC7EC07FAB447511C61DD299C783BC09AE2A4
7B3CBCA6A20C6631D06D0B2E2482A50612BB7C29B7E7D0A205EB0E8436702581
596BC996ABD58CD8D5BAAE4B1478195CAFF98FE0141287296C4EFB8D2E7A8442
F0A3AA9F9264329982532295A176BA1867EF732BBAC49AF485D9D0F7130F617E
7F7DEEF935874D55A22240F8EDE4F247D5F73481373A392D40A8076BD91079E1
1CE5998BA13D48D56B49A92B4A18430E316405D2E2E391B496A1934671FF1785
AF42BA3B2D14B8E04014437FD194455C50289DFBA61B5C377BCBDADA48E82DEE
4E70EF5E9DC03064907BCB8BE4D59DE069FB0C0CB140DA54708E630767313F9F
744594AD8A499CFEF733E640A11FD74E46A749F9C7D18D49251BF85C6EB4668D
67598C31A8F90922FEAEAD4B83B6E7184567DC798E4BA1C4C9B3461A478D63CA
054F13B502DACB674EB49D6BB935E5EC82BF99FDA7D47C581AD7F940DF4FC6FA
6C6D25D647033AC69505F0CAC58DE99087F365531A6283CB89CB644688963C3B
8B2203A94294E58739EF23C7803630A1F9121D62BE1977DE2F41687C8CAF87FE
CBD7AD3B98E0D95C8C6E1A7CCB0E09465AA874DC90A0F5DB2C5E7C130297FD39
EFE63B0350B5139D09E6864D22C3F1150B29196E40EEF9723E71158B7ECFB8E4
C426FEDCD439420B7F1C251FADA347C9A2C49738B5A17922E1EA93CA7B125B76
57449EAA9C1D591CAD327D0E98EF2D44D614EE9ED49DD31ACAC0B956620B6BA5
5BF6D08CA7541059D5ED2EF00AE2EE95488F5645BF6837D9241C0D3959B7580F
C9ECB2BCF3E65C07D52EC9CFB21C11CD4C883E44C173214C900C44D2E1E43DD1
CE8DFE3DA93C38B548BC4EC46FF91F30CFB97525E1FD4E77686433B20BABF8D2
848C1CDF1BCF185CFD7A81D2D4BB826E837E2AF35CFC4F419F698DB0C43E9F9C
B0FB628AC9A3CBE9B1FF4A067016E70333E78B32AB2D89C483834B31F5808FDB
77492E099F1504DABCA5722C7860CDCEDB2DDEB512FFCC7D287F4945FD711F28
87BC3D36173566B81FC2C1290C717A09697DAC6072408E20926D39270121CE58
3EF97CE12EDD7F87F2C8CFE36C3C0400869C0D813B71C425343EE0CDF717BDD8
409D5297D0F8F7FDEB0257C0A391F5635E0DB1116058942FF3E7C94D5F2873A7
A3B0ADAFC3835AF2BE474E6741319BC6695FB37F59AEE388F81F6E66F910000B
72E6BA7531B4378CEFEEDC79CCF4947BA1703823B5AB4F4AD73D9615C66C489D
99D68E49C9BF765B7FC547BAB9640D51D5A7A2396507AB5A4DFF3D14F52422CD
8FCFEAA06A56C6C7FFCD29C9A7A59DDD2A909A9363FE5F1E9629616D25ED38CB
E754C059E4379318CC491C3B1A90128693AC53F80F8210FAEA7EE638902A7D3C
82B95B3F5AE340EC1B648DBB9FB679D6E80B7F426D8671FE7136D97F51E2D2F3
C9CE9183E4061CA40091A2A70DBB9ECBB19CE3F65ADD0FB346B54BAB182E2CD0
EAF4C0F402C25573FB344EA771B297BEB615FCD0595172E84ED2A62FF8962634
23C19076C2A9ECEED5135994EB397303A9619C76DC55E032DA83FBA441BD484A
59F70A5110A8927F6239A14D4E223E189A5462E4A92EAEFFA4B961A2A32B320F
C2B4E8C1821FA67A655B5042C15E4DE1FB3652B55078DB123573C4E986B19DB0
1C5131F3DFAB271C30A5476B4A19D8FC922E31879C34BAED94C07A4841B8209C
403369FB8E842610D1EB4662B6171A4465FD0E819964F62EC5B0ADC92F08CF90
1DE0B410FFBAD16F6D355E8AD72CCF67961EDB6CDA82398021007C2D0462E893
75EB0710AE4A6CDD15077C9DEFC5774EF4A657734D703CE42174259B58E5277E
0DF26BF59AF8D1A3E7DC12E3C12AA4B67CF35B19962F6950C2020B698D971B35
82FF84E72F72FBB0C54A112BADBAE6C4CAA358BDE6A705AB59332C3850CA3D25
C7564499BC1319121CE0D93218210C68080AFF33420E3CB3A48BF9EB66BC07C8
A79D8CD8E78C200FF7CFA3DAED0B9E87E6141C88B436D8FCBA50AC195FCBB9BC
9512B95FE3A37FFAAB39850FCEBD4D50A243EA416E73F53B4B00F3B6EAE0CA06
0693AFFEF215D00BFCAD02E45496D7C8F5E99EB9096FC4300D038C1AFD31EC4C
5ACA6B72C1BE7204E37A4CBBCB1EC26AB87F2FF82DE20601025169A5FBD2D060
62B5B2DBC288C79C33B596832AA18D730AD572C6EDFABCBD36DEA87C0F323C3D
6E537AD3B43C6F3A905597570A8C6B0B4A5E08C08A430B643B6ED36DCAA09B41
FEFDB90E10C8A8B74EB358437D0CEBB9E03109C593BAC09CA996278246E7CA38
4F311F23DC5A7F7DB374E0E3D066C874EEE28CFA47054DC41A389203BFB3D601
BC9A4817F8DAC250A102E7404CA135B33DD66F8FF40D106F52081FBA3E79CE29
FCA5C502B38C86D8D507AEF30436472D2381DEA09B8B3BCB109BCD72332A9483
E61ECF0F89A85BC37B8C10FF3F7C0A84FB8D0F4A7898D3F8B06202FF8DCD698B
56544751347E9AA35209B18D3D416E5E034E36D9C5FC0B33B7AA0D46F3A3F925
7FCE00D42215F7C2717D78C7BEC199043BCC3D4CEAAD87BFB1ED2F719ABED65B
EB6A783BD5E0935B9A5FA7F899D25750536B99A0113F16C45E5CD4DDD975EA74
596C6E35ECDDACE357F9EBD01798566169C00EA22408D0F4FF55AC040A31BFD6
9F4F8ED8715AC55F404D051466E8963FA0D26F5C8DADAC865731C189D8AAB041
77FBA5BDA6039F6B96A33D86F3EC1EB4A3DA9DBBC8CF98E4E4DA535522CD9B5C
AD88BB46AB8C7FF9A7B3BC2C3E1001D707107E5A71476B3524E2E6DC2B86DB3B
AADD275E4C0B4102A43F281C42C70E6AA345E5A1DB8A507D4B4C11CE0A7A34ED
645F958728C6CD60FDBD9C4F6DCD035FD826FCCCEB7174304FDADD3A4C7F4B05
A1C3DC52CC4B2638E7AD98EEA4E205B3E55A70A260D9E125DD0E8677BA2628C4
6A73D6CCAE768428E1E33AB6073919D47C6DDC9633FF5CC0E1EA57B8552C899B
C062929D3099480AF453217DE52E5868CF765CFFC236A2A495CCE4A155890E98
65E647A3A8132BF605EDC4F684473D33056074581BC24AC479B28E2C783B9904
6D46DF3F77E0708689A30FA428373CCBBFAD59DE7BC0710161190B68ED29B9D1
6AF607181DF4F0BCF3059436E005A572BDDFBED3B1707E04878F520E6C4DDC56
26F8096FB294081E5BDBE06F0CFACE35342813ED314BB4021C226D05839499C6
BD1C0D571D35E58D0552BBFE3C310D604314931F7659635BFA6CDBD756A5BAD4
403312B47932022AA5F037FCE0E17AE1E685D7AEFC572777A2A716AAE03DBF82
08664141B9E84BE6F194C5601CCD545FE1478F70BB2CAD430B175F7F254D7DEE
BFD0480D574D3478C47BF8F0EDFC4A55221B9D923D345F55B2BF0BC2A0F99942
0222DCF350E44EB22C48481CB25682AA2CF642A74026B9A3A59E7E9AB9D73DCE
B94B564755D35A5C7B0EDDAE922796033DD9D9B89874C712917E7A46BAE2B023
210CDFBBB5CE89F66A36510360D9F1D954ABE18A2EFBDFA944C892A9D430692E
4CBA219C2BC435F361D23C8E716505830E4359BB251F161D81E4BE745406D14A
B52D8D309DCE1AD426E70C7B6F401032AE8A76E474B673FB02E05EC54A1722B8
7C4476E482A6AAB67BD9B356D3938B7D0208C088FE986C903309ED69E2FCA40B
9A6E3D872D45B8680AE2B60CD9C0DC592E20C50EA2406E10C8169A6925D3E4CD
24EDE82FD8E6BC07640A04179BC09B9676F683CEE8223ED6BD63EE2F4619F890
4BB46EEF53ADE69B38794E042D4A11B8729D870530FFF3F5C96A01BF6912A33F
60E0DB2965597AED25A2237466F5E233E7D1941077BE2D7929BDC8308362ECC1
B8CD8DA9F3301A4FA00EAFFBEA62A96667BAB78AB75D19AEED9584F7C735739A
9CCFB1D9AA013FE9764DAD34B4DB2A880894A36D912266C92ADBFF1FE5A59CE4
3629D704E23B95D185B6E8AAA5BF1771A069964119DD91BD8BB34B51C9B4AE7A
FE815046CDDDD24A157907D69DDF3533F35841EA72A45221E77BCDFB111DDCF1
5CB7207CF714702EF17C73CD1C1FDA646CE5EBE9A6743908BD21E922AC410726
0F353BE4C915C197A51759A37219C22D5721AE07F567B6786F85AA666FF8FFBB
31556B97E0EC53CC3E818C8C6BA1C8DA0EC203058BFD978FC28E43D477DE3FCF
CDF54E509A1B040B020EB773499B3288DB535C06AF941EA5E7BEBCCFC047FCD0
6D0096740FDB2B62035FF418A74A6B01C50AC940199670426E287082FE39F717
9AB412475580FD132C351803AC22C38CE6639411A5F089FCF46D005EEBC04C27
525C97C3A92891D57CE728D32FFA2728B8924E2A7A8B42B095736516BA7544D1
1B7D5C3F18F8802AC0D91273B70A56B568B946017C2E20353D6685110318B73B
E82B46438282AC7EAA6D2CD47A3322A51AF83D81A93DF717AE3460EE799DBC1D
C53293448D1E5DD365303F9D6B554AFD5FE3155F2C693826E0BB75EEF4F45655
557B3C1BCD91829A12D3C841C64FF0E5F81C290AEEF227A9FDA37B3AFE25ED57
7D416982063D33F8287B92C09F506D84626B6A11DB36389801F9F970504C4EC3
2F60B0CDD1A939E5278FA3507FA518304CDDBDD4A17C0519F440829BAB7B4F2C
029C8613B9EEE08F5529487A198EAFAFF603F93A3AA99BF8C71CB09284AD2E9F
A4C17B574BE12D48529441BB3DF44CB6EF3209C2521BFC31B682E4143C34AE2B
E8B7996B3595E6830E9B3736A7A471DDEAFE40075C63F3DB75D82E53501C2872
C597B74D85D0E7A972D557A0ADC0F9E7535DE2295DAD2C1375E8B2C1BAE482BC
05E02552C7DE629D73C5F0930B71C702AA1C2F66798DDACADA91A07F7A081CE9
3DCED6E43167C96AB6A26BB141344010B345394F98034F25487E908A0A507315
FC5834F860908C1C87B36301562DB3E99DBFAD6248AB73C97693C2759E7444B4
330E55FED0907F7A304066E1BDA60353B9E14ED4F6B1DAD4AFD953798EE8F867
28C34D2449AFE71DDA70ECAB76CC0300A2EF870B9D0CD8A7264388A2ADBDE503
22B40140F7AB6FBC84391C01D9087C85879738CB54A9EFBD45FCF858B7E33BFE
40DDB82934888B57A595B0C83FC5F97648FE5D879545A425485A6447A47E5894
FEA8A85B7741DA0BBCCEDAD20911A97B9BC60A3AA2C23A6EB5C4C81F8BE6E466
A3B4E458B81309A564437E54E003A76C62217D68398971CF212E57099DC0D84B
05F807C5FEC5B745CB19E01E49B281036075384CC33F8A6ED17FEEB5A6054B7F
543B6BFAA6937CF099CC46F3EDACE0008C318481C9AAE8C887C22303B049D7C7
B94C95025E3910CED376EF8728E8FA35821A7D1E02840D9B9D9007B1307C9C89
EE3E9506DA077CBDB9BB138CFA62DC1C9352BC481AF41E470220AD5E07F28FF2
ADECC4D347C5302D340EB46D1073435AF8298921AAF7346A4B78759F73F15F13
90A30070B1235A291A13E70ED325916FEF21CB856B1B17F2B1029FBAAFC3C0CA
594B7330DB18800CE398B7371B404C9E5371AEDDCF2A29E16912DAD5EE7B791F
721F787C73B6430793D61B1559F6A9D6C19865B25DC84E79DDC47FDA901A6ED5
9EDD0E334B39ACC10F9E59404E134C6C6F6F0D77282F43F13BBFC903154E2470
965358C34B565A6397C7B4C31DD7B40FD97099DB36C444D71F10CF9B912828A4
48E29CEE86DB0DA1D38C12645E2BF16532C1084C0D489484A3DB2D843642532D
F205CE8948BC5EE0B3FBE8CAA07B6E0109C0842C2BA2FF03E9A5BDA4C7E560E2
31792A7C2B5EAEE767A7591CAFAA095980701EA3A4DDC8E70757CE1716C13F7A
C1818277C38C59EFD79632341F1C3D5B37E8930BC1FF805BAC95A351589DF6DD
47350AC78179D5B243F453D4756385C3FEC42EC182AFF3A57EA249D4B6E5C663
F42093AF07D5889A90A3E1393F3241324F2D93763F387B2CAAB23487A728F8BD
3770F29104C8F9B76F4A262313A0D97F071AFA2451318080D0A7D42D21475107
59622809DD72DB96E9A3ACBFFD5F68FD9B439E62312DE6927CE0947835353B53
DA9D948944207DDC740E7B626C19A7AFD2AC36F25C950A516F71FD785225601B
17F57D40F8ECFEF72CFDE5C780460B05DC170F95000E9D9BF3E90EE9412A7A89
A2F206903C6CA0AF41A351638C120BCCB4F1203712F600427C11D65BD666C2FC
6A80D8563723738210FAF66A146E0C7296B199A714F41FC8E26F8C18526ADB2C
80FAD83563B6F1CDDA93FFF320248B9C69430BA19CB5002037B37B2BF12EB176
4D73B0E17EB1FD2E3E06FC8E375AE63D1AB81CDF1E42CD3A4F26677265D02A6E
FC612F89FC5265A6713DB414036FA81290A6A9429F8FDF0F76161BE0E143555D
086C02290A420A9DB5567DAB065FF58EEABE4D1263575B793C04221F7C916D3F
1009A173530A9CB494B9166FCABFB7BDCE9C4115790E1D354709E5F8B2BB376A
4D65BA3C39681F91C3B70E8975635AC4FB6154A72353CAE8B6BB32C3A9C4FC9E
41B5A6E04704FA11C5CC391BA05AE4B5710C22EC7FCA93F5F47BFA5F9FA77F26
E788119D1E84C24DF2286CF32C73AAB442671191D67570237ADF9615A541D34A
16D668F0D63D75D1FA3904004D15E8FBE50B95A41B5AD20E8BD64CA9FC25F927
DB608F8E17B5089B2DB9F23322730089737B8BF4270AA1B816196F4765EDD46D
0649A563F8308BD394E6489C9C3E172588ADA5DFC7A6E81C95CDB4DE3E1209EA
570C19DE1CADC9D9E8244379F90B59DBC581ADC37FAA54241A5650185CCF8571
0BB55B586A1245C7D55DD347A1AADF88BEB5B1F659BDC61C70C94D0F1B3F5FB5
BEBBC4FEA4146835FB9AD537FEE2710DDC4EF12E00A8549CB3324381345D12B1
BD0D24EE71467FE43970808E3F672F4650D996ECA810A35C83104FFC39B550C5
F5D89366608567653227CD67D1422A9BD5FA7763963B96D37C479F64497001B5
1CF926C93D555D2A33532AA7E808C4B052EA8122B148CAD304ED941F6DEA0B68
EA47AD847FBAC9712DA52F54AF147AF162DECFACD35A984E8518F8C7A5ACB45E
21662EAF9D8D6880627AA9B8431DB46BA645B0B91573FEFC5C1A4ACBB4671CB5
3B676A125CAE42E92D793DE8DCF032DB002AE54591369692C6202B0ABACEDCE7
D2BB70F594A84C178F03BB0FDA4FCDA99E08B370EF96B1BCE4D87CB00DA3E66F
ECC3B213C6E0DFC02B08BF8066630A28542B787998F673AD90FC294610FA599C
B8D133F1D05BFF9DBBA3389AABB33B5900AB55803D4E15C803D3D85941ABD20C
08E61709AA4AF299ED01F81843C7F51A7619F6BF954D1E7C03112626274E47DD
F6A0349720E1904EFA3549BEFE68147EA7C711ADE1927B6DA118EF83FA6BAFB4
1691CA82EEB9202F6B99198BD1FF7DE8D44D2D925F53A46F6CCC888428AA0062
33D77CD5ECF4C7E89E98B5C120E5D1A21BF7F4982969C9CB3984A762ADF93BFF
A319F4A42594D1DC0EA7DE2577EEADFA6DA7039E4FCBAA212AF173DD0AA168B0
0F3C1177406CB717FE3D077922F908E30CAC8E096CA80718D34C9BA8434B873B
7B10520A1EDA3F9C0EC759EDB8E7F456BD6254DD32E3EB0EABB8EC83AAC0E580
5F5AF7C764573A4EE6474A9651A41F0A6C8209822A9DBEDDB7A34D318B251A92
EA666B3636FB6FE941C134BD817F98BF3205FF9CFE2F0D1C0FA060DFADFD585B
550ABF5986626B80E10A5E7EC72C2B141E726C137E2C6D6C84D3BE991A9DB443
8932C670FF4BB3C58E13808649385F67C95E73E6A82779C3902C129B1CDDCAB6
1146853482CF6B872161F2ED82D85B907ACF11657E62CBE04EF257711F8B37A8
99AA4FEA7C7D3F64AAF0A963B0A257C83AA12FCDF02E1CFC65D33F68B19FA062
E21BD55A17AABB5B08F11B89A8E378A2A9FFFB9910938AAFA2536AA3815697BA
F7621EBF4EFF1CAC87999B1A569F97E385593EBB9E6B10A8B18C4EC5CC5C3B85
86639184C1716740BBED6D77FDA116994CA12B23E685E837F774DD8325701A58
8A9DF5E50B37477D52B95FB9BE44788801D4E8E6410F92A6979229501F1F27CB
484F72180828FA59BA2EFC7CF24809D4BABA304B317D5A007424641F740EC58E
00BB201A8F1D644EB37153D97901697A5F39DCEFAA24027F7DE90FDB51A57DB7
61E30519363FA47CFECEB5AE657766F06F14C39BF8F1CC69C0D29342B222714E
2E7ACF0771C423EAD75D60D76FB9AD2DA18CAF731C30A964373B5503C3E5430C
4D0012187B0842B4B9A92D792B91BCDD15C5C6414466CC113DA47F075DB367AA
E80C3467E57D8129399B5B463243C238D9E01A9EAA99237D8060685E3A2BC990
BD1C061435E0256A5488251051C42587739B5F2010F4A4842C3E5B876DC5BBC9
3AD45EDECE8A9243E31AD30F6BBD53B5EA1715AEF5234CFF238401AF97177164
69105728BCC04F6067E661D7FA60D1AECC2A131A1B5B5557EA1F30E86F962367
D9C3F27139EE5BD7A35F07EF123C291A7AE083F2B26F66633EB6BE7214E166A8
65B5758A56CE01C1605BA12B03013D73F277145A385A5FF21DEE4AC70DF96B79
5BDDE53B749011CD2B8859C0182472B95539D880BD66DA7FD0EF62177D54DECF
7390AB44400BD4C841155844D7EC7E642BC9A89BF4A04E7A10845401C23EFD21
D96A1BCD7A95C940133867B8D8D1AA33455D67BABEC6AF4564E73B4318899CEE
C410ADD7274CF92F20568319014F12B151EA21DBD7D868C69BA5FDDC28090AF8
86B460D4F1EF460AE1FCCC792064B2E45352CECB031F5060286B9F80557AC7B9
DA5E368DEC5CA70FBDD16248FBD5DB4D36A51201839B94C500D7F729936FFF0B
FB91ECD898BB71B4E0CD95CA783A7EBA230CB2622254D008405A9276827EA4B6
74F84C2CB57867B1A504270091D1B083FC8D65AC7EFDC2079F0E3B7D480F935A
38FA5BF0C3F7C8D289911CA873E9C64F8E6691B5B70F1677ED585DB20AD8836B
98F8CF2E4D3530157091CAED66265CE16CA551CD8A5301D5600B35B42B1162BE
17807AC34CE7DD6783BE10E8938FECE98C0676A007B60FA5B66D1B52E593AD3C
D23B04A8823D378CC0D2F0E9EFFAAD5759D75CFC15C18C2F0072CBA610E81026
9D5F0DF8A13677964AD1AE1879C0A7801C41A8DEC6F590A6F7DC73008A587903
136C507BBC1BCE76CA8C77F87CB48E184D0CE51C66E7877A804EE6B66A72B71A
F2B777488AA815B163B31F59DF0CEA5D14F82EF81D747A4FC60B67CF49F764D1
C6877ACE7B80673FA5F3431F11A458AB1FF3E7FB6A9403E32EDA0AF210A1D689
D09E91C5F8BD4BA8DF3F8F9BAC2C421CB5C939CC75C2F4F6D0F395B0160C7A15
947E3098878F0D06B82051CE80ECED48FB72160B21D8BBE4EB0FEC57F5B39334
377EA5AFE8F7E130FD31511CE7F8A49CE10882B6B798E3B27853233AA3A55182
6D09C01E3B0D942969E585C27B76ACB5885912F47C9B6021477FC6F9F75E584A
0F95E3B7D070635C40C581C1C600D19AF1484D7B39AB1C25EAF244A1473811B4
A7BB8FCE74076177D5178188B2CC49A0CF218809F7E928569B3CD6DBADC91D56
418B198DB795D641CE5BCA5F61814064FE4553BD7AD0AF86E0E9B63E8137BE37
B9BA2D268ACFB0BEB76EFF1979241C0B9D6FE91D0351742C8A224F1C66FB66C7
FD1AED3AA5B8B9CC15DBB861601CD5111AADA9A9EA615D049322884890C40273
A4762708A9FB67A0446F943CD2C1D0483FDA79F4B37E989EAEFC9634F4EB4868
8A6A89A8C68202C252BAFDA1FAEEE41090E28602A8219474D8A5D80E63C70EBD
A3A6997485438FDBC1403EA94C9B96CCF011F366A07BFC30FB4B56161FD2071A
F9DA54241023C74422873A9B6BC8D166681F12A8CBBD293696F8BE4B46EA9F06
DF542D1146C717FFBBADAC351E2763380E151B82C839FB2B40BDB37EA48FE730
95BAD654FDECE7DCAC8606237F9BAB440AF6CA5B33796709F4632CD062BCFC65
514F4B02A95DD4FD069F329D38B3F685348CF371728845FB50B63FABC5C82E9B
0B7BB511ABFD2EA28002E3F471CFF499BADD8FB21746FD3812EE2D0215FD602B
7AB7C72A20A9B7D3A7A24812ABEE40DEB3200F5F6E02820E00DC657974F2A31A
99D820CA50AE23D6F992643053F830CA94DC10B3524DB7166B09183BB5AC1271
D11B284E7DA4431611A36DD6C1D08E027C48CE8CA25115C283462C8781D8D33B
EDD8A1A11A4DBE49CE1BE107D327779287A750D5C89E7C8F6DB45E9BD0778F80
2C7A3251EED098FDE2F5BA44AD4373A5F800EB2DB6E1B8F1F40241CAF2671CBD
415FA1E135A0143FC0F91A00DAF9DE618C548B7BF961206323F6F433FFC58571
766BFACEB0E9ACB0A92FEC1B4876EDCE63907FB8D0CC7C8F0738AD5A2F1713A0
3D5AE825A10B18F0359E09F8F1B6CD7D7F3AF2E2A096523229EA3F1F6BD70F6E
183B4555E9AF2CBF248972B8B06E2C699D6A0D36950B35E59D685DE6F745741A
981BE016442877E1EDAE56BA1805CE60B2DA3057D5978E93C9037203A0D0AC12
288F85E5260C19E88A22648F753C733674E0850EE3C100F1B8F29E07BE266830
AC069AAFEC3425C50185C22AB4BD41D5148D44FCB48F8D48C8DCC78A7E9770A2
771230B1AAB55215C41F5CA0402972FB5E90421E7E982D57ECA3DCBE4ABEB4E0
1B95C0AAA8272AFE6F1B87A54424D8C415503CE538CE930DD9E7D5515A7F6AFC
C373CE7807C2B4A9028E1209CEECCEA4887CB4A08F719102D3942BD0B2F839AF
208BD18B72202721B0D41573DBBDE131AB512FAC8B4D95CF2B2B6BF09B5B31BE
17EE587895C0F2E3269E3A516E8E775353D07A1A21E4D6C6557CFA4104714E74
5FE7EC7876D8B50C46EF650AE8AB6735C51652555D04B25B3433DB692169B103
EEF0E57AF59C1CA43F8F8DBCAA255206D6026775E5E14929BBC2D276C8ED6A50
341CFD904DB5827AF4891EECBB98713DD5CFE60440F51B77C265D5A6BC976D1F
E9757375B1DE6A3AEABC8EF3E0C44AC75F19DC1DECCDFD71EAD323CD02D57132
3CED165FEAB4C4B82001A8B4E77752327F016F545D80A048ED1181DBAFF45EAB
C1CACD932BBBAC7A435C6F9E57F2856AE474CFB48284B6F082C4CBC5D69A45AE
2346E2B8DB906B3C389388A32FA02569C57C81647313D1A159DD5DEA3CB3CD93
A4C6AFAB1BA877A07C906C1D73A15E3AE0D764DED7A8107D0B6678CD3537C416
4BBC0DF19D405017C6120944CF3D8FC094EFDDC734906A6F3BE1DB1D407F4A9C
7609A3FA4C2CE95958FF11928DE3F24BA70EF22C87BCC2CA54807A3FEAD4F8D3
99E8581EEA532E78B2B9CB204057B20F28958C5B32D4A84EB2149CB0339E501F
27E01FAE2812CAC288A419365C4A0EEAA5CC311D228CEC0ED7066AB036314629
0D54544CD2CE371032F943A005F941DC18F78B7569309CC7223668C19CE72E73
8E00D9BF10CB3F45142A36F206C4C9849583AD3B17502A38172159D1D2D04820
214E6F5F68FF106263ECA8863BEA8773676B7F64D9E8EB3216A0B5071052D2CA
845E9B354B898581329A94B30ADC2244D2FB829E7C123E2DD0C270EA0CE06EE2
2526A56189341CAE928FBB9AA93F7A768355975F064943955DC9376E34ECC968
BA27B3200A50E3F4FDE2AEA79729ED5C8FA4468A30CE37A606EEB7867ED55D1C
FD4984200FEE1A08B67BAE02691E8360A33EFFDC19F5BD420215C615FBF84A03
D253339BB974430465C24DF55B62678300DB03A661662A988F8F35E3D9ED314D
88287661CF74DBDD4A55A8A1AB0576A19847CC5BEDA68215D04060666647C331
683931EC7C70E342A8716D2B4479E7FE487629089328C18A67566D70A05C4A7F
420151B28939348A45D1756F812918FC8252E7467D83BF36566BBDF0A92C233F
CD74CBD20E05E4E52AF24BBE3467A382BF09FD550D87210C6C1C7B002BB12011
8059B0B96E9CC62E038BFF540180C53C93A5A294FF1977B2698795C914F98902
FB4F31034922392A38AFB333A0B7DC4A6A10B4871A7787E5B262788388526E45
F627CB01DF38279098D3E93E498264FBCDC202544001A491A5CCC0CC60288F54
786D4CCCAAD3959412178C0F535EF3B79CBA43B56707AFAE1C463667FBA23E5F
61D095495A142DB871559E4C227E055F1F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 40258431 52099146 1000 8000 8000 (asgn5.dvi)
@start /Fa 130[684 1[684 1[684 684 684 684 684 684 684
684 684 684 684 684 684 684 684 1[684 684 684 684 684
684 684 684 684 1[684 1[684 684 684 2[684 3[684 1[684
684 1[684 684 684 1[684 1[684 1[684 684 684 684 684 684
684 2[684 684 684 684 4[684 684 684 684 684 684 684 684
684 684 684 684 684 684 684 684 1[684 2[684 34[{}68 1328.35
/CMTT12 rf /Fb 255[640{}1 664.176 /CMSY6 rf /Fc 147[267
439 1[296 33[633 515 70[{}5 664.176 /CMMI6 rf /Fd 205[406
8[320 320 40[{}3 664.176 /CMR6 rf /Fe 194[732 10[470
470 49[{}3 885.568 /CMR8 rf /Ff 201[0 3[627 49[732{}3
885.568 /CMSY8 rf /Fg 143[1328 23[1919 7[1402 17[1181
1[1181 1[1181 1[1181 15[1070 40[{}8 1328.35 /CMEX10 rf
/Fh 205[886 1328 15[1328 26[1033 5[1033{}5 1328.35 /CMSY10
rf /Fi 139[340 2[420 2[571 1[281 490 381 320 542 2[436
2[403 500 27[690 772 68[{}13 885.568 /CMMI8 rf /Fj 135[739
3[470 1[586 3[776 1138 387 2[444 3[603 676 1[553 683
14[990 4[1258 3[574 1[1026 842 963 1080 931 988 975 5[361
361 58[{}23 1328.35 /CMMI12 rf /Fk 133[578 686 686 939
686 723 506 513 506 686 723 650 723 1084 361 686 1[361
723 650 397 578 723 578 723 650 3[361 650 361 3[1336
2[939 723 957 1[885 1012 975 1[813 1011 1[469 975 1021
849 1[993 939 921 975 3[1012 1[361 361 650 650 650 650
650 650 650 650 650 650 1[361 434 361 1012 1[506 506
361 4[650 20[723 723 759 11[{}69 1328.35 /CMR12 rf /Fl
134[789 1[1079 1[830 581 589 610 1[830 747 830 1245 415
789 1[415 830 747 457 682 830 664 1[726 13[830 2[1021
1122 1168 9[1145 1079 1[1128 6[415 7[747 4[498 45[{}30
1328.35 /CMBX12 rf /Fm 139[697 707 2[996 897 996 1494
3[498 996 897 1[818 26[926 8[1354 12[897 16[1494 35[{}14
1594.02 /CMBX12 rf /Fn 137[1136 1196 837 849 879 1[1196
1076 1196 1[598 2[598 1196 1076 658 982 1196 956 1[1046
16[1470 1[1683 2041 9[1554 13[1076 3[1076 1076 2[717
45[{}25 1912.83 /CMBX12 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
%%BeginPaperSize: Letter
/setpagedevice where
{ pop << /PageSize [612 792] >> setpagedevice }
{ /letter where { pop letter } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 7911 7638 a Fn(CN)717 b(510)g(-)h(Principles)e
(and)g(Metho)60 b(ds)716 b(of)10125 9449 y(Cognitiv)-60
b(e)716 b(and)g(Neural)g(Mo)60 b(deling)18449 12697 y
Fm(Assignmen)-50 b(t)600 b(#)e(4)20140 14950 y(John)g(Joseph)3432
19637 y Fl(Sh)-42 b(un)g(ting)500 b(Net)-42 b(w)g(orks)3432
22885 y Fk(This)510 b(assignmen)-36 b(t)509 b(asks)i(us)e(to)h(examine)
h(equations)f(designed)g(to)g(mo)36 b(del)510 b(net)-36
b(w)g(orks)3432 24490 y(of)389 b Fj(n)h Fk(neurons)e(as)h(they)g
(approac)-36 b(h)389 b(equilibrium.)563 b(W)-108 b(e)389
b(are)h(giv)-36 b(en)389 b(the)g(follo)-36 b(wing)391
b(equa-)3432 26096 y(tions:)17470 29402 y Fj(dx)18885
29601 y Fi(i)p 17470 29995 1791 54 v 17793 31212 a Fj(dt)19763
30301 y Fk(=)368 b Fh(\000)p Fj(Ax)23890 30500 y Fi(i)24562
30301 y Fk(+)294 b Fj(B)67 b(I)27497 30500 y Fi(i)28168
30301 y Fh(\000)30170 28640 y Fi(n)29496 29039 y Fg(X)29714
31868 y Fi(j)51 b Ff(6)p Fe(=)p Fi(i)31637 30301 y Fj(I)32211
30500 y Fi(j)44941 30301 y Fk(\(1\))14927 34705 y Fj(dx)16342
34904 y Fi(i)p 14927 35298 V 15250 36515 a Fj(dt)17220
35603 y Fk(=)368 b Fh(\000)p Fj(Ax)21347 35802 y Fi(i)22019
35603 y Fk(+)294 b(\()p Fj(B)362 b Fh(\000)296 b Fj(x)27249
35802 y Fi(i)27625 35603 y Fk(\))p Fj(I)28705 35802 y
Fi(i)29375 35603 y Fh(\000)f Fj(x)31442 35802 y Fi(i)32713
33943 y(n)32040 34341 y Fg(X)32257 37170 y Fi(j)51 b
Ff(6)p Fe(=)p Fi(i)34180 35603 y Fj(I)34754 35802 y Fi(j)44941
35603 y Fk(\(2\))10091 39654 y Fj(dx)11506 39853 y Fi(i)p
10091 40247 V 10413 41464 a Fj(dt)12383 40552 y Fk(=)369
b Fh(\000)p Fj(Ax)16511 40751 y Fi(i)17182 40552 y Fk(+)295
b(\()p Fj(B)362 b Fh(\000)295 b Fj(x)22412 40751 y Fi(i)22788
40552 y Fk(\))23525 39290 y Fg(X)23515 42119 y Fi(k)24
b Ff(2)p Fi(D)25676 40552 y Fj(D)26756 40751 y Fi(k)g(i)27645
40552 y Fj(I)28219 40751 y Fi(k)29082 40552 y Fh(\000)296
b Fk(\()p Fj(C)390 b Fk(+)294 b Fj(x)34283 40751 y Fi(i)34659
40552 y Fk(\))35386 39290 y Fg(X)35517 42119 y Fi(l)11
b Ff(2)p Fi(E)37527 40552 y Fj(E)38490 40751 y Fi(l)g(i)39156
40552 y Fj(I)39730 40751 y Fi(l)44941 40552 y Fk(\(3\))3432
44376 y(P)-36 b(art)422 b(one)g(of)h(the)f(assignmen)-36
b(t)422 b(asks)h(us)f(to)g(analyze)i(the)e(\014rst)f(t)-36
b(w)g(o)423 b(equations,)i(whic)-36 b(h)3432 45981 y(represen)g(t)419
b(Additiv)-36 b(e)421 b(and)g(Sh)-36 b(un)g(ting)419
b(Net)-36 b(w)g(orks)421 b(\(resp)36 b(ectiv)-36 b(ely\),)425
b(and)420 b(part)h(t)-36 b(w)g(o)421 b(asks)3432 47586
y(us)308 b(to)h(n)-36 b(umerically)309 b(sim)-36 b(ulate)309
b(equation)g(three,)333 b(whic)-36 b(h)309 b(mo)36 b(dels)309
b(a)g(Distan)-36 b(t)308 b(Dep)36 b(enden)-36 b(t)3432
49191 y(Sh)g(un)g(ting)431 b(net)-36 b(w)g(ork.)3432
52439 y Fl(P)-42 b(art)499 b(One:)665 b(Analysis)3432
55688 y Fk(The)477 b(\014rst)f(part)h(of)h(the)f(assignmen)-36
b(t)477 b(asks)h(us)f(to)g(tak)-36 b(e)478 b(the)f(Additiv)-36
b(e)477 b(and)g(Sh)-36 b(un)g(ting)3432 57293 y(net)g(w)g(ork)441
b(equations)h(and)e(calculate)i(their)f(equilibirum)g(solution.)602
b(The)441 b(assignmen)-36 b(t)3432 58898 y(presen)g(ts)548
b(us)h(with)h(a)f(net)-36 b(w)g(ork)550 b(of)g(ten)f(neurons,)578
b(eac)-36 b(h)549 b(their)g(o)-36 b(wn)550 b(curren)-36
b(t;)606 b(in)550 b(the)3432 60503 y(ab)36 b(o)-36 b(v)g(e)399
b(equation,)407 b Fj(n)369 b Fk(=)g(10,)407 b(and)398
b(eac)-36 b(h)399 b(comp)36 b(onen)-36 b(t)398 b Fj(i)h
Fk(has)g(it's)h(o)-36 b(wn)399 b(curren)-36 b(t)397 b
Fj(I)42319 60702 y Fi(i)42695 60503 y Fk(.)567 b(F)-108
b(rom)3432 62108 y(this)467 b(curren)-36 b(t,)476 b(as)468
b(w)-36 b(ell)469 b(as)f(t)-36 b(w)g(o)468 b(initial)h(conditions)e
Fj(A)h Fk(and)g Fj(B)67 b Fk(,)477 b(w)-36 b(e)468 b(are)g(able)g(to)g
(solv)-36 b(e)3432 63713 y(for)434 b(the)f(equilibrium)g(solution)h(of)
h(eac)-36 b(h)433 b(neuron.)24692 75163 y(1)p eop end
%%Page: 2 2
TeXDict begin 2 1 bop 3432 7638 a Fk(W)-108 b(e)408 b(are)g(ask)-36
b(ed)408 b(to)g(calculate)h(these)f(equilbrium)f(solutions)i(giv)-36
b(en)408 b(input)f(parameters)3432 9243 y(A)433 b(and)g(B)h(for)g(t)-36
b(w)g(o)434 b(di\013eren)-36 b(t)432 b(inputs)h(curren)-36
b(ts:)20624 12768 y Fj(A)370 b Fk(=)e(0)p Fj(:)p Fk(1)p
Fj(;)221 b(B)438 b Fk(=)368 b(1;)15532 b(\(4\))13446
17273 y Fj(I)473 b Fk(=)369 b([1)p Fj(;)17926 16375 y
Fk(9)p 17601 16968 1301 54 v 17601 18184 a(10)19035 17273
y Fj(;)20075 16375 y Fk(8)p 19750 16968 V 19750 18184
a(10)21184 17273 y Fj(;)22224 16375 y Fk(7)p 21899 16968
V 21899 18184 a(10)23333 17273 y Fj(;)24373 16375 y Fk(6)p
24048 16968 V 24048 18184 a(10)25482 17273 y Fj(;)26522
16375 y Fk(5)p 26197 16968 V 26197 18184 a(10)27631 17273
y Fj(;)28671 16375 y Fk(4)p 28346 16968 V 28346 18184
a(10)29780 17273 y Fj(;)30821 16375 y Fk(3)p 30495 16968
V 30495 18184 a(10)31929 17273 y Fj(;)32970 16375 y Fk(2)p
32644 16968 V 32644 18184 a(10)34078 17273 y Fj(;)35119
16375 y Fk(1)p 34793 16968 V 34793 18184 a(10)36227 17273
y(])8353 b(\(5\))3432 20252 y(There)598 b(are)h(t)-36
b(w)g(o)598 b(w)-36 b(a)g(ys)600 b(to)e(do)h(\014nd)e(the)h
(equilibrium)h(solutions:)908 b(the)598 b(\014rst)g(is)h(t)-36
b(w)g(o)3432 21857 y(determine)485 b(the)g(analytic)i(solution)g(for)f
Fj(x)p Fk(\()p Fj(t)p Fk(\))f(and)h(determine)f(its)h(v)-72
b(alue)487 b(as)f Fj(t)458 b Fh(!)g(1)p Fk(.)3432 23462
y(The)356 b(second)g(is)g(t)-36 b(w)g(o)357 b(run)e(a)h(n)-36
b(umerical)356 b(sim)-36 b(ulation)357 b(of)g(our)f(di\013eren)-36
b(tial)356 b(equation)h(and)3432 25067 y(see)387 b(where)g(it)g(ends)g
(up)f(after)i(a)g(long)f(p)36 b(erio)g(d)387 b(of)h(time.)563
b(Both)387 b(of)h(these)f(metho)36 b(ds)387 b(w)-36 b(ere)3432
26672 y(carried)427 b(out,)h(but)e(I)h(will)h(only)g(b)36
b(e)427 b(outlining)g(the)g(former)g(\(the)f(latter)h(w)-36
b(as)428 b(used)e(as)i(a)3432 28278 y(sanit)-36 b(y)434
b(c)-36 b(hec)g(k,)433 b(and)g(b)36 b(oth)433 b(yielded)h(the)f(same)h
(results.\))3432 30827 y(T)-108 b(o)433 b(b)36 b(egin,)434
b(let)g(us)f(consider)h(a)f(di\013eren)-36 b(tial)434
b(equation)g(of)g(the)f(form)21130 33781 y Fj(dx)p 21130
34374 1415 54 v 21265 35591 a(dt)23047 34679 y Fk(=)368
b Fh(\000)p Fj(ax)296 b Fk(+)e Fj(b)15904 b Fk(\(6\))3432
37658 y(The)452 b(solution)h(will)h(con)-36 b(tain)452
b(a)h(homogeneous)g(and)f(particular)g(comp)36 b(onen)-36
b(t;)462 b(to)452 b(\014nd)3432 39263 y(the)433 b(homogenous)g(comp)36
b(onen)-36 b(t,)433 b(w)-36 b(e)434 b(m)-36 b(ust)433
b(solv)-36 b(e)22207 42216 y Fj(dx)p 22207 42810 V 22342
44026 a(dt)24124 43115 y Fk(=)369 b Fh(\000)p Fj(ax)16981
b Fk(\(7\))3432 46094 y(The)433 b(solution)h(to)g(whic)-36
b(h)433 b(is)h(of)g(the)f(form)20946 49619 y Fj(x)21685
49818 y Fi(hi)22603 49619 y Fk(\()p Fj(t)p Fk(\))368
b(=)h Fj(C)95 b(e)27463 49071 y Ff(\000)p Fi(at)44941
49619 y Fk(\(8\))3432 52259 y(It)550 b(should)g(b)36
b(e)551 b(noted)f(that)g(there)g(is)h(a)g(constan)-36
b(t)550 b(term)g(that)g(should)g(b)36 b(e)551 b(included;)3432
53864 y(ho)-36 b(w)g(ev)g(er,)402 b(this)395 b(term)f(will)h(b)36
b(e)395 b(tak)-36 b(en)394 b(care)h(of)g(in)g(the)f(next)g(step,)402
b(so)395 b(I)g(c)-36 b(ho)36 b(ose)394 b(to)h(lea)-36
b(v)g(e)3432 55469 y(it)433 b(out.)3432 58019 y(The)g(particular)h
(solution)g(can)f(b)36 b(e)433 b(found)h(b)-36 b(y)433
b(solving)i(the)e(equation)21130 60972 y Fj(dx)p 21130
61565 V 21265 62782 a(dt)23047 61871 y Fk(=)368 b Fh(\000)p
Fj(ax)296 b Fk(+)e Fj(b)15904 b Fk(\(9\))3432 64849 y(The)433
b(particular)h(solution)g(m)-36 b(ust)432 b(b)36 b(e)434
b(of)g(the)f(form)21090 68375 y Fj(x)p Fk(\()p Fj(t)p
Fk(\))368 b(=)h Fj(mt)294 b Fk(+)h Fj(d)15346 b Fk(\(10\))3432
71014 y(Plugging)434 b(this)f(bac)-36 b(k)434 b(in)-36
b(to)433 b(the)h(equation,)g(w)-36 b(e)434 b(see)f(that)24692
75163 y(2)p eop end
%%Page: 3 3
TeXDict begin 3 2 bop 19190 9243 a Fj(m)368 b Fk(=)h
Fh(\000)p Fj(a)p Fk(\()p Fj(mt)294 b Fk(+)h Fj(d)p Fk(\))g(+)g
Fj(b)13446 b Fk(\(11\))3432 11883 y(W)-108 b(e)433 b(conclude)g(that)g
(m=0,)h(so)23330 15735 y Fj(d)369 b Fk(=)25954 14836
y Fj(b)p 25889 15429 683 54 v 25889 16646 a(a)44291 15735
y Fk(\(12\))3432 18713 y(And)432 b(th)-36 b(us,)433 b(the)g(solution)h
(to)g(the)f(equation)h(prop)36 b(osed)433 b(ab)36 b(o)-36
b(v)g(e)434 b(is)20129 22565 y Fj(x)p Fk(\()p Fj(t)p
Fk(\))369 b(=)f Fj(C)95 b(e)25728 22017 y Ff(\000)p Fi(at)27650
22565 y Fk(+)29155 21667 y Fj(b)p 29090 22260 V 29090
23476 a(a)44291 22565 y Fk(\(13\))3432 25760 y(As)543
b Fj(t)556 b Fh(!)h(1)p Fk(,)571 b Fj(x)556 b Fh(!)13995
25237 y Fi(b)p 13947 25454 500 54 v 13947 26218 a(a)14579
25760 y Fk(.)909 b(This)543 b(is)h(the)f(equilbrium)h(solution.)908
b(No)-36 b(w)544 b(let)g(us)f(examine)3432 27365 y(the)416
b(additiv)-36 b(e)418 b(equation;)424 b(b)-36 b(y)417
b(grouping)g(all)h(terms)f(m)-36 b(ultiplied)417 b(b)-36
b(y)417 b Fj(x)37565 27564 y Fi(i)37941 27365 y Fk(,)k(whic)-36
b(h)417 b(in)g(total)3432 28970 y(b)36 b(ecome)522 b(analagous)i(to)e
Fj(a)p Fk(,)545 b(and)522 b(separately)h(grouping)f(the)g(constan)-36
b(t)522 b(terms)g(whic)-36 b(h)3432 30575 y(are)433 b(analagous)i(to)f
Fj(b)p Fk(,)g(w)-36 b(e)434 b(see)f(that)23314 34100
y Fj(a)368 b Fk(=)h Fj(A)17570 b Fk(\(14\))14531 39025
y Fj(b)369 b Fk(=)f Fj(B)67 b(I)18462 39224 y Fi(i)19133
39025 y Fh(\000)21135 37364 y Fi(n)20461 37763 y Fg(X)20679
40592 y Fi(j)51 b Ff(6)p Fe(=)p Fi(i)22601 39025 y Fj(I)23175
39224 y Fi(j)24031 39025 y Fk(=)368 b Fj(I)25985 39224
y Fi(i)26361 39025 y Fk(\()p Fj(B)362 b Fk(+)295 b(1\))g
Fh(\000)32977 37364 y Fi(n)32303 37763 y Fg(X)32446 40562
y Fi(j)51 b Fe(=1)34444 39025 y Fj(I)35018 39224 y Fi(j)44291
39025 y Fk(\(15\))3432 42964 y(Th)-36 b(us,)433 b(the)g(analytic)i
(additiv)-36 b(e)434 b(solution)f(for)i(neuron)d Fj(i)h
Fk(is)15379 48733 y Fj(x)16118 48932 y Fi(i)16494 48733
y Fk(\()p Fj(t)p Fk(\))368 b(=)h Fj(C)95 b(e)21354 48185
y Ff(\000)p Fi(at)23275 48733 y Fk(+)24715 46771 y Fj(I)25289
46970 y Fi(i)25664 46771 y Fk(\()p Fj(B)363 b Fk(+)294
b(1\))i Fh(\000)32138 45509 y Fi(n)31723 45775 y Fg(P)31607
47910 y Fi(j)51 b Fe(=1)33462 46771 y Fj(I)34036 46970
y Fi(j)p 24715 48428 9808 54 v 29131 49644 a Fj(A)44291
48733 y Fk(\(16\))3432 51712 y(W)-108 b(e)614 b(see)h(that)f(as)h
Fj(t)g Fk(gro)-36 b(ws)615 b(large,)661 b(the)614 b(exp)36
b(onen)-36 b(tial)615 b(term)g(will)g(v)-72 b(anish;)706
b(th)-36 b(us)614 b(the)3432 53317 y(equilibrium)433
b(solution)h(is)9120 56842 y Fj(x)370 b Fk(=)e([)p Fh(\000)p
Fk(35)p Fj(;)221 b Fh(\000)p Fk(37)p Fj(;)g Fh(\000)p
Fk(39)p Fj(;)g Fh(\000)p Fk(41)p Fj(;)g Fh(\000)p Fk(43)p
Fj(;)g Fh(\000)p Fk(45)p Fj(;)g Fh(\000)p Fk(47)p Fj(;)g
Fh(\000)p Fk(49)p Fj(;)g Fh(\000)p Fk(51)p Fj(;)g Fh(\000)p
Fk(53])3392 b(\(17\))3432 59482 y(These)433 b(solutions)h(ha)-36
b(v)g(e)434 b(b)36 b(een)433 b(n)-36 b(umerically)434
b(v)-36 b(eri\014ed)433 b(for)i(all)f(ten)f(neurons.)24692
75163 y(3)p eop end
%%Page: 4 4
TeXDict begin 4 3 bop 3432 7638 a Fk(The)389 b(sh)-36
b(un)g(ting)388 b(equation)i(app)36 b(ears)389 b(at)h(\014rst)e(to)i(b)
36 b(e)389 b(more)g(complex)i(but)d(can)h(b)36 b(e)390
b(easily)3432 9243 y(reduced)340 b(do)-36 b(wn)342 b(to)g(the)g(same)g
(basic)g(form.)549 b(By)342 b(grouping)g(together)g(all)h(homogeneous)
3432 10848 y(and)433 b(non-homogenous)f(\(constan)-36
b(t\))433 b(terms,)g(w)-36 b(e)434 b(see)g(that)15862
15054 y Fj(a)369 b Fk(=)g Fj(A)295 b Fk(+)g Fj(I)21446
15253 y Fi(i)22116 15054 y Fh(\000)24118 13393 y Fi(n)23444
13792 y Fg(X)23662 16620 y Fi(j)51 b Ff(6)p Fe(=)p Fi(i)25585
15054 y Fj(I)26159 15253 y Fi(j)27014 15054 y Fk(=)369
b Fj(A)295 b Fk(+)31646 13393 y Fi(n)30972 13792 y Fg(X)31114
16591 y Fi(j)51 b Fe(=1)33112 15054 y Fj(I)33686 15253
y Fi(j)44291 15054 y Fk(\(18\))22864 19676 y Fj(b)369
b Fk(=)f Fj(B)67 b(I)26795 19875 y Fi(i)44291 19676 y
Fk(\(19\))3432 22315 y(The)433 b(equlibrium)h(solution)f(is)h(there)f
(of)i(the)e(form)18913 26167 y Fj(x)19652 26366 y Fi(eq)32
b(i)21285 26167 y Fk(=)22863 25269 y Fj(b)p 22798 25862
683 54 v 22798 27078 a(a)23983 26167 y Fk(=)27240 25269
y Fj(B)67 b(I)28869 25468 y Fi(i)p 25496 25862 5493 54
v 25496 27797 a Fj(A)295 b Fk(+)28605 26535 y Fi(n)28189
26801 y Fg(P)28073 28936 y Fi(j)51 b Fe(=1)29929 27797
y Fj(I)30503 27996 y Fi(j)44291 26167 y Fk(\(20\))3432
31309 y(F)-108 b(or)433 b(our)g(parameters)g(and)g(initial)i(curren)-36
b(t)432 b(v)-72 b(alues,)434 b(this)g(comes)g(out)f(to)h(b)36
b(e)4820 36162 y Fj(x)369 b Fk(=)g([0)p Fj(:)p Fk(179)p
Fj(;)221 b Fk(0)p Fj(:)p Fk(161)p Fj(;)g Fk(0)p Fj(:)p
Fk(143)p Fj(;)g Fk(0)p Fj(:)p Fk(125)p Fj(;)g Fk(0)p
Fj(:)p Fk(107)p Fj(;)g Fk(0)p Fj(:)p Fk(089)p Fj(;)g
Fk(0)p Fj(:)p Fk(071)p Fj(;)g Fk(0)p Fj(:)p Fk(054)p
Fj(;)g Fk(0)p Fj(:)p Fk(035)p Fj(;)g Fk(0)p Fj(:)p Fk(018])1412
b(\(21\))3432 39411 y(When)433 b(w)-36 b(e)434 b(c)-36
b(hange)433 b(the)g(curren)-36 b(t)432 b(v)-72 b(alues)434
b(to)17243 42936 y Fj(I)473 b Fk(=)369 b([10)p Fj(;)221
b Fk(9)p Fj(;)g Fk(8)p Fj(;)g Fk(7)p Fj(;)g Fk(6)p Fj(;)g
Fk(5)p Fj(;)g Fk(4)p Fj(;)g Fk(3)p Fj(;)g Fk(2)p Fj(;)g
Fk(1])11510 b(\(22\))3432 45575 y(W)-108 b(e)458 b(see)h(that)f(the)g
(additiv)-36 b(e)459 b(and)f(sh)-36 b(un)g(ting)457 b(equations)i(ha)
-36 b(v)g(e)459 b(equilibrium)g(solutions)3432 47180
y(of)4713 52034 y Fj(x)369 b Fk(=)f([)p Fh(\000)p Fk(350)p
Fj(;)221 b Fh(\000)p Fk(370)p Fj(;)g Fh(\000)p Fk(390)p
Fj(;)g Fh(\000)p Fk(410)p Fj(;)g Fh(\000)p Fk(430)p Fj(;)g
Fh(\000)p Fk(450)p Fj(;)g Fh(\000)p Fk(470)p Fj(;)g Fh(\000)p
Fk(490)p Fj(;)g Fh(\000)p Fk(510)p Fj(;)g Fh(\000)p Fk(530])1300
b(\(23\))3432 54967 y(And)4820 57901 y Fj(x)369 b Fk(=)g([0)p
Fj(:)p Fk(182)p Fj(;)221 b Fk(0)p Fj(:)p Fk(163)p Fj(;)g
Fk(0)p Fj(:)p Fk(145)p Fj(;)g Fk(0)p Fj(:)p Fk(127)p
Fj(;)g Fk(0)p Fj(:)p Fk(109)p Fj(;)g Fk(0)p Fj(:)p Fk(091)p
Fj(;)g Fk(0)p Fj(:)p Fk(073)p Fj(;)g Fk(0)p Fj(:)p Fk(055)p
Fj(;)g Fk(0)p Fj(:)p Fk(036)p Fj(;)g Fk(0)p Fj(:)p Fk(018])1412
b(\(24\))3432 61149 y(resp)36 b(ectiv)-36 b(ely)-108
b(.)898 b(Note)540 b(that)g(while)h(the)e(additiv)-36
b(e)541 b(net)-36 b(w)g(ork)540 b(sa)-36 b(w)541 b(a)f(c)-36
b(hange)540 b(that)f(w)-36 b(as)3432 62754 y(in)435 b(direct)f(prop)36
b(ortion)435 b(to)h(our)f(c)-36 b(hange)435 b(in)g(curren)-36
b(t,)434 b(the)h(sh)-36 b(un)g(ting)434 b(net)-36 b(w)g(ork)435
b(remains)3432 64359 y(relativ)-36 b(ely)452 b(unc)-36
b(hanged.)630 b(This)451 b(is)h(due)e(to)h(the)g(comp)36
b(etitiv)-36 b(e)452 b(nature)e(of)i(the)e(sh)-36 b(un)g(ting)3432
65965 y(mo)36 b(del,)646 b(in)604 b(whic)-36 b(h)603
b(eac)-36 b(h)604 b(neuron)e(inhibits)h(the)h(rest;)688
b(though)603 b(the)g(curren)-36 b(t)602 b(v)-72 b(alues)3432
67570 y(w)-36 b(ere)320 b(increased)g(tenfold,)344 b(the)320
b(uniformit)-36 b(y)321 b(of)g(this)f(increase)h(allo)-36
b(w)g(ed)321 b(the)f(equilibrium)3432 69175 y(v)-72 b(alues)434
b(to)f(b)36 b(e)434 b(preserv)-36 b(ed.)24692 75163 y(4)p
eop end
%%Page: 5 5
TeXDict begin 5 4 bop 3432 7638 a Fk(With)592 b(regards)h(to)g(pattern)
e(v)-72 b(ariables,)634 b(the)592 b(Additiv)-36 b(e)593
b(net)-36 b(w)g(ork)593 b(should)f(sho)-36 b(w)593 b(the)3432
9243 y(biggest)496 b(c)-36 b(hange)495 b(as)h(it)g(is)g(nev)-36
b(er)496 b(\\normalized")g(relativ)-36 b(e)497 b(to)f(its)f(neigh)-36
b(b)36 b(or)496 b(neurons.)3432 10848 y(The)433 b(Sh)-36
b(un)g(ting)432 b(net)-36 b(w)g(ork)434 b(should)f(remain)g(relativ)-36
b(ely)435 b(unc)-36 b(hanged.)3432 31397 y @beginspecial
50 @llx 50 @lly 410 @urx 302 @ury 2267 @rwi 1700 @rhi
@setspecial
%%BeginDocument: data/figures/part1_1.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ./data/figures/part1_1.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Sun Oct  6 21:20:19 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (./data/figures/part1_1.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (john)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Oct  6 21:20:19 2013)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
546 280 M
63 0 V
6338 0 R
-63 0 V
462 280 M
(-550) Rshow
1.000 UL
LTb
546 674 M
63 0 V
6338 0 R
-63 0 V
462 674 M
(-500) Rshow
1.000 UL
LTb
546 1069 M
63 0 V
6338 0 R
-63 0 V
-6422 0 R
(-450) Rshow
1.000 UL
LTb
546 1463 M
63 0 V
6338 0 R
-63 0 V
-6422 0 R
(-400) Rshow
1.000 UL
LTb
546 1858 M
63 0 V
6338 0 R
-63 0 V
-6422 0 R
(-350) Rshow
1.000 UL
LTb
546 2252 M
63 0 V
6338 0 R
-63 0 V
-6422 0 R
(-300) Rshow
1.000 UL
LTb
546 2647 M
63 0 V
6338 0 R
-63 0 V
-6422 0 R
(-250) Rshow
1.000 UL
LTb
546 3041 M
63 0 V
6338 0 R
-63 0 V
-6422 0 R
(-200) Rshow
1.000 UL
LTb
546 3436 M
63 0 V
6338 0 R
-63 0 V
-6422 0 R
(-150) Rshow
1.000 UL
LTb
546 3830 M
63 0 V
6338 0 R
-63 0 V
-6422 0 R
(-100) Rshow
1.000 UL
LTb
546 4225 M
63 0 V
6338 0 R
-63 0 V
-6422 0 R
(-50) Rshow
1.000 UL
LTb
546 4619 M
63 0 V
6338 0 R
-63 0 V
-6422 0 R
( 0) Rshow
1.000 UL
LTb
546 280 M
0 63 V
0 4276 R
0 -63 V
546 140 M
( 0) Cshow
1.000 UL
LTb
1257 280 M
0 63 V
0 4276 R
0 -63 V
0 -4416 R
( 1) Cshow
1.000 UL
LTb
1968 280 M
0 63 V
0 4276 R
0 -63 V
0 -4416 R
( 2) Cshow
1.000 UL
LTb
2680 280 M
0 63 V
0 4276 R
0 -63 V
0 -4416 R
( 3) Cshow
1.000 UL
LTb
3391 280 M
0 63 V
0 4276 R
0 -63 V
0 -4416 R
( 4) Cshow
1.000 UL
LTb
4102 280 M
0 63 V
0 4276 R
0 -63 V
0 -4416 R
( 5) Cshow
1.000 UL
LTb
4813 280 M
0 63 V
0 4276 R
0 -63 V
0 -4416 R
( 6) Cshow
1.000 UL
LTb
5525 280 M
0 63 V
0 4276 R
0 -63 V
0 -4416 R
( 7) Cshow
1.000 UL
LTb
6236 280 M
0 63 V
0 4276 R
0 -63 V
0 -4416 R
( 8) Cshow
1.000 UL
LTb
6947 280 M
0 63 V
0 4276 R
0 -63 V
0 -4416 R
( 9) Cshow
1.000 UL
LTb
1.000 UL
LTb
546 4619 N
546 280 L
6401 0 V
0 4339 V
-6401 0 V
Z stroke
3746 4829 M
(Additive Comparison) Cshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UL
LT0
/Helvetica findfont 140 scalefont setfont
546 4343 M
711 -16 V
711 -16 V
712 -15 V
711 -16 V
711 -16 V
711 -16 V
712 -16 V
711 -15 V
711 -16 V
% End plot #1
% Begin plot #2
stroke
LT1
/Helvetica findfont 140 scalefont setfont
546 1858 M
711 -158 V
711 -158 V
712 -157 V
711 -158 V
711 -158 V
4813 911 L
5525 754 L
6236 596 L
6947 438 L
% End plot #2
stroke
LTb
546 4619 N
546 280 L
6401 0 V
0 4339 V
-6401 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 25486 w @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 2267 @rwi 1700 @rhi @setspecial
%%BeginDocument: data/figures/part1_2.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ./data/figures/part1_2.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Sun Oct  6 21:22:12 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (./data/figures/part1_2.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (john)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Oct  6 21:22:12 2013)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
630 280 M
63 0 V
6254 0 R
-63 0 V
546 280 M
( 0) Rshow
1.000 UL
LTb
630 714 M
63 0 V
6254 0 R
-63 0 V
546 714 M
( 0.02) Rshow
1.000 UL
LTb
630 1148 M
63 0 V
6254 0 R
-63 0 V
-6338 0 R
( 0.04) Rshow
1.000 UL
LTb
630 1582 M
63 0 V
6254 0 R
-63 0 V
-6338 0 R
( 0.06) Rshow
1.000 UL
LTb
630 2016 M
63 0 V
6254 0 R
-63 0 V
-6338 0 R
( 0.08) Rshow
1.000 UL
LTb
630 2450 M
63 0 V
6254 0 R
-63 0 V
-6338 0 R
( 0.1) Rshow
1.000 UL
LTb
630 2883 M
63 0 V
6254 0 R
-63 0 V
-6338 0 R
( 0.12) Rshow
1.000 UL
LTb
630 3317 M
63 0 V
6254 0 R
-63 0 V
-6338 0 R
( 0.14) Rshow
1.000 UL
LTb
630 3751 M
63 0 V
6254 0 R
-63 0 V
-6338 0 R
( 0.16) Rshow
1.000 UL
LTb
630 4185 M
63 0 V
6254 0 R
-63 0 V
-6338 0 R
( 0.18) Rshow
1.000 UL
LTb
630 4619 M
63 0 V
6254 0 R
-63 0 V
-6338 0 R
( 0.2) Rshow
1.000 UL
LTb
630 280 M
0 63 V
0 4276 R
0 -63 V
630 140 M
( 0) Cshow
1.000 UL
LTb
1332 280 M
0 63 V
0 4276 R
0 -63 V
0 -4416 R
( 1) Cshow
1.000 UL
LTb
2034 280 M
0 63 V
0 4276 R
0 -63 V
0 -4416 R
( 2) Cshow
1.000 UL
LTb
2736 280 M
0 63 V
0 4276 R
0 -63 V
0 -4416 R
( 3) Cshow
1.000 UL
LTb
3438 280 M
0 63 V
0 4276 R
0 -63 V
0 -4416 R
( 4) Cshow
1.000 UL
LTb
4139 280 M
0 63 V
0 4276 R
0 -63 V
0 -4416 R
( 5) Cshow
1.000 UL
LTb
4841 280 M
0 63 V
0 4276 R
0 -63 V
0 -4416 R
( 6) Cshow
1.000 UL
LTb
5543 280 M
0 63 V
0 4276 R
0 -63 V
0 -4416 R
( 7) Cshow
1.000 UL
LTb
6245 280 M
0 63 V
0 4276 R
0 -63 V
0 -4416 R
( 8) Cshow
1.000 UL
LTb
6947 280 M
0 63 V
0 4276 R
0 -63 V
0 -4416 R
( 9) Cshow
1.000 UL
LTb
1.000 UL
LTb
630 4619 N
630 280 L
6317 0 V
0 4339 V
-6317 0 V
Z stroke
3788 4829 M
(Shunting Comparison) Cshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UL
LT0
0.00 1.00 0.00 C /Helvetica findfont 140 scalefont setfont
630 4217 M
702 -393 V
702 -394 V
702 -394 V
702 -394 V
701 -393 V
702 -394 V
702 -394 V
702 -394 V
6947 674 L
% End plot #1
% Begin plot #2
1.000 UP
stroke
LT1
1.00 0.00 0.00 C /Helvetica findfont 140 scalefont setfont
630 4225 Pls
1332 3830 Pls
2034 3436 Pls
2736 3041 Pls
3438 2647 Pls
4139 2252 Pls
4841 1858 Pls
5543 1463 Pls
6245 1069 Pls
6947 674 Pls
% End plot #2
1.000 UL
LTb
630 4619 N
630 280 L
6317 0 V
0 4339 V
-6317 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 3432 52766 a @beginspecial 50 @llx 50 @lly
410 @urx 302 @ury 2267 @rwi 1700 @rhi @setspecial
%%BeginDocument: data/figures/part1_3.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ./data/figures/part1_3.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Sun Oct  6 21:29:21 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (./data/figures/part1_3.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (john)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Oct  6 21:29:21 2013)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
462 280 M
63 0 V
6422 0 R
-63 0 V
378 280 M
(-54) Rshow
1.000 UL
LTb
462 714 M
63 0 V
6422 0 R
-63 0 V
378 714 M
(-52) Rshow
1.000 UL
LTb
462 1148 M
63 0 V
6422 0 R
-63 0 V
-6506 0 R
(-50) Rshow
1.000 UL
LTb
462 1582 M
63 0 V
6422 0 R
-63 0 V
-6506 0 R
(-48) Rshow
1.000 UL
LTb
462 2016 M
63 0 V
6422 0 R
-63 0 V
-6506 0 R
(-46) Rshow
1.000 UL
LTb
462 2450 M
63 0 V
6422 0 R
-63 0 V
-6506 0 R
(-44) Rshow
1.000 UL
LTb
462 2883 M
63 0 V
6422 0 R
-63 0 V
-6506 0 R
(-42) Rshow
1.000 UL
LTb
462 3317 M
63 0 V
6422 0 R
-63 0 V
-6506 0 R
(-40) Rshow
1.000 UL
LTb
462 3751 M
63 0 V
6422 0 R
-63 0 V
-6506 0 R
(-38) Rshow
1.000 UL
LTb
462 4185 M
63 0 V
6422 0 R
-63 0 V
-6506 0 R
(-36) Rshow
1.000 UL
LTb
462 4619 M
63 0 V
6422 0 R
-63 0 V
-6506 0 R
(-34) Rshow
1.000 UL
LTb
462 280 M
0 63 V
0 4276 R
0 -63 V
462 140 M
( 0) Cshow
1.000 UL
LTb
1183 280 M
0 63 V
0 4276 R
0 -63 V
0 -4416 R
( 1) Cshow
1.000 UL
LTb
1903 280 M
0 63 V
0 4276 R
0 -63 V
0 -4416 R
( 2) Cshow
1.000 UL
LTb
2624 280 M
0 63 V
0 4276 R
0 -63 V
0 -4416 R
( 3) Cshow
1.000 UL
LTb
3344 280 M
0 63 V
0 4276 R
0 -63 V
0 -4416 R
( 4) Cshow
1.000 UL
LTb
4065 280 M
0 63 V
0 4276 R
0 -63 V
0 -4416 R
( 5) Cshow
1.000 UL
LTb
4785 280 M
0 63 V
0 4276 R
0 -63 V
0 -4416 R
( 6) Cshow
1.000 UL
LTb
5506 280 M
0 63 V
0 4276 R
0 -63 V
0 -4416 R
( 7) Cshow
1.000 UL
LTb
6226 280 M
0 63 V
0 4276 R
0 -63 V
0 -4416 R
( 8) Cshow
1.000 UL
LTb
6947 280 M
0 63 V
0 4276 R
0 -63 V
0 -4416 R
( 9) Cshow
1.000 UL
LTb
1.000 UL
LTb
462 4619 N
462 280 L
6485 0 V
0 4339 V
-6485 0 V
Z stroke
3704 4829 M
(Additive; input 1) Cshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UL
LT0
/Helvetica findfont 140 scalefont setfont
462 4402 M
721 -433 V
720 -434 V
721 -434 V
720 -434 V
721 -434 V
720 -434 V
721 -434 V
6226 931 L
6947 497 L
% End plot #1
stroke
LTb
462 4619 N
462 280 L
6485 0 V
0 4339 V
-6485 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 25486 w @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 2267 @rwi 1700 @rhi @setspecial
%%BeginDocument: data/figures/part1_4.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ./data/figures/part1_4.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Sun Oct  6 21:27:56 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (./data/figures/part1_4.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (john)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Oct  6 21:27:56 2013)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
630 280 M
63 0 V
6254 0 R
-63 0 V
546 280 M
(-0.15) Rshow
1.000 UL
LTb
630 900 M
63 0 V
6254 0 R
-63 0 V
546 900 M
(-0.1) Rshow
1.000 UL
LTb
630 1520 M
63 0 V
6254 0 R
-63 0 V
-6338 0 R
(-0.05) Rshow
1.000 UL
LTb
630 2140 M
63 0 V
6254 0 R
-63 0 V
-6338 0 R
( 0) Rshow
1.000 UL
LTb
630 2759 M
63 0 V
6254 0 R
-63 0 V
-6338 0 R
( 0.05) Rshow
1.000 UL
LTb
630 3379 M
63 0 V
6254 0 R
-63 0 V
-6338 0 R
( 0.1) Rshow
1.000 UL
LTb
630 3999 M
63 0 V
6254 0 R
-63 0 V
-6338 0 R
( 0.15) Rshow
1.000 UL
LTb
630 4619 M
63 0 V
6254 0 R
-63 0 V
-6338 0 R
( 0.2) Rshow
1.000 UL
LTb
630 280 M
0 63 V
0 4276 R
0 -63 V
630 140 M
( 0) Cshow
1.000 UL
LTb
1332 280 M
0 63 V
0 4276 R
0 -63 V
0 -4416 R
( 1) Cshow
1.000 UL
LTb
2034 280 M
0 63 V
0 4276 R
0 -63 V
0 -4416 R
( 2) Cshow
1.000 UL
LTb
2736 280 M
0 63 V
0 4276 R
0 -63 V
0 -4416 R
( 3) Cshow
1.000 UL
LTb
3438 280 M
0 63 V
0 4276 R
0 -63 V
0 -4416 R
( 4) Cshow
1.000 UL
LTb
4139 280 M
0 63 V
0 4276 R
0 -63 V
0 -4416 R
( 5) Cshow
1.000 UL
LTb
4841 280 M
0 63 V
0 4276 R
0 -63 V
0 -4416 R
( 6) Cshow
1.000 UL
LTb
5543 280 M
0 63 V
0 4276 R
0 -63 V
0 -4416 R
( 7) Cshow
1.000 UL
LTb
6245 280 M
0 63 V
0 4276 R
0 -63 V
0 -4416 R
( 8) Cshow
1.000 UL
LTb
6947 280 M
0 63 V
0 4276 R
0 -63 V
0 -4416 R
( 9) Cshow
1.000 UL
LTb
1.000 UL
LTb
630 4619 N
630 280 L
6317 0 V
0 4339 V
-6317 0 V
Z stroke
3788 4829 M
(Pattern Variable Comparison) Cshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UL
LT0
0.00 1.00 0.00 C /Helvetica findfont 140 scalefont setfont
630 4394 M
702 -226 V
702 -225 V
702 -226 V
702 -225 V
701 -225 V
702 -226 V
702 -225 V
702 -226 V
702 -225 V
% End plot #1
% Begin plot #2
1.000 UP
stroke
LT1
1.00 0.00 0.00 C /Helvetica findfont 140 scalefont setfont
630 4394 Pls
1332 4168 Pls
2034 3943 Pls
2736 3717 Pls
3438 3492 Pls
4139 3267 Pls
4841 3041 Pls
5543 2816 Pls
6245 2590 Pls
6947 2365 Pls
% End plot #2
% Begin plot #3
1.000 UP
1.000 UL
LT2
1.00 0.00 0.00 C /Helvetica findfont 140 scalefont setfont
630 1153 Crs
1332 1097 Crs
2034 1041 Crs
2736 984 Crs
3438 928 Crs
4139 872 Crs
4841 815 Crs
5543 759 Crs
6245 703 Crs
6947 646 Crs
% End plot #3
% Begin plot #4
1.000 UL
LT3
0.00 1.00 0.00 C /Helvetica findfont 140 scalefont setfont
630 1153 M
702 -56 V
702 -56 V
702 -57 V
702 -56 V
701 -56 V
702 -57 V
702 -56 V
702 -56 V
702 -57 V
% End plot #4
stroke
LTb
630 4619 N
630 280 L
6317 0 V
0 4339 V
-6317 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 3432 55506 a(The)568 b(top)h(t)-36 b(w)g(o)568
b(graphs)h(sho)-36 b(w)569 b(curren)-36 b(t)567 b(comparisons)i(for)g
(the)f(Additiv)-36 b(e)569 b(\(left\))g(and)3432 57111
y(Sh)-36 b(un)g(ting)532 b(\(righ)-36 b(t\))534 b(neural)g(net)-36
b(w)g(orks;)585 b(the)534 b(prop)36 b(ortionalit)-36
b(y)535 b(b)36 b(et)-36 b(w)g(een)534 b(curren)-36 b(t)533
b(and)3432 58716 y(p)36 b(oten)-36 b(tial)433 b(in)h(the)f(Additiv)-36
b(e)433 b(net)-36 b(w)g(ork)434 b(directly)g(re\015ects)f(the)g
(tenfold)h(increase.)3432 61266 y(The)480 b(b)36 b(ottom)481
b(left)g(sho)-36 b(ws)481 b(the)f(Additiv)-36 b(e)480
b(net)-36 b(w)g(ork)481 b(with)g(the)f(\014rst)g(curren)-36
b(t)479 b(con\014gu-)3432 62871 y(ration)513 b(\(so)g(it)g(could)g(b)36
b(e)512 b(seen)h(clearly\),)534 b(and)513 b(the)f(b)36
b(ottom)513 b(righ)-36 b(t)513 b(image)g(sho)-36 b(ws)514
b(the)3432 64476 y(comparison)433 b(of)i(pattern)d(v)-72
b(ariables)435 b(for)f(all)g(four)g(tests.)3432 67026
y(The)573 b(t)-36 b(w)g(o)573 b(plots)g(on)g(the)f(righ)-36
b(t)573 b(actually)h(sho)-36 b(w)573 b(b)36 b(oth)573
b(input)f(curren)-36 b(ts)571 b(o)-36 b(v)g(erlaid)574
b(on)3432 68632 y(one)459 b(another;)472 b(the)459 b(negation)h(of)g
(the)f(o)-36 b(v)g(erwhelming)460 b(di\013erence)f(seen)g(previously)h
(in)3432 70237 y(the)379 b(Additiv)-36 b(e)380 b(net)-36
b(w)g(ork)381 b(sho)-36 b(ws)380 b(the)f(impact)h(of)h(the)f(pattern)f
(v)-72 b(ariable,)392 b(though)379 b(I)i(had)3432 71842
y(some)433 b(concern)h(with)f(sign)h(\(m)-36 b(y)434
b(v)-72 b(alues)434 b(should)f(range)g([-1:1],)i(not)f([0:1]\).)24692
75163 y(5)p eop end
%%Page: 6 6
TeXDict begin 6 5 bop 3432 7638 a Fl(P)-42 b(art)333
b(2)f(:)582 b(Computational)335 b(Sim)-42 b(ulation)334
b(of)e(a)h(Distance-Dep)42 b(enden)-42 b(t)335 b(Sh)-42
b(un)g(t-)3432 9243 y(ing)498 b(net)-42 b(w)g(ork)3432
12492 y Fk(P)-36 b(art)319 b(t)-36 b(w)g(o)320 b(of)g(the)f(assignmen)
-36 b(t)319 b(asks)i(us)e(to)h(sim)-36 b(ulate)319 b(a)h(net)-36
b(w)g(ork)320 b(of)g(100)h(neurons)d(using)3432 14097
y(the)500 b(Distance-Dep)36 b(enden)-36 b(t)499 b(Sh)-36
b(un)g(ting)498 b(mo)36 b(del.)780 b(The)500 b(mo)36
b(del)501 b(con)-36 b(tains)500 b(b)36 b(oth)500 b(excita-)3432
15702 y(tory)567 b(and)f(inhibitory)g(terms)h(whic)-36
b(h)566 b(are)h(w)-36 b(eigh)g(ted)566 b(b)-36 b(y)567
b(the)f(\\distance")h(from)g(one)3432 17307 y(neuron)453
b(to)h(the)g(others;)465 b(in)454 b(our)g(case,)460 b(the)454
b(distance)g(is)h(quan)-36 b(ti\014ed)454 b(b)-36 b(y)454
b(the)g(neuron's)3432 18912 y(index)433 b(within)h(the)f(net)-36
b(w)g(ork,)434 b(ranging)g(from)g(0)f(to)h(100.)10091
21865 y Fj(dx)11506 22064 y Fi(i)p 10091 22458 1791 54
v 10413 23675 a Fj(dt)12383 22764 y Fk(=)369 b Fh(\000)p
Fj(Ax)16511 22963 y Fi(i)17182 22764 y Fk(+)295 b(\()p
Fj(B)362 b Fh(\000)295 b Fj(x)22412 22963 y Fi(i)22788
22764 y Fk(\))23525 21502 y Fg(X)23515 24331 y Fi(k)24
b Ff(2)p Fi(D)25676 22764 y Fj(D)26756 22963 y Fi(k)g(i)27645
22764 y Fj(I)28219 22963 y Fi(k)29082 22764 y Fh(\000)296
b Fk(\()p Fj(C)390 b Fk(+)294 b Fj(x)34283 22963 y Fi(i)34659
22764 y Fk(\))35386 21502 y Fg(X)35517 24331 y Fi(l)11
b Ff(2)p Fi(E)37527 22764 y Fj(E)38490 22963 y Fi(l)g(i)39156
22764 y Fj(I)39730 22963 y Fi(l)44291 22764 y Fk(\(25\))3432
26587 y(Lik)-36 b(e)373 b(our)f(other)g(mo)36 b(dels,)386
b(this)372 b(equation)i(can)e(b)36 b(e)373 b(analytically)i(solv)-36
b(ed)374 b(b)-36 b(y)372 b(com)-36 b(bining)3432 28192
y(homogeneous)433 b(and)g(non-homogeneous)g(terms:)16730
31717 y Fj(a)369 b Fk(=)g Fj(A)295 b Fk(+)21750 30455
y Fg(X)21740 33284 y Fi(k)24 b Ff(2)p Fi(D)23900 31717
y Fj(D)24980 31916 y Fi(k)g(i)25869 31717 y Fj(I)26443
31916 y Fi(k)27307 31717 y Fk(+)28614 30455 y Fg(X)28744
33284 y Fi(l)11 b Ff(2)p Fi(E)30754 31717 y Fj(E)31717
31916 y Fi(l)g(i)32384 31717 y Fj(I)32958 31916 y Fi(l)44291
31717 y Fk(\(26\))16811 35698 y Fj(b)369 b Fk(=)g Fj(B)20400
34436 y Fg(X)20390 37265 y Fi(k)24 b Ff(2)p Fi(D)22551
35698 y Fj(D)23631 35897 y Fi(k)g(i)24520 35698 y Fj(I)25094
35897 y Fi(k)25957 35698 y Fh(\000)296 b Fj(C)28533 34436
y Fg(X)28664 37265 y Fi(l)11 b Ff(2)p Fi(E)30673 35698
y Fj(E)31636 35897 y Fi(l)g(i)32303 35698 y Fj(I)32877
35897 y Fi(l)44291 35698 y Fk(\(27\))20327 40204 y Fj(x)p
Fk(\()p Fj(t)p Fk(\))368 b(=)h Fj(C)95 b(e)25926 39656
y Ff(\000)p Fi(at)27848 40204 y Fk(+)295 b Fj(b)14583
b Fk(\(28\))3432 42844 y(The)433 b(equilibrium)h(solution)g(is)g(then)
16512 47746 y Fj(x)17251 47945 y Fi(i)17996 47746 y Fk(=)19525
45871 y Fj(B)21070 44874 y Fg(P)20802 47039 y Fi(k)24
b Ff(2)p Fi(D)22962 45871 y Fj(D)24042 46070 y Fi(k)g(i)24931
45871 y Fj(I)25505 46070 y Fi(k)26369 45871 y Fh(\000)295
b Fj(C)29072 44874 y Fg(P)28944 47039 y Fi(l)11 b Ff(2)p
Fi(E)30824 45871 y Fj(E)31787 46070 y Fi(l)g(i)32454
45871 y Fj(I)33028 46070 y Fi(l)p 19509 47440 13881 54
v 19509 48657 a Fj(A)296 b Fk(+)22355 47661 y Fg(P)22086
49826 y Fi(k)24 b Ff(2)p Fi(D)24247 48657 y Fj(D)25327
48856 y Fi(k)g(i)26216 48657 y Fj(I)26790 48856 y Fi(k)27653
48657 y Fk(+)29088 47661 y Fg(P)28960 49826 y Fi(l)11
b Ff(2)p Fi(E)30839 48657 y Fj(E)31802 48856 y Fi(l)g(i)32469
48657 y Fj(I)33043 48856 y Fi(l)44291 47746 y Fk(\(29\))3432
52082 y(I)368 b(c)-36 b(hose)368 b(to)h(mo)36 b(del)369
b(this)f(net)-36 b(w)g(ork)368 b(with)h(wrap-around)e(b)36
b(oundary)368 b(conditions,)382 b(mean-)3432 53687 y(ing)490
b(neurons)f(close)i(to)f(the)g(end)f(of)i(our)f(index)g(are)g(treated)g
(as)g(neigh)-36 b(b)36 b(ors)490 b(to)g(those)3432 55292
y(at)444 b(the)g(b)36 b(eginning.)611 b(This)445 b(e\013ects)f(the)g(v)
-72 b(alue)445 b(of)g(our)f(sum)g(terms,)j(but)d(the)g(means)g(of)3432
56897 y(solving)504 b(the)f(equation)g(remain)g(unc)-36
b(hanged.)786 b(These)503 b(sum)g(terms)g(are)g(w)-36
b(eigh)g(ted)503 b(b)-36 b(y)3432 58502 y(the)433 b(\\distance")h(of)g
(a)g(neuron)e(to)i(its)g(neigh)-36 b(b)36 b(ors.)21086
62287 y Fj(D)22166 62486 y Fi(k)24 b(i)23424 62287 y
Fk(=)368 b Fj(e)25407 61687 y Ff(\000)26272 61240 y Fd(\()p
Fc(k)14 b Fb(\000)p Fc(i)p Fd(\))28301 60961 y(2)p 26272
61485 2490 40 v 26975 62144 a Fc(F)27598 61953 y Fd(2)44291
62287 y Fk(\(30\))20517 65203 y Fj(E)21480 65402 y Fi(l)d(i)22516
65203 y Fk(=)369 b(0)p Fj(:)p Fk(5)p Fj(e)26161 64603
y Ff(\000)27026 64156 y Fd(\()p Fc(l)p Fb(\000)p Fc(i)p
Fd(\))28869 63877 y(2)p 27026 64402 2304 40 v 27631 65060
a Fc(G)28264 64869 y Fd(2)44291 65203 y Fk(\(31\))3432
67843 y(where)465 b Fj(F)646 b Fk(and)465 b Fj(G)h Fk(are)g(w)-36
b(eigh)g(ting)466 b(parameters.)674 b(W)-108 b(e)466
b(thro)-36 b(w)465 b(a)-36 b(w)g(a)g(y)467 b(an)-36 b(y)466
b(w)-36 b(eigh)g(ts)466 b(less)3432 69448 y(than)427
b(0.01,)k(lea)-36 b(ving)430 b(us)e(with)g(a)h(\\radius")g(of)g(neigh)
-36 b(b)36 b(or)428 b(neurons)f(whic)-36 b(h)428 b(will)i(impact)3432
71053 y(our)j(neuron)f(of)j(in)-36 b(terest;)24692 75163
y(6)p eop end
%%Page: 7 7
TeXDict begin 7 6 bop 19209 9243 a Fj(r)19795 9442 y
Fi(D)21018 9243 y Fk(=)22398 8043 y Fg(p)p 23727 8043
7099 54 v 23727 9243 a Fh(\000)p Fj(F)25783 8859 y Fe(2)26308
9243 y Fj(l)29 b(n)p Fk(\(0)p Fj(:)p Fk(01\))13468 b(\(32\))19237
13488 y Fj(r)19823 13687 y Fi(E)20987 13488 y Fk(=)22367
12287 y Fg(p)p 23696 12287 7102 54 v 23696 13488 a Fh(\000)p
Fj(G)25755 13104 y Fe(2)26281 13488 y Fj(l)29 b(n)p Fk(\(0)p
Fj(:)p Fk(02\))13495 b(\(33\))3432 16127 y(This)300 b(radius)g(is)g(an)
g(in)-36 b(teger)300 b(v)-72 b(alue,)328 b(and)299 b(an)-36
b(y)300 b(neurons)g(outside)f(of)i(it)f(\(meaning)g(outside)3432
17732 y(of)434 b Fj(i)295 b Fh(\006)g Fj(R)445 b Fk(can)433
b(b)36 b(e)434 b(ignored)f(in)h(our)f(sum.\))3432 20282
y(W)-108 b(e)486 b(sim)-36 b(ulate)487 b(this)f(equation)h(for)g(four)g
(di\013eren)-36 b(t)485 b(input)g(curren)-36 b(t)486
b(sc)-36 b(hemes)486 b(and)g(t)-36 b(w)g(o)3432 21888
y(di\013eren)g(t)360 b(w)-36 b(eigh)g(ting)363 b(parameters)e(for)i(a)f
(total)h(of)f(eigh)-36 b(t)362 b(plots.)555 b(The)362
b(equilibrium)g(v)-72 b(al-)3432 23493 y(ues)420 b(w)-36
b(ere)420 b(calculated)h(b)-36 b(y)421 b(sim)-36 b(ulating)421
b(the)f(distance-dep)36 b(enden)-36 b(t)417 b(sh)-36
b(un)g(ting)420 b(equation)3432 25098 y(for)414 b(a)h(reasonably)g
(large)g(p)36 b(erio)g(d)414 b(of)h(time;)421 b(with)414
b(a)g(time)g(step)g(of)h(0.05)g(seconds)f(and)g(a)3432
26703 y(maxim)-36 b(um)433 b(time)h(of)g(100)h(seconds,)e(there)g(are)h
(a)g(total)g(of)g(2000)h(in)-36 b(tegration)434 b(steps.)3432
29253 y(The)469 b(sim)-36 b(ulation)469 b(our)g(1-d)g(net)-36
b(w)g(ork)469 b(w)-36 b(as)470 b(carried)f(out)g(using)g(the)f(RK4)i
(appro)-36 b(xima-)3432 30858 y(tion,)550 b(whic)-36
b(h)526 b(I'v)-36 b(e)527 b(simply)g(adapted)f(to)h(a)g(general)g(form)
g(and)f(will)i(probably)e(paste)3432 32463 y(around)432
b(in)i(future)f(assignmen)-36 b(ts.)3432 35013 y(Changing)524
b(the)f(n)-36 b(um)g(b)36 b(er)523 b(of)h(neurons)f(and)h(maxim)-36
b(um)524 b(time)g(ha)-36 b(v)g(e)524 b(impacts)g(on)g(the)3432
36618 y(run)-36 b(time;)653 b(in)581 b(serial)h(I)e(measured)h(a)g
(2.39s)h(run)-36 b(time)580 b(for)h(a)g Fj(tM)139 b(ax)620
b Fk(=)f(10)p Fj(;)221 b Fk(000)583 b(with)3432 38223
y Fj(n)375 b Fk(=)g(100)438 b(neurons.)588 b(The)437
b(problem)g(at)h(hand)e(is)h(quite)h(parallelizable,)i(ho)-36
b(w)g(ev)g(er,)439 b(and)3432 39828 y(most)433 b(of)i(the)e
(computation)g(time)g(is)h(due)f(to)h(the)f(RK4)h(sim)-36
b(ulation.)3432 42378 y(By)423 b(parallelizing)i(this)e(\(using)g(an)g
(attac)-36 b(hed)422 b(Op)36 b(enCL)422 b(k)-36 b(ernel\))424
b(I)f(managed)g(to)g(get)h(a)3432 43983 y(run)-36 b(time)444
b(of)i(0.39s)g(for)g Fj(tM)139 b(ax)388 b Fk(=)h(10)p
Fj(;)221 b Fk(000)447 b(and)e Fj(n)389 b Fk(=)g(1024)446
b(neurons,)i(whic)-36 b(h)445 b(is)g(a)h(h)-36 b(uge)3432
45588 y(increase.)576 b(This)426 b(increase,)i(ho)-36
b(w)g(ev)g(er,)428 b(b)36 b(ecame)426 b(negligible)h(for)f(our)g
(problem)f(wherein)3432 47193 y(something)455 b(lik)-36
b(e)457 b Fj(tM)139 b(ax)407 b Fk(=)f(100,)463 b Fj(n)407
b Fk(=)g(100)457 b(at)f(0.2s)h(pro)-36 b(v)g(ed)455 b(to)h(b)36
b(e)456 b(more)g(than)f(ample)3432 48799 y(time)433 b(to)h(let)g(our)f
(system)h(approac)-36 b(h)433 b(equilibrium.)3432 51348
y(Belo)-36 b(w)545 b(y)-36 b(ou)544 b(will)i(\014nd)c(m)-36
b(y)545 b(co)36 b(de)544 b(for)h(running)e(a)h(Runge-Kutta)g(sim)-36
b(ulation)544 b(on)g(all)3432 52954 y(neurons)432 b(giv)-36
b(en)434 b(the)f(input)g(curren)-36 b(t)432 b(and)h(parameters.)24692
75163 y(7)p eop end
%%Page: 8 8
TeXDict begin 8 7 bop 3432 7638 a Fa(void)681 b(simulate\(T)e(A,)k(T)g
(B,)g(T)g(C,)f(T)i(F,)e(T)h(G,)g(T)g(*I\))3432 9243 y({)4799
10848 y(//)f(loop)g(variable)e(and)i(current)f(sums)4799
12453 y(int)h(i;)4799 14058 y(T)h(Esum,)e(Isum;)4799
15663 y(//)h(Our)h(sum-radius)c(\(nothing)g(outside)i(of)i(it)f(should)
f(be)i(included\))4799 17269 y(int)f(rE)h(=)g
(sqrt\(-F*F*log\(0.01\)\);)4799 18874 y(int)f(rI)h(=)g
(sqrt\(-G*G*log\(0.02\)\);)4799 20479 y(//)f(for)h(all)f(N)h(neurons)
4799 22084 y(for)f(\(i=0;i<N;i++\))6166 23689 y({)7533
25294 y(Esum)g(=)h(0,)f(Isum)g(=)h(0;)7533 26899 y(int)f(k;)7533
28504 y(//)h(Calculate)c(the)j(excitatory)d(and)j(inhibitory)d(sums)
7533 30109 y(for)j(\(k=-rE;k<=rE;k++\))8900 31714 y({)10267
33319 y(int)g(r)h(=)g(\(i+k+N\)\045N;)10267 34925 y(T)g(e)g(=)g
(-\(k/F\)*\(k/F\);)10267 36530 y(Esum)f(+=)g(I[r]*exp\(e\);)8900
38135 y(})7533 39740 y(//)h(Note)e(the)h(wrap)g(around)f(\(modulus)f
(\045\))j(condition)7533 41345 y(for)f(\(k=-rI;k<=rI;k++\))8900
42950 y({)10267 44555 y(int)g(r)h(=)g(\(i+k+N\)\045N;)10267
46160 y(T)g(e)g(=)g(-\(k/G\)*\(k/G\);)10267 47765 y(Isum)f(+=)g
(0.5*I[r]*exp\(e\);)8900 49370 y(})7533 50976 y(//)h(Find)e
(equilibrium)e(values)i(over)g(a)j(long)d(period)g(of)i(time)7533
52581 y(T)g(x=0,t=0;)7533 54186 y(//)g(I)g(can't)e(explain)f(the)i
(/100,)g(other)f(than)h(numerical)d(error,)i(but)7533
55791 y(//)i(EQ)f(values)f(should)g(still)g(be)i(the)f(same)7533
57396 y(T)h(a)g(=)g(\(-A-Esum-Isum\)/100;)7533 59001
y(T)g(b)g(=)g(\(B*Esum-C*Isum\)/100;)7533 60606 y(do)g({)9584
62211 y(x=solveRK\(x,a,b\);)9584 63816 y(t+=DT;)7533
65421 y(})g(while)e(\(t<=T_MAX\);)7533 67026 y(//)i(write)e(data)h(to)g
(file)7533 68632 y(fprintf\(output,"\045d\\t\045lf\\n",i+1,x\);)6166
70237 y(})3432 71842 y(})24692 75163 y Fk(8)p eop end
%%Page: 9 9
TeXDict begin 9 8 bop 3432 7638 a Fk(Here)680 b(w)-36
b(e)681 b(see)f(m)-36 b(y)681 b(solv)-36 b(eRK)681 b(metho)36
b(d)680 b(and)g(eulerAdv)-72 b(ance)680 b(metho)36 b(d,)742
b(as)681 b(w)-36 b(ell)681 b(an)3432 9243 y(Op)36 b(enCL)543
b(k)-36 b(ernel)544 b(that)f(could)h(call)h(them)f(once)g(passed)g(in)g
(the)f(a)h(and)g(b)g(v)-72 b(alues)544 b(of)3432 10848
y(our)433 b(general)h(form)g(di\013eren)-36 b(tial)433
b(equation.)3432 14207 y Fa(T)683 b(solveRK)d(\(T)j(x0,)f(T)h(a,)g(T)g
(b\))3432 15812 y({)4799 17417 y(T)g(k1,k2,k3,k4,s;)4799
19023 y(k1)f(=)h(a*x0+b;)4799 20628 y(k2)f(=)h
(a*eulerAdvance\(x0,k1,DT/2\)+b;)4799 22233 y(k3)f(=)h
(a*eulerAdvance\(x0,k2,DT/2\)+b;)4799 23838 y(k4)f(=)h
(a*eulerAdvance\(x0,k3,DT\)+b;)4799 25443 y(s)g(=)g
(\(k1+2*k2+2*k3+k4\);)4799 27048 y(return)e
(eulerAdvance\(x0,s,DT/6.0\);)3432 28653 y(})3432 31863
y(T)i(eulerAdvance\(T)677 b(x0,)682 b(T)h(v,)g(T)g(dt\))3432
33468 y({)4799 35074 y(return)e(x0)h(+)h(dt)g(*)g(v;)3432
36679 y(})3432 40038 y(__kernel)d(void)h(solveEQ)3432
41643 y(\(__global)e(const)i(float*)g(a,)i(__global)d(const)h(float*)g
(b,)i(__global)c(float*)i(out,)h(int)g(n\))3432 43248
y({)6166 44853 y(int)g(i)h(=)g(get_global_id\(0\);)6166
46458 y(if)f(\(i)h(>=)g(n\))8900 48063 y(return;)6166
51273 y(float)e(x)i(=)g(0.0f;)6166 52878 y(float)e(t)i(=)g(0.0f;)6166
54484 y(float)e(ay)i(=)g(a[i];)6166 56089 y(float)e(be)i(=)g(b[i];)6166
59299 y(while)e(\(t<=T_MAX\))6166 60904 y({)8216 62509
y(x)j(=)f(solveRK\(x,ay,be\);)8216 64114 y(t+=DT;)6849
65719 y(})6849 67324 y(out[i])e(=)i(x;)3432 68929 y(})24692
75163 y Fk(9)p eop end
%%Page: 10 10
TeXDict begin 10 9 bop 3432 7638 a Fk(No)-36 b(w)304
b(w)-36 b(e)303 b(see)h(the)f(plots)h(from)g(this)f(sim)-36
b(ulation,)330 b(whic)-36 b(h)303 b(v)-72 b(ary)305 b(in)e(input)f
(curren)-36 b(t)302 b(sc)-36 b(heme)3432 9243 y(and)393
b(parameters)g(F)g(and)h(G.)f(Again,)402 b(the)394 b(initial)g(v)-72
b(alues)394 b(for)g Fj(A)p Fk(,)402 b Fj(B)67 b Fk(,)402
b(and)393 b Fj(C)489 b Fk(are)394 b(1,)402 b(10,)3432
10848 y(and)433 b(1.5,)h(resp)36 b(ectiv)-36 b(ely)-108
b(.)3432 13398 y(The)374 b(\014rst)g(output)g(plot)h(sho)-36
b(ws)375 b(the)f(neuron)g(equilibriums)h(for)g(the)f(follo)-36
b(wing)377 b(curren)-36 b(t)3432 15003 y(sc)g(heme:)14689
20317 y Fj(I)473 b Fk(=)17117 18045 y Fg(\()18187 19407
y Fk(10)1301 b(if)434 b Fj(x)370 b Fh(2)e Fk([1)i(:)f(24])434
b(or)g([76)370 b(:)f(100])18187 21333 y(80)1301 b(if)434
b Fj(x)370 b Fh(2)e Fk([25)i(:)f(75])3432 54913 y @beginspecial
50 @llx 50 @lly 410 @urx 302 @ury 4252 @rwi 2834 @rhi
@setspecial
%%BeginDocument: data/figures/1.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ./data/figures/1.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Sat Oct  5 22:56:20 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (./data/figures/1.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (john)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Oct  5 22:56:20 2013)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
686 448 M
63 0 V
6198 0 R
-63 0 V
602 448 M
( 2.5) Rshow
1.000 UL
LTb
686 1282 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 3) Rshow
1.000 UL
LTb
686 2116 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 3.5) Rshow
1.000 UL
LTb
686 2951 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 4) Rshow
1.000 UL
LTb
686 3785 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 4.5) Rshow
1.000 UL
LTb
686 4619 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 5) Rshow
1.000 UL
LTb
686 448 M
0 63 V
0 4108 R
0 -63 V
686 308 M
( 0) Cshow
1.000 UL
LTb
1312 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 10) Cshow
1.000 UL
LTb
1938 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 20) Cshow
1.000 UL
LTb
2564 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 30) Cshow
1.000 UL
LTb
3190 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 40) Cshow
1.000 UL
LTb
3817 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 50) Cshow
1.000 UL
LTb
4443 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 60) Cshow
1.000 UL
LTb
5069 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 70) Cshow
1.000 UL
LTb
5695 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 80) Cshow
1.000 UL
LTb
6321 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 90) Cshow
1.000 UL
LTb
6947 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 100) Cshow
1.000 UL
LTb
1.000 UL
LTb
686 4619 N
686 448 L
6261 0 V
0 4171 V
-6261 0 V
Z stroke
LCb setrgbcolor
112 2533 M
currentpoint gsave translate -270 rotate 0 0 M
(Equilibrium Potential \(mV\)) Cshow
grestore
LTb
LCb setrgbcolor
3816 98 M
(Neuron \(1-100\)) Cshow
LTb
3816 4829 M
(Configuration 1) Cshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UL
LT0
/Helvetica findfont 140 scalefont setfont
749 3300 M
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 -213 V
62 -447 V
63 -772 V
62 -914 V
63 -435 V
63 764 V
62 1465 V
63 1080 V
62 365 V
63 -114 V
63 -260 V
62 -212 V
63 -129 V
63 -64 V
62 -27 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 27 V
63 64 V
62 129 V
63 212 V
63 260 V
62 114 V
63 -365 V
62 -1080 V
63 -1465 V
63 -764 V
62 435 V
63 914 V
62 772 V
63 447 V
63 213 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
% End plot #1
% Begin plot #2
1.000 UP
stroke
LT1
0.00 0.00 1.00 C /Helvetica findfont 140 scalefont setfont
749 3300 Pls
811 3300 Pls
874 3300 Pls
936 3300 Pls
999 3300 Pls
1062 3300 Pls
1124 3300 Pls
1187 3300 Pls
1249 3300 Pls
1312 3300 Pls
1375 3300 Pls
1437 3300 Pls
1500 3300 Pls
1563 3300 Pls
1625 3300 Pls
1688 3300 Pls
1750 3300 Pls
1813 3300 Pls
1876 3087 Pls
1938 2640 Pls
2001 1868 Pls
2063 954 Pls
2126 519 Pls
2189 1283 Pls
2251 2748 Pls
2314 3828 Pls
2376 4193 Pls
2439 4079 Pls
2502 3819 Pls
2564 3607 Pls
2627 3478 Pls
2690 3414 Pls
2752 3387 Pls
2815 3387 Pls
2877 3387 Pls
2940 3387 Pls
3003 3387 Pls
3065 3387 Pls
3128 3387 Pls
3190 3387 Pls
3253 3387 Pls
3316 3387 Pls
3378 3387 Pls
3441 3387 Pls
3503 3387 Pls
3566 3387 Pls
3629 3387 Pls
3691 3387 Pls
3754 3387 Pls
3817 3387 Pls
3879 3387 Pls
3942 3387 Pls
4004 3387 Pls
4067 3387 Pls
4130 3387 Pls
4192 3387 Pls
4255 3387 Pls
4317 3387 Pls
4380 3387 Pls
4443 3387 Pls
4505 3387 Pls
4568 3387 Pls
4630 3387 Pls
4693 3387 Pls
4756 3387 Pls
4818 3387 Pls
4881 3387 Pls
4943 3387 Pls
5006 3414 Pls
5069 3478 Pls
5131 3607 Pls
5194 3819 Pls
5257 4079 Pls
5319 4193 Pls
5382 3828 Pls
5444 2748 Pls
5507 1283 Pls
5570 519 Pls
5632 954 Pls
5695 1868 Pls
5757 2640 Pls
5820 3087 Pls
5883 3300 Pls
5945 3300 Pls
6008 3300 Pls
6070 3300 Pls
6133 3300 Pls
6196 3300 Pls
6258 3300 Pls
6321 3300 Pls
6384 3300 Pls
6446 3300 Pls
6509 3300 Pls
6571 3300 Pls
6634 3300 Pls
6697 3300 Pls
6759 3300 Pls
6822 3300 Pls
6884 3300 Pls
6947 3300 Pls
% End plot #2
1.000 UL
LTb
686 4619 N
686 448 L
6261 0 V
0 4171 V
-6261 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 14337 59064 a(Figure)433 b(1:)579 b(Input)433
b(Sc)-36 b(heme)432 b(1,)i(F=2,)g(G=4)3432 61299 y(The)397
b(\014rst)f(sim)-36 b(ulation)398 b(plots)f(an)g(input)f(curren)-36
b(t)396 b(that)h(steps)g(from)g(a)h(v)-72 b(alue)398
b(of)f(10)h(to)g(a)3432 62904 y(v)-72 b(alue)368 b(of)i(80)f(b)36
b(et)-36 b(w)g(een)367 b(neurons)h(25)h Fh(!)g Fk(74.)557
b(Note)369 b(the)e(e\013ect)i(of)g(neigh)-36 b(b)36 b(oring)368
b(neurons)3432 64509 y(as)434 b(the)f(curren)-36 b(t)432
b(c)-36 b(hanges)433 b(from)h(a)g(lo)-36 b(w)435 b(to)e(high)h(v)-72
b(alue.)24367 75163 y(10)p eop end
%%Page: 11 11
TeXDict begin 11 10 bop 14689 10073 a Fj(I)473 b Fk(=)17117
7802 y Fg(\()18187 9163 y Fk(10)1301 b(if)434 b Fj(x)370
b Fh(2)e Fk([1)i(:)f(24])434 b(or)g([76)370 b(:)f(100])18187
11090 y(80)1301 b(if)434 b Fj(x)370 b Fh(2)e Fk([25)i(:)f(75])3432
44669 y @beginspecial 50 @llx 50 @lly 410 @urx 302 @ury
4252 @rwi 2834 @rhi @setspecial
%%BeginDocument: data/figures/2.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ./data/figures/2.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Sat Oct  5 22:56:20 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (./data/figures/2.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (john)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Oct  5 22:56:20 2013)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
686 448 M
63 0 V
6198 0 R
-63 0 V
602 448 M
( 2.5) Rshow
1.000 UL
LTb
686 1282 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 3) Rshow
1.000 UL
LTb
686 2116 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 3.5) Rshow
1.000 UL
LTb
686 2951 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 4) Rshow
1.000 UL
LTb
686 3785 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 4.5) Rshow
1.000 UL
LTb
686 4619 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 5) Rshow
1.000 UL
LTb
686 448 M
0 63 V
0 4108 R
0 -63 V
686 308 M
( 0) Cshow
1.000 UL
LTb
1312 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 10) Cshow
1.000 UL
LTb
1938 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 20) Cshow
1.000 UL
LTb
2564 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 30) Cshow
1.000 UL
LTb
3190 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 40) Cshow
1.000 UL
LTb
3817 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 50) Cshow
1.000 UL
LTb
4443 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 60) Cshow
1.000 UL
LTb
5069 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 70) Cshow
1.000 UL
LTb
5695 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 80) Cshow
1.000 UL
LTb
6321 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 90) Cshow
1.000 UL
LTb
6947 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 100) Cshow
1.000 UL
LTb
1.000 UL
LTb
686 4619 N
686 448 L
6261 0 V
0 4171 V
-6261 0 V
Z stroke
LCb setrgbcolor
112 2533 M
currentpoint gsave translate -270 rotate 0 0 M
(Equilibrium Potential \(mV\)) Cshow
grestore
LTb
LCb setrgbcolor
3816 98 M
(Neuron \(1-100\)) Cshow
LTb
3816 4829 M
(Configuration 2) Cshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UL
LT0
/Helvetica findfont 140 scalefont setfont
749 3335 M
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 -70 V
62 -107 V
63 -159 V
63 -225 V
62 -304 V
63 -390 V
62 -473 V
63 -459 V
63 -393 V
62 -209 V
63 80 V
62 401 V
63 645 V
63 736 V
62 679 V
63 530 V
62 349 V
63 177 V
63 38 V
62 -57 V
63 -111 V
63 -130 V
62 -124 V
63 -106 V
62 -88 V
63 -65 V
63 -46 V
62 -31 V
63 -22 V
62 -14 V
63 -8 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 8 V
63 14 V
62 22 V
63 31 V
63 46 V
62 65 V
63 88 V
62 106 V
63 124 V
63 130 V
62 111 V
63 57 V
63 -38 V
62 -177 V
63 -349 V
62 -530 V
63 -679 V
63 -736 V
62 -645 V
63 -401 V
62 -80 V
63 209 V
63 393 V
62 459 V
63 473 V
62 390 V
63 304 V
63 225 V
62 159 V
63 107 V
63 70 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
% End plot #1
% Begin plot #2
1.000 UP
stroke
LT1
0.00 0.00 1.00 C /Helvetica findfont 140 scalefont setfont
749 3335 Pls
811 3335 Pls
874 3335 Pls
936 3335 Pls
999 3335 Pls
1062 3335 Pls
1124 3335 Pls
1187 3335 Pls
1249 3335 Pls
1312 3335 Pls
1375 3265 Pls
1437 3158 Pls
1500 2999 Pls
1563 2774 Pls
1625 2470 Pls
1688 2080 Pls
1750 1607 Pls
1813 1148 Pls
1876 755 Pls
1938 546 Pls
2001 626 Pls
2063 1027 Pls
2126 1672 Pls
2189 2408 Pls
2251 3087 Pls
2314 3617 Pls
2376 3966 Pls
2439 4143 Pls
2502 4181 Pls
2564 4124 Pls
2627 4013 Pls
2690 3883 Pls
2752 3759 Pls
2815 3653 Pls
2877 3565 Pls
2940 3500 Pls
3003 3454 Pls
3065 3423 Pls
3128 3401 Pls
3190 3387 Pls
3253 3379 Pls
3316 3379 Pls
3378 3379 Pls
3441 3379 Pls
3503 3379 Pls
3566 3379 Pls
3629 3379 Pls
3691 3379 Pls
3754 3379 Pls
3817 3379 Pls
3879 3379 Pls
3942 3379 Pls
4004 3379 Pls
4067 3379 Pls
4130 3379 Pls
4192 3379 Pls
4255 3379 Pls
4317 3379 Pls
4380 3379 Pls
4443 3379 Pls
4505 3387 Pls
4568 3401 Pls
4630 3423 Pls
4693 3454 Pls
4756 3500 Pls
4818 3565 Pls
4881 3653 Pls
4943 3759 Pls
5006 3883 Pls
5069 4013 Pls
5131 4124 Pls
5194 4181 Pls
5257 4143 Pls
5319 3966 Pls
5382 3617 Pls
5444 3087 Pls
5507 2408 Pls
5570 1672 Pls
5632 1027 Pls
5695 626 Pls
5757 546 Pls
5820 755 Pls
5883 1148 Pls
5945 1607 Pls
6008 2080 Pls
6070 2470 Pls
6133 2774 Pls
6196 2999 Pls
6258 3158 Pls
6321 3265 Pls
6384 3335 Pls
6446 3335 Pls
6509 3335 Pls
6571 3335 Pls
6634 3335 Pls
6697 3335 Pls
6759 3335 Pls
6822 3335 Pls
6884 3335 Pls
6947 3335 Pls
% End plot #2
1.000 UL
LTb
686 4619 N
686 448 L
6261 0 V
0 4171 V
-6261 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 14337 48821 a(Figure)433 b(2:)579 b(Input)433
b(Sc)-36 b(heme)432 b(1,)i(F=4,)g(G=8)3432 51056 y(I)519
b(noticed)g(that,)541 b(in)519 b(general,)541 b(the)519
b(increase)h(in)f(F)g(and)g(G)g(\(or)g(the)g(\\radius")g(of)h(our)3432
52661 y(Gaussian\))542 b(seemed)g(to)h(smoth)f(out)g(v)-72
b(alues;)598 b(I)542 b(in)-36 b(terpreted)541 b(this)h(smo)36
b(othness)543 b(as)g(a)3432 54266 y(supression)441 b(of)j(inputs)d
(whose)i(di\013erences)e(w)-36 b(ere)443 b(relativ)-36
b(ely)444 b(small,)i(who)d(could)f(ha)-36 b(v)g(e)3432
55871 y(b)36 b(een)451 b(appro)-36 b(ximated)453 b(as)g(b)36
b(eing)452 b(uniform)h(with)f(one)h(another.)634 b(I)453
b(think)f(this)g(is)h(what)3432 57476 y(w)-36 b(as)434
b(mean)-36 b(t)433 b(b)-36 b(y)433 b(uniform)h(suppression,)f(though)f
(I)i(am)g(not)f(sure.)24367 75163 y(11)p eop end
%%Page: 12 12
TeXDict begin 12 11 bop 15014 18732 a Fj(I)473 b Fk(=)17442
16461 y Fg(\()18512 17822 y Fk(1)1301 b(if)434 b Fj(x)369
b Fh(2)g Fk([1)h(:)f(24])434 b(or)g([76)370 b(:)f(100])18512
19748 y(8)1301 b(if)434 b Fj(x)369 b Fh(2)g Fk([25)h(:)f(75])3432
53328 y @beginspecial 50 @llx 50 @lly 410 @urx 302 @ury
4252 @rwi 2834 @rhi @setspecial
%%BeginDocument: data/figures/3.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ./data/figures/3.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Sat Oct  5 22:56:20 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (./data/figures/3.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (john)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Oct  5 22:56:20 2013)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
686 448 M
63 0 V
6198 0 R
-63 0 V
602 448 M
( 2) Rshow
1.000 UL
LTb
686 1143 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 2.5) Rshow
1.000 UL
LTb
686 1838 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 3) Rshow
1.000 UL
LTb
686 2534 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 3.5) Rshow
1.000 UL
LTb
686 3229 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 4) Rshow
1.000 UL
LTb
686 3924 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 4.5) Rshow
1.000 UL
LTb
686 4619 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 5) Rshow
1.000 UL
LTb
686 448 M
0 63 V
0 4108 R
0 -63 V
686 308 M
( 0) Cshow
1.000 UL
LTb
1312 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 10) Cshow
1.000 UL
LTb
1938 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 20) Cshow
1.000 UL
LTb
2564 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 30) Cshow
1.000 UL
LTb
3190 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 40) Cshow
1.000 UL
LTb
3817 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 50) Cshow
1.000 UL
LTb
4443 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 60) Cshow
1.000 UL
LTb
5069 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 70) Cshow
1.000 UL
LTb
5695 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 80) Cshow
1.000 UL
LTb
6321 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 90) Cshow
1.000 UL
LTb
6947 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 100) Cshow
1.000 UL
LTb
1.000 UL
LTb
686 4619 N
686 448 L
6261 0 V
0 4171 V
-6261 0 V
Z stroke
LCb setrgbcolor
112 2533 M
currentpoint gsave translate -270 rotate 0 0 M
(Equilibrium Potential \(mV\)) Cshow
grestore
LTb
LCb setrgbcolor
3816 98 M
(Neuron \(1-100\)) Cshow
LTb
3816 4829 M
(Configuration 3) Cshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UL
LT0
/Helvetica findfont 140 scalefont setfont
749 2864 M
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 -144 V
62 -307 V
63 -537 V
62 -638 V
63 -272 V
63 673 V
62 1244 V
63 928 V
62 326 V
63 -80 V
63 -208 V
62 -171 V
63 -105 V
63 -51 V
62 -23 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 23 V
63 51 V
62 105 V
63 171 V
63 208 V
62 80 V
63 -326 V
62 -928 V
63 -1244 V
63 -673 V
62 272 V
63 638 V
62 537 V
63 307 V
63 144 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
% End plot #1
% Begin plot #2
1.000 UP
stroke
LT1
0.00 0.00 1.00 C /Helvetica findfont 140 scalefont setfont
749 2864 Pls
811 2864 Pls
874 2864 Pls
936 2864 Pls
999 2864 Pls
1062 2864 Pls
1124 2864 Pls
1187 2864 Pls
1249 2864 Pls
1312 2864 Pls
1375 2864 Pls
1437 2864 Pls
1500 2864 Pls
1563 2864 Pls
1625 2864 Pls
1688 2864 Pls
1750 2864 Pls
1813 2864 Pls
1876 2720 Pls
1938 2413 Pls
2001 1876 Pls
2063 1238 Pls
2126 966 Pls
2189 1639 Pls
2251 2883 Pls
2314 3811 Pls
2376 4137 Pls
2439 4057 Pls
2502 3849 Pls
2564 3678 Pls
2627 3573 Pls
2690 3522 Pls
2752 3499 Pls
2815 3499 Pls
2877 3499 Pls
2940 3499 Pls
3003 3499 Pls
3065 3499 Pls
3128 3499 Pls
3190 3499 Pls
3253 3499 Pls
3316 3499 Pls
3378 3499 Pls
3441 3499 Pls
3503 3499 Pls
3566 3499 Pls
3629 3499 Pls
3691 3499 Pls
3754 3499 Pls
3817 3499 Pls
3879 3499 Pls
3942 3499 Pls
4004 3499 Pls
4067 3499 Pls
4130 3499 Pls
4192 3499 Pls
4255 3499 Pls
4317 3499 Pls
4380 3499 Pls
4443 3499 Pls
4505 3499 Pls
4568 3499 Pls
4630 3499 Pls
4693 3499 Pls
4756 3499 Pls
4818 3499 Pls
4881 3499 Pls
4943 3499 Pls
5006 3522 Pls
5069 3573 Pls
5131 3678 Pls
5194 3849 Pls
5257 4057 Pls
5319 4137 Pls
5382 3811 Pls
5444 2883 Pls
5507 1639 Pls
5570 966 Pls
5632 1238 Pls
5695 1876 Pls
5757 2413 Pls
5820 2720 Pls
5883 2864 Pls
5945 2864 Pls
6008 2864 Pls
6070 2864 Pls
6133 2864 Pls
6196 2864 Pls
6258 2864 Pls
6321 2864 Pls
6384 2864 Pls
6446 2864 Pls
6509 2864 Pls
6571 2864 Pls
6634 2864 Pls
6697 2864 Pls
6759 2864 Pls
6822 2864 Pls
6884 2864 Pls
6947 2864 Pls
% End plot #2
1.000 UL
LTb
686 4619 N
686 448 L
6261 0 V
0 4171 V
-6261 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 14337 58109 a(Figure)433 b(3:)579 b(Input)433
b(Sc)-36 b(heme)432 b(2,)i(F=2,)g(G=4)3432 59714 y(Since)375
b(w)-36 b(e)376 b(are)g(using)g(a)g(Distan)-36 b(t-Dep)36
b(enden)-36 b(t)374 b(Sh)-36 b(un)g(ting)374 b(mo)36
b(del,)388 b(the)375 b(neurons)g(inhibit)3432 61319 y(one)343
b(another)g(and)g(generate)h(the)f(same)h(plot)f(as)h(b)36
b(efore)344 b(despite)f(a)h(signi\014can)-36 b(tly)344
b(lo)-36 b(w)g(er)3432 62925 y(input)432 b(curren)-36
b(t.)24367 75163 y(12)p eop end
%%Page: 13 13
TeXDict begin 13 12 bop 15014 18732 a Fj(I)473 b Fk(=)17442
16461 y Fg(\()18512 17822 y Fk(1)1301 b(if)434 b Fj(x)369
b Fh(2)g Fk([1)h(:)f(24])434 b(or)g([76)370 b(:)f(100])18512
19748 y(8)1301 b(if)434 b Fj(x)369 b Fh(2)g Fk([25)h(:)f(75])3432
53328 y @beginspecial 50 @llx 50 @lly 410 @urx 302 @ury
4252 @rwi 2834 @rhi @setspecial
%%BeginDocument: data/figures/4.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ./data/figures/4.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Sat Oct  5 22:56:20 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (./data/figures/4.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (john)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Oct  5 22:56:20 2013)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
686 448 M
63 0 V
6198 0 R
-63 0 V
602 448 M
( 2) Rshow
1.000 UL
LTb
686 1143 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 2.5) Rshow
1.000 UL
LTb
686 1838 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 3) Rshow
1.000 UL
LTb
686 2534 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 3.5) Rshow
1.000 UL
LTb
686 3229 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 4) Rshow
1.000 UL
LTb
686 3924 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 4.5) Rshow
1.000 UL
LTb
686 4619 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 5) Rshow
1.000 UL
LTb
686 448 M
0 63 V
0 4108 R
0 -63 V
686 308 M
( 0) Cshow
1.000 UL
LTb
1312 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 10) Cshow
1.000 UL
LTb
1938 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 20) Cshow
1.000 UL
LTb
2564 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 30) Cshow
1.000 UL
LTb
3190 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 40) Cshow
1.000 UL
LTb
3817 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 50) Cshow
1.000 UL
LTb
4443 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 60) Cshow
1.000 UL
LTb
5069 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 70) Cshow
1.000 UL
LTb
5695 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 80) Cshow
1.000 UL
LTb
6321 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 90) Cshow
1.000 UL
LTb
6947 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 100) Cshow
1.000 UL
LTb
1.000 UL
LTb
686 4619 N
686 448 L
6261 0 V
0 4171 V
-6261 0 V
Z stroke
LCb setrgbcolor
112 2533 M
currentpoint gsave translate -270 rotate 0 0 M
(Equilibrium Potential \(mV\)) Cshow
grestore
LTb
LCb setrgbcolor
3816 98 M
(Neuron \(1-100\)) Cshow
LTb
3816 4829 M
(Configuration 4) Cshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UL
LT0
/Helvetica findfont 140 scalefont setfont
749 3199 M
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 -52 V
62 -81 V
63 -119 V
63 -170 V
62 -230 V
63 -296 V
62 -361 V
63 -349 V
63 -297 V
62 -151 V
63 82 V
62 344 V
63 544 V
63 620 V
62 573 V
63 449 V
62 297 V
63 154 V
63 36 V
62 -44 V
63 -90 V
63 -105 V
62 -102 V
63 -87 V
62 -73 V
63 -52 V
63 -38 V
62 -26 V
63 -18 V
62 -11 V
63 -7 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 7 V
63 11 V
62 18 V
63 26 V
63 38 V
62 52 V
63 73 V
62 87 V
63 102 V
63 105 V
62 90 V
63 44 V
63 -36 V
62 -154 V
63 -297 V
62 -449 V
63 -573 V
63 -620 V
62 -544 V
63 -344 V
62 -82 V
63 151 V
63 297 V
62 349 V
63 361 V
62 296 V
63 230 V
63 170 V
62 119 V
63 81 V
63 52 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
% End plot #1
% Begin plot #2
1.000 UP
stroke
LT1
0.00 0.00 1.00 C /Helvetica findfont 140 scalefont setfont
749 3199 Pls
811 3199 Pls
874 3199 Pls
936 3199 Pls
999 3199 Pls
1062 3199 Pls
1124 3199 Pls
1187 3199 Pls
1249 3199 Pls
1312 3199 Pls
1375 3147 Pls
1437 3066 Pls
1500 2947 Pls
1563 2777 Pls
1625 2547 Pls
1688 2251 Pls
1750 1890 Pls
1813 1541 Pls
1876 1244 Pls
1938 1093 Pls
2001 1175 Pls
2063 1519 Pls
2126 2063 Pls
2189 2683 Pls
2251 3256 Pls
2314 3705 Pls
2376 4002 Pls
2439 4156 Pls
2502 4192 Pls
2564 4148 Pls
2627 4058 Pls
2690 3953 Pls
2752 3851 Pls
2815 3764 Pls
2877 3691 Pls
2940 3639 Pls
3003 3601 Pls
3065 3575 Pls
3128 3557 Pls
3190 3546 Pls
3253 3539 Pls
3316 3539 Pls
3378 3539 Pls
3441 3539 Pls
3503 3539 Pls
3566 3539 Pls
3629 3539 Pls
3691 3539 Pls
3754 3539 Pls
3817 3539 Pls
3879 3539 Pls
3942 3539 Pls
4004 3539 Pls
4067 3539 Pls
4130 3539 Pls
4192 3539 Pls
4255 3539 Pls
4317 3539 Pls
4380 3539 Pls
4443 3539 Pls
4505 3546 Pls
4568 3557 Pls
4630 3575 Pls
4693 3601 Pls
4756 3639 Pls
4818 3691 Pls
4881 3764 Pls
4943 3851 Pls
5006 3953 Pls
5069 4058 Pls
5131 4148 Pls
5194 4192 Pls
5257 4156 Pls
5319 4002 Pls
5382 3705 Pls
5444 3256 Pls
5507 2683 Pls
5570 2063 Pls
5632 1519 Pls
5695 1175 Pls
5757 1093 Pls
5820 1244 Pls
5883 1541 Pls
5945 1890 Pls
6008 2251 Pls
6070 2547 Pls
6133 2777 Pls
6196 2947 Pls
6258 3066 Pls
6321 3147 Pls
6384 3199 Pls
6446 3199 Pls
6509 3199 Pls
6571 3199 Pls
6634 3199 Pls
6697 3199 Pls
6759 3199 Pls
6822 3199 Pls
6884 3199 Pls
6947 3199 Pls
% End plot #2
1.000 UL
LTb
686 4619 N
686 448 L
6261 0 V
0 4171 V
-6261 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 14337 57479 a(Figure)433 b(4:)579 b(Input)433
b(Sc)-36 b(heme)432 b(2,)i(F=4,)g(G=8)3432 59714 y(Similar)370
b(to)f(b)36 b(efore,)384 b(where)369 b(an)h(increase)f(in)h(k)-36
b(ernel)370 b(width)f(lead)h(to)f(smo)36 b(other)370
b(results.)3432 61319 y(Note)547 b(the)g(areas)g(of)h(activit)-36
b(y)549 b(o)36 b(ccur)547 b(around)f(c)-36 b(hanges)548
b(in)f(input)f(curren)-36 b(t,)574 b(and)547 b(are)3432
62925 y(quic)-36 b(k)434 b(to)g(lev)-36 b(el)434 b(o\013)g(in)f(areas)h
(of)h(uniform)e(in)-36 b(tensit)g(y)-108 b(.)24367 75163
y(13)p eop end
%%Page: 14 14
TeXDict begin 14 13 bop 14689 16325 a Fj(I)473 b Fk(=)17117
14053 y Fg(\()18187 15415 y Fk(10)1301 b(if)434 b Fj(x)370
b Fh(2)e Fk([1)i(:)f(24])434 b(or)g([76)370 b(:)f(100])18187
17341 y(80)1301 b(if)434 b Fj(x)370 b Fh(2)e Fk([25)i(:)f(75])3432
50921 y @beginspecial 50 @llx 50 @lly 410 @urx 302 @ury
4252 @rwi 2834 @rhi @setspecial
%%BeginDocument: data/figures/5.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ./data/figures/5.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Sat Oct  5 22:56:20 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (./data/figures/5.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (john)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Oct  5 22:56:20 2013)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
686 448 M
63 0 V
6198 0 R
-63 0 V
602 448 M
( 2.5) Rshow
1.000 UL
LTb
686 1282 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 3) Rshow
1.000 UL
LTb
686 2116 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 3.5) Rshow
1.000 UL
LTb
686 2951 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 4) Rshow
1.000 UL
LTb
686 3785 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 4.5) Rshow
1.000 UL
LTb
686 4619 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 5) Rshow
1.000 UL
LTb
686 448 M
0 63 V
0 4108 R
0 -63 V
686 308 M
( 0) Cshow
1.000 UL
LTb
1312 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 10) Cshow
1.000 UL
LTb
1938 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 20) Cshow
1.000 UL
LTb
2564 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 30) Cshow
1.000 UL
LTb
3190 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 40) Cshow
1.000 UL
LTb
3817 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 50) Cshow
1.000 UL
LTb
4443 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 60) Cshow
1.000 UL
LTb
5069 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 70) Cshow
1.000 UL
LTb
5695 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 80) Cshow
1.000 UL
LTb
6321 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 90) Cshow
1.000 UL
LTb
6947 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 100) Cshow
1.000 UL
LTb
1.000 UL
LTb
686 4619 N
686 448 L
6261 0 V
0 4171 V
-6261 0 V
Z stroke
LCb setrgbcolor
112 2533 M
currentpoint gsave translate -270 rotate 0 0 M
(Equilibrium Potential \(mV\)) Cshow
grestore
LTb
LCb setrgbcolor
3816 98 M
(Neuron \(1-100\)) Cshow
LTb
3816 4829 M
(Configuration 5) Cshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UL
LT0
/Helvetica findfont 140 scalefont setfont
749 3300 M
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 -213 V
62 -447 V
63 -772 V
63 -914 V
62 -435 V
63 764 V
62 1465 V
63 1080 V
63 365 V
62 -114 V
63 -229 V
63 -148 V
62 0 V
63 148 V
62 229 V
63 114 V
63 -365 V
62 -1080 V
63 -1465 V
62 -764 V
63 435 V
63 914 V
62 772 V
63 447 V
62 213 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
% End plot #1
% Begin plot #2
1.000 UP
stroke
LT1
0.00 0.00 1.00 C /Helvetica findfont 140 scalefont setfont
749 3300 Pls
811 3300 Pls
874 3300 Pls
936 3300 Pls
999 3300 Pls
1062 3300 Pls
1124 3300 Pls
1187 3300 Pls
1249 3300 Pls
1312 3300 Pls
1375 3300 Pls
1437 3300 Pls
1500 3300 Pls
1563 3300 Pls
1625 3300 Pls
1688 3300 Pls
1750 3300 Pls
1813 3300 Pls
1876 3300 Pls
1938 3300 Pls
2001 3300 Pls
2063 3300 Pls
2126 3300 Pls
2189 3300 Pls
2251 3300 Pls
2314 3300 Pls
2376 3300 Pls
2439 3300 Pls
2502 3300 Pls
2564 3300 Pls
2627 3300 Pls
2690 3300 Pls
2752 3300 Pls
2815 3300 Pls
2877 3300 Pls
2940 3300 Pls
3003 3300 Pls
3065 3300 Pls
3128 3087 Pls
3190 2640 Pls
3253 1868 Pls
3316 954 Pls
3378 519 Pls
3441 1283 Pls
3503 2748 Pls
3566 3828 Pls
3629 4193 Pls
3691 4079 Pls
3754 3850 Pls
3817 3702 Pls
3879 3702 Pls
3942 3850 Pls
4004 4079 Pls
4067 4193 Pls
4130 3828 Pls
4192 2748 Pls
4255 1283 Pls
4317 519 Pls
4380 954 Pls
4443 1868 Pls
4505 2640 Pls
4568 3087 Pls
4630 3300 Pls
4693 3300 Pls
4756 3300 Pls
4818 3300 Pls
4881 3300 Pls
4943 3300 Pls
5006 3300 Pls
5069 3300 Pls
5131 3300 Pls
5194 3300 Pls
5257 3300 Pls
5319 3300 Pls
5382 3300 Pls
5444 3300 Pls
5507 3300 Pls
5570 3300 Pls
5632 3300 Pls
5695 3300 Pls
5757 3300 Pls
5820 3300 Pls
5883 3300 Pls
5945 3300 Pls
6008 3300 Pls
6070 3300 Pls
6133 3300 Pls
6196 3300 Pls
6258 3300 Pls
6321 3300 Pls
6384 3300 Pls
6446 3300 Pls
6509 3300 Pls
6571 3300 Pls
6634 3300 Pls
6697 3300 Pls
6759 3300 Pls
6822 3300 Pls
6884 3300 Pls
6947 3300 Pls
% End plot #2
1.000 UL
LTb
686 4619 N
686 448 L
6261 0 V
0 4171 V
-6261 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 14337 55072 a(Figure)433 b(5:)579 b(Input)433
b(Sc)-36 b(heme)432 b(3,)i(F=2,)g(G=4)3432 57307 y(This)556
b(w)-36 b(as)557 b(the)e(\014rst)g(of)i(m)-36 b(y)556
b(plots)g(that)g(I)g(think)g(lo)36 b(ok)557 b(a)g(bit)e(strange;)618
b(I'd)556 b(assume)3432 58912 y(that)367 b(giv)-36 b(en)368
b(the)f(short)h(nature)f(of)h(our)f(curren)-36 b(t-step)366
b(w)-36 b(e)368 b(do)g(not)f(allo)-36 b(w)369 b(the)e(neigh)-36
b(b)36 b(ors)3432 60517 y(enough)325 b(space)g(to)h(lev)-36
b(el)327 b(o\013)e(their)g(equilibrium)h(di\013erences.)542
b(The)325 b(longer)h(step)f(widths)3432 62122 y(mean)591
b(that)g(there)f(are)i(few)-36 b(er)592 b(areas)g(with)f(high)h(lev)-36
b(els)592 b(of)g(comptetition,)631 b(and)591 b(b)-36
b(y)3432 63727 y(minimizing)461 b(this)g(width)f(w)-36
b(e)462 b(can)f(see)g(our)g(radius)f(v)-72 b(ariable)462
b(will)g(no)-36 b(w)461 b(ha)-36 b(v)g(e)462 b(sharp)36
b(er)3432 65332 y(c)-36 b(hanges)433 b(to)h(tak)-36 b(e)434
b(in)-36 b(to)433 b(accoun)-36 b(t.)24367 75163 y(14)p
eop end
%%Page: 15 15
TeXDict begin 15 14 bop 14689 18059 a Fj(I)473 b Fk(=)17117
15787 y Fg(\()18187 17149 y Fk(10)1301 b(if)434 b Fj(x)370
b Fh(2)e Fk([1)i(:)f(44])434 b(or)g([56)370 b(:)f(100])18187
19075 y(80)1301 b(if)434 b Fj(x)370 b Fh(2)e Fk([45)i(:)f(55])3432
52655 y @beginspecial 50 @llx 50 @lly 410 @urx 302 @ury
4252 @rwi 2834 @rhi @setspecial
%%BeginDocument: data/figures/6.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ./data/figures/6.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Sat Oct  5 22:56:20 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (./data/figures/6.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (john)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Oct  5 22:56:20 2013)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
686 448 M
63 0 V
6198 0 R
-63 0 V
602 448 M
( 2.5) Rshow
1.000 UL
LTb
686 1143 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 3) Rshow
1.000 UL
LTb
686 1838 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 3.5) Rshow
1.000 UL
LTb
686 2534 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 4) Rshow
1.000 UL
LTb
686 3229 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 4.5) Rshow
1.000 UL
LTb
686 3924 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 5) Rshow
1.000 UL
LTb
686 4619 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 5.5) Rshow
1.000 UL
LTb
686 448 M
0 63 V
0 4108 R
0 -63 V
686 308 M
( 0) Cshow
1.000 UL
LTb
1312 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 10) Cshow
1.000 UL
LTb
1938 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 20) Cshow
1.000 UL
LTb
2564 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 30) Cshow
1.000 UL
LTb
3190 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 40) Cshow
1.000 UL
LTb
3817 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 50) Cshow
1.000 UL
LTb
4443 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 60) Cshow
1.000 UL
LTb
5069 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 70) Cshow
1.000 UL
LTb
5695 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 80) Cshow
1.000 UL
LTb
6321 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 90) Cshow
1.000 UL
LTb
6947 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 100) Cshow
1.000 UL
LTb
1.000 UL
LTb
686 4619 N
686 448 L
6261 0 V
0 4171 V
-6261 0 V
Z stroke
LCb setrgbcolor
112 2533 M
currentpoint gsave translate -270 rotate 0 0 M
(Equilibrium Potential \(mV\)) Cshow
grestore
LTb
LCb setrgbcolor
3816 98 M
(Neuron \(1-100\)) Cshow
LTb
3816 4829 M
(Configuration 6) Cshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UL
LT0
/Helvetica findfont 140 scalefont setfont
749 2854 M
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 -58 V
63 -90 V
62 -132 V
63 -188 V
62 -253 V
63 -325 V
63 -394 V
62 -383 V
63 -327 V
62 -175 V
63 89 V
63 363 V
62 574 V
63 660 V
62 625 V
63 513 V
63 378 V
62 245 V
63 141 V
63 62 V
62 0 V
63 -62 V
62 -141 V
63 -245 V
63 -378 V
62 -513 V
63 -625 V
62 -660 V
63 -574 V
63 -363 V
62 -89 V
63 175 V
62 327 V
63 383 V
63 394 V
62 325 V
63 253 V
62 188 V
63 132 V
63 90 V
62 58 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
% End plot #1
% Begin plot #2
1.000 UP
stroke
LT1
0.00 0.00 1.00 C /Helvetica findfont 140 scalefont setfont
749 2854 Pls
811 2854 Pls
874 2854 Pls
936 2854 Pls
999 2854 Pls
1062 2854 Pls
1124 2854 Pls
1187 2854 Pls
1249 2854 Pls
1312 2854 Pls
1375 2854 Pls
1437 2854 Pls
1500 2854 Pls
1563 2854 Pls
1625 2854 Pls
1688 2854 Pls
1750 2854 Pls
1813 2854 Pls
1876 2854 Pls
1938 2854 Pls
2001 2854 Pls
2063 2854 Pls
2126 2854 Pls
2189 2854 Pls
2251 2854 Pls
2314 2854 Pls
2376 2854 Pls
2439 2854 Pls
2502 2854 Pls
2564 2854 Pls
2627 2796 Pls
2690 2706 Pls
2752 2574 Pls
2815 2386 Pls
2877 2133 Pls
2940 1808 Pls
3003 1414 Pls
3065 1031 Pls
3128 704 Pls
3190 529 Pls
3253 618 Pls
3316 981 Pls
3378 1555 Pls
3441 2215 Pls
3503 2840 Pls
3566 3353 Pls
3629 3731 Pls
3691 3976 Pls
3754 4117 Pls
3817 4179 Pls
3879 4179 Pls
3942 4117 Pls
4004 3976 Pls
4067 3731 Pls
4130 3353 Pls
4192 2840 Pls
4255 2215 Pls
4317 1555 Pls
4380 981 Pls
4443 618 Pls
4505 529 Pls
4568 704 Pls
4630 1031 Pls
4693 1414 Pls
4756 1808 Pls
4818 2133 Pls
4881 2386 Pls
4943 2574 Pls
5006 2706 Pls
5069 2796 Pls
5131 2854 Pls
5194 2854 Pls
5257 2854 Pls
5319 2854 Pls
5382 2854 Pls
5444 2854 Pls
5507 2854 Pls
5570 2854 Pls
5632 2854 Pls
5695 2854 Pls
5757 2854 Pls
5820 2854 Pls
5883 2854 Pls
5945 2854 Pls
6008 2854 Pls
6070 2854 Pls
6133 2854 Pls
6196 2854 Pls
6258 2854 Pls
6321 2854 Pls
6384 2854 Pls
6446 2854 Pls
6509 2854 Pls
6571 2854 Pls
6634 2854 Pls
6697 2854 Pls
6759 2854 Pls
6822 2854 Pls
6884 2854 Pls
6947 2854 Pls
% End plot #2
1.000 UL
LTb
686 4619 N
686 448 L
6261 0 V
0 4171 V
-6261 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 14337 56806 a(Figure)433 b(6:)579 b(Input)433
b(Sc)-36 b(heme)432 b(3,)i(F=4,)g(G=8)3432 59041 y(W)-108
b(e)316 b(see)i(similar)f(b)36 b(eha)-36 b(vior)318 b(here,)340
b(although)316 b(the)h(increased)g(k)-36 b(ernel)317
b(width)f(has)h(allo)-36 b(w)g(ed)3432 60646 y(the)437
b(middle)h(area)g(to)g(remain)g(smo)36 b(oth.)592 b(This)438
b(is)h(an)e(e\013ect)h(of)h(uniform)f(suppression,)3432
62251 y(in)524 b(whic)-36 b(h)524 b(in)-36 b(tensities)524
b(one)g(could)g(see)h(as)f(relativ)-36 b(ely)526 b(uniform)f(w)-36
b(ere)524 b(appro)-36 b(ximated)3432 63856 y(as)434 b(suc)-36
b(h.)24367 75163 y(15)p eop end
%%Page: 16 16
TeXDict begin 16 15 bop 13297 17930 a Fj(I)473 b Fk(=)15725
14808 y Fg(8)15725 16004 y(>)15725 16402 y(<)15725 18793
y(>)15725 19192 y(:)16906 16057 y Fk(1)10420 b(if)434
b Fj(x)369 b Fh(2)g Fk([1)h(:)f(10])16906 17983 y Fj(i)295
b Fh(\000)g Fk(9)434 b(or)f(\(2)370 b Fh(!)f Fk(81\))1301
b(if)434 b Fj(x)369 b Fh(2)g Fk([11)h(:)f(89])16906 19909
y(82)9770 b(if)434 b Fj(x)369 b Fh(2)g Fk([90)h(:)f(100])3432
53422 y @beginspecial 50 @llx 50 @lly 410 @urx 302 @ury
4252 @rwi 2834 @rhi @setspecial
%%BeginDocument: data/figures/7.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ./data/figures/7.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Sat Oct  5 22:56:20 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (./data/figures/7.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (john)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Oct  5 22:56:20 2013)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
686 448 M
63 0 V
6198 0 R
-63 0 V
602 448 M
( 0) Rshow
1.000 UL
LTb
686 865 M
63 0 V
6198 0 R
-63 0 V
602 865 M
( 0.5) Rshow
1.000 UL
LTb
686 1282 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 1) Rshow
1.000 UL
LTb
686 1699 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 1.5) Rshow
1.000 UL
LTb
686 2116 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 2) Rshow
1.000 UL
LTb
686 2534 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 2.5) Rshow
1.000 UL
LTb
686 2951 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 3) Rshow
1.000 UL
LTb
686 3368 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 3.5) Rshow
1.000 UL
LTb
686 3785 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 4) Rshow
1.000 UL
LTb
686 4202 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 4.5) Rshow
1.000 UL
LTb
686 4619 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 5) Rshow
1.000 UL
LTb
686 448 M
0 63 V
0 4108 R
0 -63 V
686 308 M
( 0) Cshow
1.000 UL
LTb
1312 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 10) Cshow
1.000 UL
LTb
1938 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 20) Cshow
1.000 UL
LTb
2564 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 30) Cshow
1.000 UL
LTb
3190 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 40) Cshow
1.000 UL
LTb
3817 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 50) Cshow
1.000 UL
LTb
4443 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 60) Cshow
1.000 UL
LTb
5069 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 70) Cshow
1.000 UL
LTb
5695 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 80) Cshow
1.000 UL
LTb
6321 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 90) Cshow
1.000 UL
LTb
6947 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 100) Cshow
1.000 UL
LTb
1.000 UL
LTb
686 4619 N
686 448 L
6261 0 V
0 4171 V
-6261 0 V
Z stroke
LCb setrgbcolor
112 2533 M
currentpoint gsave translate -270 rotate 0 0 M
(Equilibrium Potential \(mV\)) Cshow
grestore
LTb
LCb setrgbcolor
3816 98 M
(Neuron \(1-100\)) Cshow
LTb
3816 4829 M
(Configuration 7) Cshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UL
LT0
/Helvetica findfont 140 scalefont setfont
749 3581 M
811 2356 L
874 1054 L
936 461 L
63 280 V
63 884 V
62 906 V
63 518 V
62 -107 V
63 129 V
63 288 V
62 264 V
63 166 V
63 86 V
62 41 V
63 20 V
62 11 V
63 7 V
63 5 V
62 5 V
63 4 V
62 3 V
63 2 V
63 3 V
62 2 V
63 2 V
62 1 V
63 2 V
63 1 V
62 1 V
63 1 V
63 1 V
62 1 V
63 1 V
62 1 V
63 0 V
63 1 V
62 1 V
63 0 V
62 1 V
63 0 V
63 1 V
62 0 V
63 1 V
62 0 V
63 0 V
63 1 V
62 0 V
63 1 V
63 0 V
62 0 V
63 0 V
62 1 V
63 0 V
63 0 V
62 0 V
63 1 V
62 0 V
63 0 V
63 0 V
62 0 V
63 1 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 1 V
63 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 1 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 1 V
62 0 V
63 2 V
63 3 V
62 5 V
63 4 V
63 2 V
62 -2 V
63 -4 V
62 11 V
63 33 V
63 71 V
62 121 V
63 150 V
62 73 V
63 -202 V
% End plot #1
% Begin plot #2
1.000 UP
stroke
LT1
0.00 0.00 1.00 C /Helvetica findfont 140 scalefont setfont
749 3581 Pls
811 2356 Pls
874 1054 Pls
936 461 Pls
999 741 Pls
1062 1625 Pls
1124 2531 Pls
1187 3049 Pls
1249 2942 Pls
1312 3071 Pls
1375 3359 Pls
1437 3623 Pls
1500 3789 Pls
1563 3875 Pls
1625 3916 Pls
1688 3936 Pls
1750 3947 Pls
1813 3954 Pls
1876 3959 Pls
1938 3964 Pls
2001 3968 Pls
2063 3971 Pls
2126 3973 Pls
2189 3976 Pls
2251 3978 Pls
2314 3980 Pls
2376 3981 Pls
2439 3983 Pls
2502 3984 Pls
2564 3985 Pls
2627 3986 Pls
2690 3987 Pls
2752 3988 Pls
2815 3989 Pls
2877 3990 Pls
2940 3990 Pls
3003 3991 Pls
3065 3992 Pls
3128 3992 Pls
3190 3993 Pls
3253 3993 Pls
3316 3994 Pls
3378 3994 Pls
3441 3995 Pls
3503 3995 Pls
3566 3995 Pls
3629 3996 Pls
3691 3996 Pls
3754 3997 Pls
3817 3997 Pls
3879 3997 Pls
3942 3997 Pls
4004 3998 Pls
4067 3998 Pls
4130 3998 Pls
4192 3998 Pls
4255 3999 Pls
4317 3999 Pls
4380 3999 Pls
4443 3999 Pls
4505 3999 Pls
4568 4000 Pls
4630 4000 Pls
4693 4000 Pls
4756 4000 Pls
4818 4000 Pls
4881 4000 Pls
4943 4001 Pls
5006 4001 Pls
5069 4001 Pls
5131 4001 Pls
5194 4001 Pls
5257 4001 Pls
5319 4001 Pls
5382 4001 Pls
5444 4002 Pls
5507 4002 Pls
5570 4002 Pls
5632 4002 Pls
5695 4002 Pls
5757 4002 Pls
5820 4002 Pls
5883 4002 Pls
5945 4002 Pls
6008 4003 Pls
6070 4003 Pls
6133 4005 Pls
6196 4008 Pls
6258 4013 Pls
6321 4017 Pls
6384 4019 Pls
6446 4017 Pls
6509 4013 Pls
6571 4024 Pls
6634 4057 Pls
6697 4128 Pls
6759 4249 Pls
6822 4399 Pls
6884 4472 Pls
6947 4270 Pls
% End plot #2
1.000 UL
LTb
686 4619 N
686 448 L
6261 0 V
0 4171 V
-6261 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 14337 57573 a(Figure)433 b(7:)579 b(Input)433
b(Sc)-36 b(heme)432 b(4,)i(F=2,)g(G=4)3432 59808 y(These)319
b(ma)-36 b(y)319 b(the)g(plots)g(con)-36 b(taining)319
b(\\artifacts")i(due)d(to)h(the)g(wrap-around)f(condition.)3432
61414 y(I'm)575 b(actually)g(not)g(sure)f(what)h(constitutes)f(an)h
(artifact,)611 b(although)574 b(I)h(assume)g(the)3432
63019 y(sharp)487 b(c)-36 b(hanges)489 b(near)f(the)g(b)36
b(eginning)489 b(and)f(end)g(of)h(the)f(plot)g(are)h(due)f(to)h(the)f
(sharp)3432 64624 y(di\013erence)359 b(in)h(curren)-36
b(t)359 b(in)-36 b(tensit)g(y)360 b(b)36 b(et)-36 b(w)g(een)360
b(the)g(b)36 b(eginning)360 b(and)g(end)g(of)h(the)f(net)-36
b(w)g(ork.)24367 75163 y(16)p eop end
%%Page: 17 17
TeXDict begin 17 16 bop 13297 15651 a Fj(I)473 b Fk(=)15725
12529 y Fg(8)15725 13725 y(>)15725 14124 y(<)15725 16515
y(>)15725 16913 y(:)16906 13778 y Fk(1)10420 b(if)434
b Fj(x)369 b Fh(2)g Fk([1)h(:)f(10])16906 15704 y Fj(i)295
b Fh(\000)g Fk(9)434 b(or)f(\(2)370 b Fh(!)f Fk(81\))1301
b(if)434 b Fj(x)369 b Fh(2)g Fk([11)h(:)f(89])16906 17630
y(82)9770 b(if)434 b Fj(x)369 b Fh(2)g Fk([90)h(:)f(100])3432
51144 y @beginspecial 50 @llx 50 @lly 410 @urx 302 @ury
4252 @rwi 2834 @rhi @setspecial
%%BeginDocument: data/figures/8.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ./data/figures/8.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Sat Oct  5 22:56:20 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (./data/figures/8.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (john)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Oct  5 22:56:20 2013)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
686 448 M
63 0 V
6198 0 R
-63 0 V
602 448 M
( 0) Rshow
1.000 UL
LTb
686 865 M
63 0 V
6198 0 R
-63 0 V
602 865 M
( 0.5) Rshow
1.000 UL
LTb
686 1282 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 1) Rshow
1.000 UL
LTb
686 1699 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 1.5) Rshow
1.000 UL
LTb
686 2116 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 2) Rshow
1.000 UL
LTb
686 2534 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 2.5) Rshow
1.000 UL
LTb
686 2951 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 3) Rshow
1.000 UL
LTb
686 3368 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 3.5) Rshow
1.000 UL
LTb
686 3785 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 4) Rshow
1.000 UL
LTb
686 4202 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 4.5) Rshow
1.000 UL
LTb
686 4619 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 5) Rshow
1.000 UL
LTb
686 448 M
0 63 V
0 4108 R
0 -63 V
686 308 M
( 0) Cshow
1.000 UL
LTb
1312 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 10) Cshow
1.000 UL
LTb
1938 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 20) Cshow
1.000 UL
LTb
2564 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 30) Cshow
1.000 UL
LTb
3190 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 40) Cshow
1.000 UL
LTb
3817 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 50) Cshow
1.000 UL
LTb
4443 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 60) Cshow
1.000 UL
LTb
5069 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 70) Cshow
1.000 UL
LTb
5695 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 80) Cshow
1.000 UL
LTb
6321 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 90) Cshow
1.000 UL
LTb
6947 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 100) Cshow
1.000 UL
LTb
1.000 UL
LTb
686 4619 N
686 448 L
6261 0 V
0 4171 V
-6261 0 V
Z stroke
LCb setrgbcolor
112 2533 M
currentpoint gsave translate -270 rotate 0 0 M
(Equilibrium Potential \(mV\)) Cshow
grestore
LTb
LCb setrgbcolor
3816 98 M
(Neuron \(1-100\)) Cshow
LTb
3816 4829 M
(Configuration 8) Cshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UL
LT0
/Helvetica findfont 140 scalefont setfont
749 3809 M
62 -482 V
63 -613 V
62 -692 V
63 -673 V
63 -530 V
62 -280 V
63 23 V
62 315 V
63 595 V
63 642 V
62 586 V
63 464 V
63 329 V
62 216 V
63 135 V
62 52 V
63 33 V
63 22 V
62 14 V
63 9 V
62 5 V
63 4 V
63 2 V
62 1 V
63 1 V
62 1 V
63 1 V
63 0 V
62 1 V
63 1 V
63 0 V
62 0 V
63 1 V
62 0 V
63 1 V
63 0 V
62 0 V
63 1 V
62 0 V
63 0 V
63 0 V
62 1 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 1 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 1 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 1 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 1 V
62 0 V
63 1 V
62 1 V
63 1 V
63 2 V
62 3 V
63 3 V
62 10 V
63 13 V
63 17 V
62 23 V
63 29 V
63 38 V
62 49 V
63 58 V
62 67 V
63 71 V
63 61 V
62 32 V
63 -21 V
62 -101 V
63 -208 V
% End plot #1
% Begin plot #2
1.000 UP
stroke
LT1
0.00 0.00 1.00 C /Helvetica findfont 140 scalefont setfont
749 3809 Pls
811 3327 Pls
874 2714 Pls
936 2022 Pls
999 1349 Pls
1062 819 Pls
1124 539 Pls
1187 562 Pls
1249 877 Pls
1312 1472 Pls
1375 2114 Pls
1437 2700 Pls
1500 3164 Pls
1563 3493 Pls
1625 3709 Pls
1688 3844 Pls
1750 3896 Pls
1813 3929 Pls
1876 3951 Pls
1938 3965 Pls
2001 3974 Pls
2063 3979 Pls
2126 3983 Pls
2189 3985 Pls
2251 3986 Pls
2314 3987 Pls
2376 3988 Pls
2439 3989 Pls
2502 3989 Pls
2564 3990 Pls
2627 3991 Pls
2690 3991 Pls
2752 3991 Pls
2815 3992 Pls
2877 3992 Pls
2940 3993 Pls
3003 3993 Pls
3065 3993 Pls
3128 3994 Pls
3190 3994 Pls
3253 3994 Pls
3316 3994 Pls
3378 3995 Pls
3441 3995 Pls
3503 3995 Pls
3566 3995 Pls
3629 3995 Pls
3691 3995 Pls
3754 3996 Pls
3817 3996 Pls
3879 3996 Pls
3942 3996 Pls
4004 3996 Pls
4067 3996 Pls
4130 3996 Pls
4192 3997 Pls
4255 3997 Pls
4317 3997 Pls
4380 3997 Pls
4443 3997 Pls
4505 3997 Pls
4568 3997 Pls
4630 3997 Pls
4693 3997 Pls
4756 3997 Pls
4818 3998 Pls
4881 3998 Pls
4943 3998 Pls
5006 3998 Pls
5069 3998 Pls
5131 3998 Pls
5194 3998 Pls
5257 3998 Pls
5319 3998 Pls
5382 3998 Pls
5444 3998 Pls
5507 3998 Pls
5570 3999 Pls
5632 3999 Pls
5695 4000 Pls
5757 4001 Pls
5820 4002 Pls
5883 4004 Pls
5945 4007 Pls
6008 4010 Pls
6070 4020 Pls
6133 4033 Pls
6196 4050 Pls
6258 4073 Pls
6321 4102 Pls
6384 4140 Pls
6446 4189 Pls
6509 4247 Pls
6571 4314 Pls
6634 4385 Pls
6697 4446 Pls
6759 4478 Pls
6822 4457 Pls
6884 4356 Pls
6947 4148 Pls
% End plot #2
1.000 UL
LTb
686 4619 N
686 448 L
6261 0 V
0 4171 V
-6261 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 14337 55295 a(Figure)433 b(8:)579 b(Input)433
b(Sc)-36 b(heme)432 b(4,)i(F=4,)g(G=8)3432 57530 y(The)641
b(smo)36 b(othing)641 b(b)36 b(eha)-36 b(vior)642 b(is)g(exp)36
b(ected)641 b(here,)693 b(and)640 b(the)h(sharp)f(c)-36
b(hanges)642 b(should)3432 59135 y(again)388 b(b)36 b(e)387
b(attributed)f(to)i(the)f(wrap-around)f(condition.)563
b(I)388 b(supp)36 b(ose)387 b(if)h(I)f(had)g(padded)3432
60740 y(the)498 b(edges)h(with)g(their)f(b)36 b(order-v)-72
b(alue)499 b(\(i.e)g(plen)-36 b(t)g(y)498 b(of)i(1's)g(to)-36
b(w)g(ard)499 b(-x)f(and)h(plen)-36 b(t)g(y)498 b(of)3432
62345 y(82's)565 b(to)-36 b(w)g(ard)565 b(+x\).)971 b(Still,)598
b(I)565 b(w)-36 b(ould)565 b(b)36 b(e)564 b(hesitan)-36
b(t)564 b(to)h(compare)g(this)f(to)h(our)f(initial)3432
63950 y(ramp)36 b(ed)541 b(curren)-36 b(t,)568 b(and)541
b(the)g(di\013erence)g(b)36 b(et)-36 b(w)g(een)542 b(the)f(t)-36
b(w)g(o)542 b(should)f(b)36 b(e)542 b(adapted)f(to)3432
65555 y(the)515 b(distance-dep)36 b(enden)-36 b(t)514
b(nature)i(of)h(the)f(net)-36 b(w)g(ork,)538 b(in)516
b(whic)-36 b(h)516 b(only)h(lo)36 b(cal)518 b(neurons)3432
67161 y(inhibit)433 b(the)g(neuron)f(at)i(hand.)24367
75163 y(17)p eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
